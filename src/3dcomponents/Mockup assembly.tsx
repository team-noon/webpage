/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/3dFiles/Mockup assembly.gltf --transform --types 
Files: ./public/3dFiles/Mockup assembly.gltf [721.36KB] > /home/utelagazkodas/code/repos/webpage/Mockup assembly-transformed.glb [36.06KB] (95%)
*/

import * as THREE from 'three'
import  { forwardRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import colors from '../colors'

type GLTFResult = GLTF & {
  nodes: {
    LeftUpperLeg: THREE.Mesh
  }
  materials: {
    PaletteMaterial001: THREE.MeshStandardMaterial
  }
}

export const RobotModel = forwardRef<THREE.Group, JSX.IntrinsicElements['group']>((props, ref) => {
  const { nodes, materials } = useGLTF('/3dFiles/Mockup assembly-transformed.glb') as GLTFResult

  materials.PaletteMaterial001.color=new THREE.Color(colors.secondary200.hex)
  return (
    <group ref={ref} {...props} dispose={null}>
      <mesh geometry={nodes.LeftUpperLeg.geometry} material={materials.PaletteMaterial001} position={[-0.073, -0.016, -0.197]} rotation={[-0.368, -1.436, -0.394]} />
    </group>
  )
})

useGLTF.preload('/3dFiles/Mockup assembly-transformed.glb')

import{r as fn,a as Ry,g as Cy,j as d0}from"./index-tpyN-LdD.js";/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const zc="157",Py={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Ly={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},p0=0,mf=1,m0=2,Iy=3,g0=0,kc=1,Qa=2,pi=3,er=0,Ln=1,Ri=2,Uy=2,$i=0,rs=1,gf=2,_f=3,vf=4,_0=5,jr=100,v0=101,y0=102,yf=103,xf=104,x0=200,S0=201,M0=202,E0=203,rd=204,sd=205,w0=206,T0=207,A0=208,b0=209,R0=210,C0=0,P0=1,L0=2,Uc=3,I0=4,U0=5,D0=6,N0=7,Ao=0,O0=1,F0=2,Li=0,B0=1,z0=2,k0=3,ad=4,H0=5,Hc=300,tr=301,Tr=302,ro=303,so=304,da=306,ao=1e3,Tn=1001,oo=1002,Zt=1003,Dc=1004,Dy=1004,$a=1005,Ny=1005,Jt=1006,od=1007,Oy=1007,Ar=1008,Fy=1008,Ii=1009,V0=1010,G0=1011,Vc=1012,ld=1013,Qi=1014,Ci=1015,la=1016,cd=1017,ud=1018,Mr=1020,W0=1021,zn=1023,X0=1024,q0=1025,Er=1026,ls=1027,Y0=1028,hd=1029,Z0=1030,fd=1031,dd=1033,wc=33776,Tc=33777,Ac=33778,bc=33779,Sf=35840,Mf=35841,Ef=35842,wf=35843,J0=36196,Tf=37492,Af=37496,bf=37808,Rf=37809,Cf=37810,Pf=37811,Lf=37812,If=37813,Uf=37814,Df=37815,Nf=37816,Of=37817,Ff=37818,Bf=37819,zf=37820,kf=37821,Rc=36492,Hf=36494,Vf=36495,K0=36283,Gf=36284,Wf=36285,Xf=36286,j0=2200,Q0=2201,$0=2202,lo=2300,co=2301,Cc=2302,$r=2400,es=2401,uo=2402,Gc=2500,pd=2501,By=0,zy=1,ky=2,md=3e3,wr=3001,e_=3200,t_=3201,Rr=0,n_=1,jn="",rn="srgb",Di="srgb-linear",Wc="display-p3",bo="display-p3-linear",ho="linear",Dt="srgb",fo="rec709",po="p3",Hy=0,Pc=7680,Vy=7681,Gy=7682,Wy=7683,Xy=34055,qy=34056,Yy=5386,Zy=512,Jy=513,Ky=514,jy=515,Qy=516,$y=517,ex=518,i_=519,r_=512,s_=513,a_=514,o_=515,l_=516,c_=517,u_=518,h_=519,mo=35044,tx=35048,nx=35040,ix=35045,rx=35049,sx=35041,ax=35046,ox=35050,lx=35042,cx="100",qf="300 es",Nc=1035,Pi=2e3,go=2001;class ir{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,l=i.length;s<l;s++)i[s].call(this,e);e.target=null}}}const En=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let wm=1234567;const ss=Math.PI/180,ca=180/Math.PI;function Qn(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(En[r&255]+En[r>>8&255]+En[r>>16&255]+En[r>>24&255]+"-"+En[e&255]+En[e>>8&255]+"-"+En[e>>16&15|64]+En[e>>24&255]+"-"+En[t&63|128]+En[t>>8&255]+"-"+En[t>>16&255]+En[t>>24&255]+En[n&255]+En[n>>8&255]+En[n>>16&255]+En[n>>24&255]).toLowerCase()}function Xt(r,e,t){return Math.max(e,Math.min(t,r))}function gd(r,e){return(r%e+e)%e}function ux(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function hx(r,e,t){return r!==e?(t-r)/(e-r):0}function eo(r,e,t){return(1-t)*r+t*e}function fx(r,e,t,n){return eo(r,e,1-Math.exp(-t*n))}function dx(r,e=1){return e-Math.abs(gd(r,e*2)-e)}function px(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function mx(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function gx(r,e){return r+Math.floor(Math.random()*(e-r+1))}function _x(r,e){return r+Math.random()*(e-r)}function vx(r){return r*(.5-Math.random())}function yx(r){r!==void 0&&(wm=r);let e=wm+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function xx(r){return r*ss}function Sx(r){return r*ca}function Yf(r){return(r&r-1)===0&&r!==0}function f_(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function Oc(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function Mx(r,e,t,n,i){const s=Math.cos,l=Math.sin,c=s(t/2),u=l(t/2),h=s((e+n)/2),d=l((e+n)/2),p=s((e-n)/2),m=l((e-n)/2),_=s((n-e)/2),y=l((n-e)/2);switch(i){case"XYX":r.set(c*d,u*p,u*m,c*h);break;case"YZY":r.set(u*m,c*d,u*p,c*h);break;case"ZXZ":r.set(u*p,u*m,c*d,c*h);break;case"XZX":r.set(c*d,u*y,u*_,c*h);break;case"YXY":r.set(u*_,c*d,u*y,c*h);break;case"ZYZ":r.set(u*y,u*_,c*d,c*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function kn(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function ut(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const Ex={DEG2RAD:ss,RAD2DEG:ca,generateUUID:Qn,clamp:Xt,euclideanModulo:gd,mapLinear:ux,inverseLerp:hx,lerp:eo,damp:fx,pingpong:dx,smoothstep:px,smootherstep:mx,randInt:gx,randFloat:_x,randFloatSpread:vx,seededRandom:yx,degToRad:xx,radToDeg:Sx,isPowerOfTwo:Yf,ceilPowerOfTwo:f_,floorPowerOfTwo:Oc,setQuaternionFromProperEuler:Mx,normalize:ut,denormalize:kn};class ce{constructor(e=0,t=0){ce.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Xt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,l=this.y-e.y;return this.x=s*n-l*i+e.x,this.y=s*i+l*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class ft{constructor(e,t,n,i,s,l,c,u,h){ft.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,l,c,u,h)}set(e,t,n,i,s,l,c,u,h){const d=this.elements;return d[0]=e,d[1]=i,d[2]=c,d[3]=t,d[4]=s,d[5]=u,d[6]=n,d[7]=l,d[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[3],u=n[6],h=n[1],d=n[4],p=n[7],m=n[2],_=n[5],y=n[8],E=i[0],x=i[3],v=i[6],w=i[1],M=i[4],A=i[7],R=i[2],P=i[5],I=i[8];return s[0]=l*E+c*w+u*R,s[3]=l*x+c*M+u*P,s[6]=l*v+c*A+u*I,s[1]=h*E+d*w+p*R,s[4]=h*x+d*M+p*P,s[7]=h*v+d*A+p*I,s[2]=m*E+_*w+y*R,s[5]=m*x+_*M+y*P,s[8]=m*v+_*A+y*I,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],d=e[8];return t*l*d-t*c*h-n*s*d+n*c*u+i*s*h-i*l*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],d=e[8],p=d*l-c*h,m=c*u-d*s,_=h*s-l*u,y=t*p+n*m+i*_;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const E=1/y;return e[0]=p*E,e[1]=(i*h-d*n)*E,e[2]=(c*n-i*l)*E,e[3]=m*E,e[4]=(d*t-i*u)*E,e[5]=(i*s-c*t)*E,e[6]=_*E,e[7]=(n*u-h*t)*E,e[8]=(l*t-n*s)*E,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,l,c){const u=Math.cos(s),h=Math.sin(s);return this.set(n*u,n*h,-n*(u*l+h*c)+l+e,-i*h,i*u,-i*(-h*l+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(Mh.makeScale(e,t)),this}rotate(e){return this.premultiply(Mh.makeRotation(-e)),this}translate(e,t){return this.premultiply(Mh.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Mh=new ft;function d_(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const wx={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function ta(r,e){return new wx[r](e)}function _o(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function p_(){const r=_o("canvas");return r.style.display="block",r}const Tm={};function to(r){r in Tm||(Tm[r]=!0,console.warn(r))}const Am=new ft().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),bm=new ft().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),Dl={[Di]:{transfer:ho,primaries:fo,toReference:r=>r,fromReference:r=>r},[rn]:{transfer:Dt,primaries:fo,toReference:r=>r.convertSRGBToLinear(),fromReference:r=>r.convertLinearToSRGB()},[bo]:{transfer:ho,primaries:po,toReference:r=>r.applyMatrix3(bm),fromReference:r=>r.applyMatrix3(Am)},[Wc]:{transfer:Dt,primaries:po,toReference:r=>r.convertSRGBToLinear().applyMatrix3(bm),fromReference:r=>r.applyMatrix3(Am).convertLinearToSRGB()}},Tx=new Set([Di,bo]),bt={enabled:!0,_workingColorSpace:Di,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(r){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!r},get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(r){if(!Tx.has(r))throw new Error(`Unsupported working color space, "${r}".`);this._workingColorSpace=r},convert:function(r,e,t){if(this.enabled===!1||e===t||!e||!t)return r;const n=Dl[e].toReference,i=Dl[t].fromReference;return i(n(r))},fromWorkingColorSpace:function(r,e){return this.convert(r,this._workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this._workingColorSpace)},getPrimaries:function(r){return Dl[r].primaries},getTransfer:function(r){return r===jn?ho:Dl[r].transfer}};function aa(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Eh(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let Cs;class _d{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Cs===void 0&&(Cs=_o("canvas")),Cs.width=e.width,Cs.height=e.height;const n=Cs.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Cs}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=_o("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let l=0;l<s.length;l++)s[l]=aa(s[l]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(aa(t[n]/255)*255):t[n]=aa(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let Ax=0;class ts{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Ax++}),this.uuid=Qn(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let l=0,c=i.length;l<c;l++)i[l].isDataTexture?s.push(wh(i[l].image)):s.push(wh(i[l]))}else s=wh(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function wh(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?_d.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let bx=0;class Kt extends ir{constructor(e=Kt.DEFAULT_IMAGE,t=Kt.DEFAULT_MAPPING,n=Tn,i=Tn,s=Jt,l=Ar,c=zn,u=Ii,h=Kt.DEFAULT_ANISOTROPY,d=jn){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:bx++}),this.uuid=Qn(),this.name="",this.source=new ts(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=l,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=u,this.offset=new ce(0,0),this.repeat=new ce(1,1),this.center=new ce(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ft,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof d=="string"?this.colorSpace=d:(to("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=d===wr?rn:jn),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Hc)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ao:e.x=e.x-Math.floor(e.x);break;case Tn:e.x=e.x<0?0:1;break;case oo:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case ao:e.y=e.y-Math.floor(e.y);break;case Tn:e.y=e.y<0?0:1;break;case oo:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return to("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===rn?wr:md}set encoding(e){to("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===wr?rn:jn}}Kt.DEFAULT_IMAGE=null;Kt.DEFAULT_MAPPING=Hc;Kt.DEFAULT_ANISOTROPY=1;class Rt{constructor(e=0,t=0,n=0,i=1){Rt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,l=e.elements;return this.x=l[0]*t+l[4]*n+l[8]*i+l[12]*s,this.y=l[1]*t+l[5]*n+l[9]*i+l[13]*s,this.z=l[2]*t+l[6]*n+l[10]*i+l[14]*s,this.w=l[3]*t+l[7]*n+l[11]*i+l[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const u=e.elements,h=u[0],d=u[4],p=u[8],m=u[1],_=u[5],y=u[9],E=u[2],x=u[6],v=u[10];if(Math.abs(d-m)<.01&&Math.abs(p-E)<.01&&Math.abs(y-x)<.01){if(Math.abs(d+m)<.1&&Math.abs(p+E)<.1&&Math.abs(y+x)<.1&&Math.abs(h+_+v-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const M=(h+1)/2,A=(_+1)/2,R=(v+1)/2,P=(d+m)/4,I=(p+E)/4,F=(y+x)/4;return M>A&&M>R?M<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(M),i=P/n,s=I/n):A>R?A<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(A),n=P/i,s=F/i):R<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(R),n=I/s,i=F/s),this.set(n,i,s,t),this}let w=Math.sqrt((x-y)*(x-y)+(p-E)*(p-E)+(m-d)*(m-d));return Math.abs(w)<.001&&(w=1),this.x=(x-y)/w,this.y=(p-E)/w,this.z=(m-d)/w,this.w=Math.acos((h+_+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class m_ extends ir{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Rt(0,0,e,t),this.scissorTest=!1,this.viewport=new Rt(0,0,e,t);const i={width:e,height:t,depth:1};n.encoding!==void 0&&(to("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===wr?rn:jn),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Jt,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0},n),this.texture=new Kt(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps,this.texture.internalFormat=n.internalFormat,this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new ts(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class gi extends m_{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class Xc extends Kt{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Zt,this.minFilter=Zt,this.wrapR=Tn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Rx extends gi{constructor(e=1,t=1,n=1){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Xc(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class vd extends Kt{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Zt,this.minFilter=Zt,this.wrapR=Tn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Cx extends gi{constructor(e=1,t=1,n=1){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new vd(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Px extends gi{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const s=this.texture;this.texture=[];for(let l=0;l<n;l++)this.texture[l]=s.clone(),this.texture[l].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class Hn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,l,c){let u=n[i+0],h=n[i+1],d=n[i+2],p=n[i+3];const m=s[l+0],_=s[l+1],y=s[l+2],E=s[l+3];if(c===0){e[t+0]=u,e[t+1]=h,e[t+2]=d,e[t+3]=p;return}if(c===1){e[t+0]=m,e[t+1]=_,e[t+2]=y,e[t+3]=E;return}if(p!==E||u!==m||h!==_||d!==y){let x=1-c;const v=u*m+h*_+d*y+p*E,w=v>=0?1:-1,M=1-v*v;if(M>Number.EPSILON){const R=Math.sqrt(M),P=Math.atan2(R,v*w);x=Math.sin(x*P)/R,c=Math.sin(c*P)/R}const A=c*w;if(u=u*x+m*A,h=h*x+_*A,d=d*x+y*A,p=p*x+E*A,x===1-c){const R=1/Math.sqrt(u*u+h*h+d*d+p*p);u*=R,h*=R,d*=R,p*=R}}e[t]=u,e[t+1]=h,e[t+2]=d,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,i,s,l){const c=n[i],u=n[i+1],h=n[i+2],d=n[i+3],p=s[l],m=s[l+1],_=s[l+2],y=s[l+3];return e[t]=c*y+d*p+u*_-h*m,e[t+1]=u*y+d*m+h*p-c*_,e[t+2]=h*y+d*_+c*m-u*p,e[t+3]=d*y-c*p-u*m-h*_,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,s=e._z,l=e._order,c=Math.cos,u=Math.sin,h=c(n/2),d=c(i/2),p=c(s/2),m=u(n/2),_=u(i/2),y=u(s/2);switch(l){case"XYZ":this._x=m*d*p+h*_*y,this._y=h*_*p-m*d*y,this._z=h*d*y+m*_*p,this._w=h*d*p-m*_*y;break;case"YXZ":this._x=m*d*p+h*_*y,this._y=h*_*p-m*d*y,this._z=h*d*y-m*_*p,this._w=h*d*p+m*_*y;break;case"ZXY":this._x=m*d*p-h*_*y,this._y=h*_*p+m*d*y,this._z=h*d*y+m*_*p,this._w=h*d*p-m*_*y;break;case"ZYX":this._x=m*d*p-h*_*y,this._y=h*_*p+m*d*y,this._z=h*d*y-m*_*p,this._w=h*d*p+m*_*y;break;case"YZX":this._x=m*d*p+h*_*y,this._y=h*_*p+m*d*y,this._z=h*d*y-m*_*p,this._w=h*d*p-m*_*y;break;case"XZY":this._x=m*d*p-h*_*y,this._y=h*_*p-m*d*y,this._z=h*d*y+m*_*p,this._w=h*d*p+m*_*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],l=t[1],c=t[5],u=t[9],h=t[2],d=t[6],p=t[10],m=n+c+p;if(m>0){const _=.5/Math.sqrt(m+1);this._w=.25/_,this._x=(d-u)*_,this._y=(s-h)*_,this._z=(l-i)*_}else if(n>c&&n>p){const _=2*Math.sqrt(1+n-c-p);this._w=(d-u)/_,this._x=.25*_,this._y=(i+l)/_,this._z=(s+h)/_}else if(c>p){const _=2*Math.sqrt(1+c-n-p);this._w=(s-h)/_,this._x=(i+l)/_,this._y=.25*_,this._z=(u+d)/_}else{const _=2*Math.sqrt(1+p-n-c);this._w=(l-i)/_,this._x=(s+h)/_,this._y=(u+d)/_,this._z=.25*_}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Xt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,l=e._w,c=t._x,u=t._y,h=t._z,d=t._w;return this._x=n*d+l*c+i*h-s*u,this._y=i*d+l*u+s*c-n*h,this._z=s*d+l*h+n*u-i*c,this._w=l*d-n*c-i*u-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,l=this._w;let c=l*e._w+n*e._x+i*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=l,this._x=n,this._y=i,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const _=1-t;return this._w=_*l+t*this._w,this._x=_*n+t*this._x,this._y=_*i+t*this._y,this._z=_*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(u),d=Math.atan2(h,c),p=Math.sin((1-t)*d)/h,m=Math.sin(t*d)/h;return this._w=l*p+this._w*m,this._x=n*p+this._x*m,this._y=i*p+this._y*m,this._z=s*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class D{constructor(e=0,t=0,n=0){D.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Rm.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Rm.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,l=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*l,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*l,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*l,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,l=e.y,c=e.z,u=e.w,h=u*t+l*i-c*n,d=u*n+c*t-s*i,p=u*i+s*n-l*t,m=-s*t-l*n-c*i;return this.x=h*u+m*-s+d*-c-p*-l,this.y=d*u+m*-l+p*-s-h*-c,this.z=p*u+m*-c+h*-l-d*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,l=t.x,c=t.y,u=t.z;return this.x=i*u-s*c,this.y=s*l-n*u,this.z=n*c-i*l,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Th.copy(this).projectOnVector(e),this.sub(Th)}reflect(e){return this.sub(Th.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Xt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Th=new D,Rm=new Hn;class Oi{constructor(e=new D(1/0,1/0,1/0),t=new D(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Xi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Xi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Xi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){if(e.updateWorldMatrix(!1,!1),e.boundingBox!==void 0)e.boundingBox===null&&e.computeBoundingBox(),Ps.copy(e.boundingBox),Ps.applyMatrix4(e.matrixWorld),this.union(Ps);else{const i=e.geometry;if(i!==void 0)if(t&&i.attributes!==void 0&&i.attributes.position!==void 0){const s=i.attributes.position;for(let l=0,c=s.count;l<c;l++)Xi.fromBufferAttribute(s,l).applyMatrix4(e.matrixWorld),this.expandByPoint(Xi)}else i.boundingBox===null&&i.computeBoundingBox(),Ps.copy(i.boundingBox),Ps.applyMatrix4(e.matrixWorld),this.union(Ps)}const n=e.children;for(let i=0,s=n.length;i<s;i++)this.expandByObject(n[i],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Xi),Xi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Ba),Nl.subVectors(this.max,Ba),Ls.subVectors(e.a,Ba),Is.subVectors(e.b,Ba),Us.subVectors(e.c,Ba),pr.subVectors(Is,Ls),mr.subVectors(Us,Is),Hr.subVectors(Ls,Us);let t=[0,-pr.z,pr.y,0,-mr.z,mr.y,0,-Hr.z,Hr.y,pr.z,0,-pr.x,mr.z,0,-mr.x,Hr.z,0,-Hr.x,-pr.y,pr.x,0,-mr.y,mr.x,0,-Hr.y,Hr.x,0];return!Ah(t,Ls,Is,Us,Nl)||(t=[1,0,0,0,1,0,0,0,1],!Ah(t,Ls,Is,Us,Nl))?!1:(Ol.crossVectors(pr,mr),t=[Ol.x,Ol.y,Ol.z],Ah(t,Ls,Is,Us,Nl))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Xi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Xi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Wi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Wi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Wi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Wi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Wi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Wi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Wi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Wi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Wi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Wi=[new D,new D,new D,new D,new D,new D,new D,new D],Xi=new D,Ps=new Oi,Ls=new D,Is=new D,Us=new D,pr=new D,mr=new D,Hr=new D,Ba=new D,Nl=new D,Ol=new D,Vr=new D;function Ah(r,e,t,n,i){for(let s=0,l=r.length-3;s<=l;s+=3){Vr.fromArray(r,s);const c=i.x*Math.abs(Vr.x)+i.y*Math.abs(Vr.y)+i.z*Math.abs(Vr.z),u=e.dot(Vr),h=t.dot(Vr),d=n.dot(Vr);if(Math.max(-Math.max(u,h,d),Math.min(u,h,d))>c)return!1}return!0}const Lx=new Oi,za=new D,bh=new D;class _i{constructor(e=new D,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):Lx.setFromPoints(e).getCenter(n);let i=0;for(let s=0,l=e.length;s<l;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;za.subVectors(e,this.center);const t=za.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(za,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(bh.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(za.copy(e.center).add(bh)),this.expandByPoint(za.copy(e.center).sub(bh))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const qi=new D,Rh=new D,Fl=new D,gr=new D,Ch=new D,Bl=new D,Ph=new D;class pa{constructor(e=new D,t=new D(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,qi)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=qi.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(qi.copy(this.origin).addScaledVector(this.direction,t),qi.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Rh.copy(e).add(t).multiplyScalar(.5),Fl.copy(t).sub(e).normalize(),gr.copy(this.origin).sub(Rh);const s=e.distanceTo(t)*.5,l=-this.direction.dot(Fl),c=gr.dot(this.direction),u=-gr.dot(Fl),h=gr.lengthSq(),d=Math.abs(1-l*l);let p,m,_,y;if(d>0)if(p=l*u-c,m=l*c-u,y=s*d,p>=0)if(m>=-y)if(m<=y){const E=1/d;p*=E,m*=E,_=p*(p+l*m+2*c)+m*(l*p+m+2*u)+h}else m=s,p=Math.max(0,-(l*m+c)),_=-p*p+m*(m+2*u)+h;else m=-s,p=Math.max(0,-(l*m+c)),_=-p*p+m*(m+2*u)+h;else m<=-y?(p=Math.max(0,-(-l*s+c)),m=p>0?-s:Math.min(Math.max(-s,-u),s),_=-p*p+m*(m+2*u)+h):m<=y?(p=0,m=Math.min(Math.max(-s,-u),s),_=m*(m+2*u)+h):(p=Math.max(0,-(l*s+c)),m=p>0?s:Math.min(Math.max(-s,-u),s),_=-p*p+m*(m+2*u)+h);else m=l>0?-s:s,p=Math.max(0,-(l*m+c)),_=-p*p+m*(m+2*u)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,p),i&&i.copy(Rh).addScaledVector(Fl,m),_}intersectSphere(e,t){qi.subVectors(e.center,this.origin);const n=qi.dot(this.direction),i=qi.dot(qi)-n*n,s=e.radius*e.radius;if(i>s)return null;const l=Math.sqrt(s-i),c=n-l,u=n+l;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,l,c,u;const h=1/this.direction.x,d=1/this.direction.y,p=1/this.direction.z,m=this.origin;return h>=0?(n=(e.min.x-m.x)*h,i=(e.max.x-m.x)*h):(n=(e.max.x-m.x)*h,i=(e.min.x-m.x)*h),d>=0?(s=(e.min.y-m.y)*d,l=(e.max.y-m.y)*d):(s=(e.max.y-m.y)*d,l=(e.min.y-m.y)*d),n>l||s>i||((s>n||isNaN(n))&&(n=s),(l<i||isNaN(i))&&(i=l),p>=0?(c=(e.min.z-m.z)*p,u=(e.max.z-m.z)*p):(c=(e.max.z-m.z)*p,u=(e.min.z-m.z)*p),n>u||c>i)||((c>n||n!==n)&&(n=c),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,qi)!==null}intersectTriangle(e,t,n,i,s){Ch.subVectors(t,e),Bl.subVectors(n,e),Ph.crossVectors(Ch,Bl);let l=this.direction.dot(Ph),c;if(l>0){if(i)return null;c=1}else if(l<0)c=-1,l=-l;else return null;gr.subVectors(this.origin,e);const u=c*this.direction.dot(Bl.crossVectors(gr,Bl));if(u<0)return null;const h=c*this.direction.dot(Ch.cross(gr));if(h<0||u+h>l)return null;const d=-c*gr.dot(Ph);return d<0?null:this.at(d/l,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class lt{constructor(e,t,n,i,s,l,c,u,h,d,p,m,_,y,E,x){lt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,l,c,u,h,d,p,m,_,y,E,x)}set(e,t,n,i,s,l,c,u,h,d,p,m,_,y,E,x){const v=this.elements;return v[0]=e,v[4]=t,v[8]=n,v[12]=i,v[1]=s,v[5]=l,v[9]=c,v[13]=u,v[2]=h,v[6]=d,v[10]=p,v[14]=m,v[3]=_,v[7]=y,v[11]=E,v[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new lt().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Ds.setFromMatrixColumn(e,0).length(),s=1/Ds.setFromMatrixColumn(e,1).length(),l=1/Ds.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*l,t[9]=n[9]*l,t[10]=n[10]*l,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,l=Math.cos(n),c=Math.sin(n),u=Math.cos(i),h=Math.sin(i),d=Math.cos(s),p=Math.sin(s);if(e.order==="XYZ"){const m=l*d,_=l*p,y=c*d,E=c*p;t[0]=u*d,t[4]=-u*p,t[8]=h,t[1]=_+y*h,t[5]=m-E*h,t[9]=-c*u,t[2]=E-m*h,t[6]=y+_*h,t[10]=l*u}else if(e.order==="YXZ"){const m=u*d,_=u*p,y=h*d,E=h*p;t[0]=m+E*c,t[4]=y*c-_,t[8]=l*h,t[1]=l*p,t[5]=l*d,t[9]=-c,t[2]=_*c-y,t[6]=E+m*c,t[10]=l*u}else if(e.order==="ZXY"){const m=u*d,_=u*p,y=h*d,E=h*p;t[0]=m-E*c,t[4]=-l*p,t[8]=y+_*c,t[1]=_+y*c,t[5]=l*d,t[9]=E-m*c,t[2]=-l*h,t[6]=c,t[10]=l*u}else if(e.order==="ZYX"){const m=l*d,_=l*p,y=c*d,E=c*p;t[0]=u*d,t[4]=y*h-_,t[8]=m*h+E,t[1]=u*p,t[5]=E*h+m,t[9]=_*h-y,t[2]=-h,t[6]=c*u,t[10]=l*u}else if(e.order==="YZX"){const m=l*u,_=l*h,y=c*u,E=c*h;t[0]=u*d,t[4]=E-m*p,t[8]=y*p+_,t[1]=p,t[5]=l*d,t[9]=-c*d,t[2]=-h*d,t[6]=_*p+y,t[10]=m-E*p}else if(e.order==="XZY"){const m=l*u,_=l*h,y=c*u,E=c*h;t[0]=u*d,t[4]=-p,t[8]=h*d,t[1]=m*p+E,t[5]=l*d,t[9]=_*p-y,t[2]=y*p-_,t[6]=c*d,t[10]=E*p+m}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Ix,e,Ux)}lookAt(e,t,n){const i=this.elements;return Jn.subVectors(e,t),Jn.lengthSq()===0&&(Jn.z=1),Jn.normalize(),_r.crossVectors(n,Jn),_r.lengthSq()===0&&(Math.abs(n.z)===1?Jn.x+=1e-4:Jn.z+=1e-4,Jn.normalize(),_r.crossVectors(n,Jn)),_r.normalize(),zl.crossVectors(Jn,_r),i[0]=_r.x,i[4]=zl.x,i[8]=Jn.x,i[1]=_r.y,i[5]=zl.y,i[9]=Jn.y,i[2]=_r.z,i[6]=zl.z,i[10]=Jn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[4],u=n[8],h=n[12],d=n[1],p=n[5],m=n[9],_=n[13],y=n[2],E=n[6],x=n[10],v=n[14],w=n[3],M=n[7],A=n[11],R=n[15],P=i[0],I=i[4],F=i[8],b=i[12],L=i[1],H=i[5],ee=i[9],oe=i[13],V=i[2],$=i[6],ae=i[10],se=i[14],q=i[3],X=i[7],Y=i[11],k=i[15];return s[0]=l*P+c*L+u*V+h*q,s[4]=l*I+c*H+u*$+h*X,s[8]=l*F+c*ee+u*ae+h*Y,s[12]=l*b+c*oe+u*se+h*k,s[1]=d*P+p*L+m*V+_*q,s[5]=d*I+p*H+m*$+_*X,s[9]=d*F+p*ee+m*ae+_*Y,s[13]=d*b+p*oe+m*se+_*k,s[2]=y*P+E*L+x*V+v*q,s[6]=y*I+E*H+x*$+v*X,s[10]=y*F+E*ee+x*ae+v*Y,s[14]=y*b+E*oe+x*se+v*k,s[3]=w*P+M*L+A*V+R*q,s[7]=w*I+M*H+A*$+R*X,s[11]=w*F+M*ee+A*ae+R*Y,s[15]=w*b+M*oe+A*se+R*k,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],l=e[1],c=e[5],u=e[9],h=e[13],d=e[2],p=e[6],m=e[10],_=e[14],y=e[3],E=e[7],x=e[11],v=e[15];return y*(+s*u*p-i*h*p-s*c*m+n*h*m+i*c*_-n*u*_)+E*(+t*u*_-t*h*m+s*l*m-i*l*_+i*h*d-s*u*d)+x*(+t*h*p-t*c*_-s*l*p+n*l*_+s*c*d-n*h*d)+v*(-i*c*d-t*u*p+t*c*m+i*l*p-n*l*m+n*u*d)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],d=e[8],p=e[9],m=e[10],_=e[11],y=e[12],E=e[13],x=e[14],v=e[15],w=p*x*h-E*m*h+E*u*_-c*x*_-p*u*v+c*m*v,M=y*m*h-d*x*h-y*u*_+l*x*_+d*u*v-l*m*v,A=d*E*h-y*p*h+y*c*_-l*E*_-d*c*v+l*p*v,R=y*p*u-d*E*u-y*c*m+l*E*m+d*c*x-l*p*x,P=t*w+n*M+i*A+s*R;if(P===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const I=1/P;return e[0]=w*I,e[1]=(E*m*s-p*x*s-E*i*_+n*x*_+p*i*v-n*m*v)*I,e[2]=(c*x*s-E*u*s+E*i*h-n*x*h-c*i*v+n*u*v)*I,e[3]=(p*u*s-c*m*s-p*i*h+n*m*h+c*i*_-n*u*_)*I,e[4]=M*I,e[5]=(d*x*s-y*m*s+y*i*_-t*x*_-d*i*v+t*m*v)*I,e[6]=(y*u*s-l*x*s-y*i*h+t*x*h+l*i*v-t*u*v)*I,e[7]=(l*m*s-d*u*s+d*i*h-t*m*h-l*i*_+t*u*_)*I,e[8]=A*I,e[9]=(y*p*s-d*E*s-y*n*_+t*E*_+d*n*v-t*p*v)*I,e[10]=(l*E*s-y*c*s+y*n*h-t*E*h-l*n*v+t*c*v)*I,e[11]=(d*c*s-l*p*s-d*n*h+t*p*h+l*n*_-t*c*_)*I,e[12]=R*I,e[13]=(d*E*i-y*p*i+y*n*m-t*E*m-d*n*x+t*p*x)*I,e[14]=(y*c*i-l*E*i-y*n*u+t*E*u+l*n*x-t*c*x)*I,e[15]=(l*p*i-d*c*i+d*n*u-t*p*u-l*n*m+t*c*m)*I,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,l=e.x,c=e.y,u=e.z,h=s*l,d=s*c;return this.set(h*l+n,h*c-i*u,h*u+i*c,0,h*c+i*u,d*c+n,d*u-i*l,0,h*u-i*c,d*u+i*l,s*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,l){return this.set(1,n,s,0,e,1,l,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,l=t._y,c=t._z,u=t._w,h=s+s,d=l+l,p=c+c,m=s*h,_=s*d,y=s*p,E=l*d,x=l*p,v=c*p,w=u*h,M=u*d,A=u*p,R=n.x,P=n.y,I=n.z;return i[0]=(1-(E+v))*R,i[1]=(_+A)*R,i[2]=(y-M)*R,i[3]=0,i[4]=(_-A)*P,i[5]=(1-(m+v))*P,i[6]=(x+w)*P,i[7]=0,i[8]=(y+M)*I,i[9]=(x-w)*I,i[10]=(1-(m+E))*I,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=Ds.set(i[0],i[1],i[2]).length();const l=Ds.set(i[4],i[5],i[6]).length(),c=Ds.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],fi.copy(this);const h=1/s,d=1/l,p=1/c;return fi.elements[0]*=h,fi.elements[1]*=h,fi.elements[2]*=h,fi.elements[4]*=d,fi.elements[5]*=d,fi.elements[6]*=d,fi.elements[8]*=p,fi.elements[9]*=p,fi.elements[10]*=p,t.setFromRotationMatrix(fi),n.x=s,n.y=l,n.z=c,this}makePerspective(e,t,n,i,s,l,c=Pi){const u=this.elements,h=2*s/(t-e),d=2*s/(n-i),p=(t+e)/(t-e),m=(n+i)/(n-i);let _,y;if(c===Pi)_=-(l+s)/(l-s),y=-2*l*s/(l-s);else if(c===go)_=-l/(l-s),y=-l*s/(l-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=h,u[4]=0,u[8]=p,u[12]=0,u[1]=0,u[5]=d,u[9]=m,u[13]=0,u[2]=0,u[6]=0,u[10]=_,u[14]=y,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,n,i,s,l,c=Pi){const u=this.elements,h=1/(t-e),d=1/(n-i),p=1/(l-s),m=(t+e)*h,_=(n+i)*d;let y,E;if(c===Pi)y=(l+s)*p,E=-2*p;else if(c===go)y=s*p,E=-1*p;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*h,u[4]=0,u[8]=0,u[12]=-m,u[1]=0,u[5]=2*d,u[9]=0,u[13]=-_,u[2]=0,u[6]=0,u[10]=E,u[14]=-y,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Ds=new D,fi=new lt,Ix=new D(0,0,0),Ux=new D(1,1,1),_r=new D,zl=new D,Jn=new D,Cm=new lt,Pm=new Hn;class Ro{constructor(e=0,t=0,n=0,i=Ro.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],l=i[4],c=i[8],u=i[1],h=i[5],d=i[9],p=i[2],m=i[6],_=i[10];switch(t){case"XYZ":this._y=Math.asin(Xt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-d,_),this._z=Math.atan2(-l,s)):(this._x=Math.atan2(m,h),this._z=0);break;case"YXZ":this._x=Math.asin(-Xt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(c,_),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-p,s),this._z=0);break;case"ZXY":this._x=Math.asin(Xt(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,_),this._z=Math.atan2(-l,h)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-Xt(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,_),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-l,h));break;case"YZX":this._z=Math.asin(Xt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-d,h),this._y=Math.atan2(-p,s)):(this._x=0,this._y=Math.atan2(c,_));break;case"XZY":this._z=Math.asin(-Xt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(m,h),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-d,_),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Cm.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Cm,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Pm.setFromEuler(this),this.setFromQuaternion(Pm,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ro.DEFAULT_ORDER="XYZ";class as{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let Dx=0;const Lm=new D,Ns=new Hn,Yi=new lt,kl=new D,ka=new D,Nx=new D,Ox=new Hn,Im=new D(1,0,0),Um=new D(0,1,0),Dm=new D(0,0,1),Fx={type:"added"},Bx={type:"removed"};class Et extends ir{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Dx++}),this.uuid=Qn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Et.DEFAULT_UP.clone();const e=new D,t=new Ro,n=new Hn,i=new D(1,1,1);function s(){n.setFromEuler(t,!1)}function l(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new lt},normalMatrix:{value:new ft}}),this.matrix=new lt,this.matrixWorld=new lt,this.matrixAutoUpdate=Et.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Et.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new as,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Ns.setFromAxisAngle(e,t),this.quaternion.multiply(Ns),this}rotateOnWorldAxis(e,t){return Ns.setFromAxisAngle(e,t),this.quaternion.premultiply(Ns),this}rotateX(e){return this.rotateOnAxis(Im,e)}rotateY(e){return this.rotateOnAxis(Um,e)}rotateZ(e){return this.rotateOnAxis(Dm,e)}translateOnAxis(e,t){return Lm.copy(e).applyQuaternion(this.quaternion),this.position.add(Lm.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Im,e)}translateY(e){return this.translateOnAxis(Um,e)}translateZ(e){return this.translateOnAxis(Dm,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Yi.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?kl.copy(e):kl.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),ka.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Yi.lookAt(ka,kl,this.up):Yi.lookAt(kl,ka,this.up),this.quaternion.setFromRotationMatrix(Yi),i&&(Yi.extractRotation(i.matrixWorld),Ns.setFromRotationMatrix(Yi),this.quaternion.premultiply(Ns.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Fx)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Bx)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Yi.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Yi.multiply(e.parent.matrixWorld)),e.applyMatrix4(Yi),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const l=this.children[n].getObjectByProperty(e,t);if(l!==void 0)return l}}getObjectsByProperty(e,t){let n=[];this[e]===t&&n.push(this);for(let i=0,s=this.children.length;i<s;i++){const l=this.children[i].getObjectsByProperty(e,t);l.length>0&&(n=n.concat(l))}return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ka,e,Nx),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ka,Ox,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const s=t[n];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,l=i.length;s<l;s++){const c=i[s];c.matrixWorldAutoUpdate===!0&&c.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let h=0,d=u.length;h<d;h++){const p=u[h];s(e.shapes,p)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,h=this.material.length;u<h;u++)c.push(s(e.materials,this.material[u]));i.material=c}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];i.animations.push(s(e.animations,u))}}if(t){const c=l(e.geometries),u=l(e.materials),h=l(e.textures),d=l(e.images),p=l(e.shapes),m=l(e.skeletons),_=l(e.animations),y=l(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),d.length>0&&(n.images=d),p.length>0&&(n.shapes=p),m.length>0&&(n.skeletons=m),_.length>0&&(n.animations=_),y.length>0&&(n.nodes=y)}return n.object=i,n;function l(c){const u=[];for(const h in c){const d=c[h];delete d.metadata,u.push(d)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Et.DEFAULT_UP=new D(0,1,0);Et.DEFAULT_MATRIX_AUTO_UPDATE=!0;Et.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const di=new D,Zi=new D,Lh=new D,Ji=new D,Os=new D,Fs=new D,Nm=new D,Ih=new D,Uh=new D,Dh=new D;let Hl=!1;class Bn{constructor(e=new D,t=new D,n=new D){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),di.subVectors(e,t),i.cross(di);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){di.subVectors(i,t),Zi.subVectors(n,t),Lh.subVectors(e,t);const l=di.dot(di),c=di.dot(Zi),u=di.dot(Lh),h=Zi.dot(Zi),d=Zi.dot(Lh),p=l*h-c*c;if(p===0)return s.set(-2,-1,-1);const m=1/p,_=(h*u-c*d)*m,y=(l*d-c*u)*m;return s.set(1-_-y,y,_)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Ji),Ji.x>=0&&Ji.y>=0&&Ji.x+Ji.y<=1}static getUV(e,t,n,i,s,l,c,u){return Hl===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Hl=!0),this.getInterpolation(e,t,n,i,s,l,c,u)}static getInterpolation(e,t,n,i,s,l,c,u){return this.getBarycoord(e,t,n,i,Ji),u.setScalar(0),u.addScaledVector(s,Ji.x),u.addScaledVector(l,Ji.y),u.addScaledVector(c,Ji.z),u}static isFrontFacing(e,t,n,i){return di.subVectors(n,t),Zi.subVectors(e,t),di.cross(Zi).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return di.subVectors(this.c,this.b),Zi.subVectors(this.a,this.b),di.cross(Zi).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Bn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Bn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return Hl===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Hl=!0),Bn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}getInterpolation(e,t,n,i,s){return Bn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return Bn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Bn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let l,c;Os.subVectors(i,n),Fs.subVectors(s,n),Ih.subVectors(e,n);const u=Os.dot(Ih),h=Fs.dot(Ih);if(u<=0&&h<=0)return t.copy(n);Uh.subVectors(e,i);const d=Os.dot(Uh),p=Fs.dot(Uh);if(d>=0&&p<=d)return t.copy(i);const m=u*p-d*h;if(m<=0&&u>=0&&d<=0)return l=u/(u-d),t.copy(n).addScaledVector(Os,l);Dh.subVectors(e,s);const _=Os.dot(Dh),y=Fs.dot(Dh);if(y>=0&&_<=y)return t.copy(s);const E=_*h-u*y;if(E<=0&&h>=0&&y<=0)return c=h/(h-y),t.copy(n).addScaledVector(Fs,c);const x=d*y-_*p;if(x<=0&&p-d>=0&&_-y>=0)return Nm.subVectors(s,i),c=(p-d)/(p-d+(_-y)),t.copy(i).addScaledVector(Nm,c);const v=1/(x+E+m);return l=E*v,c=m*v,t.copy(n).addScaledVector(Os,l).addScaledVector(Fs,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let zx=0;class An extends ir{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:zx++}),this.uuid=Qn(),this.name="",this.type="Material",this.blending=rs,this.side=er,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=rd,this.blendDst=sd,this.blendEquation=jr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Uc,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=i_,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Pc,this.stencilZFail=Pc,this.stencilZPass=Pc,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==rs&&(n.blending=this.blending),this.side!==er&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const l=[];for(const c in s){const u=s[c];delete u.metadata,l.push(u)}return l}if(t){const s=i(e.textures),l=i(e.images);s.length>0&&(n.textures=s),l.length>0&&(n.images=l)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}const g_={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},vr={h:0,s:0,l:0},Vl={h:0,s:0,l:0};function Nh(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class De{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=rn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,bt.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=bt.workingColorSpace){return this.r=e,this.g=t,this.b=n,bt.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=bt.workingColorSpace){if(e=gd(e,1),t=Xt(t,0,1),n=Xt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,l=2*n-s;this.r=Nh(l,s,e+1/3),this.g=Nh(l,s,e),this.b=Nh(l,s,e-1/3)}return bt.toWorkingColorSpace(this,i),this}setStyle(e,t=rn){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const l=i[1],c=i[2];switch(l){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],l=s.length;if(l===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(l===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=rn){const n=g_[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=aa(e.r),this.g=aa(e.g),this.b=aa(e.b),this}copyLinearToSRGB(e){return this.r=Eh(e.r),this.g=Eh(e.g),this.b=Eh(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=rn){return bt.fromWorkingColorSpace(wn.copy(this),e),Math.round(Xt(wn.r*255,0,255))*65536+Math.round(Xt(wn.g*255,0,255))*256+Math.round(Xt(wn.b*255,0,255))}getHexString(e=rn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=bt.workingColorSpace){bt.fromWorkingColorSpace(wn.copy(this),t);const n=wn.r,i=wn.g,s=wn.b,l=Math.max(n,i,s),c=Math.min(n,i,s);let u,h;const d=(c+l)/2;if(c===l)u=0,h=0;else{const p=l-c;switch(h=d<=.5?p/(l+c):p/(2-l-c),l){case n:u=(i-s)/p+(i<s?6:0);break;case i:u=(s-n)/p+2;break;case s:u=(n-i)/p+4;break}u/=6}return e.h=u,e.s=h,e.l=d,e}getRGB(e,t=bt.workingColorSpace){return bt.fromWorkingColorSpace(wn.copy(this),t),e.r=wn.r,e.g=wn.g,e.b=wn.b,e}getStyle(e=rn){bt.fromWorkingColorSpace(wn.copy(this),e);const t=wn.r,n=wn.g,i=wn.b;return e!==rn?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(vr),this.setHSL(vr.h+e,vr.s+t,vr.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(vr),e.getHSL(Vl);const n=eo(vr.h,Vl.h,t),i=eo(vr.s,Vl.s,t),s=eo(vr.l,Vl.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const wn=new De;De.NAMES=g_;class Cr extends An{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new De(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ao,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const ji=kx();function kx(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):h<-14?(n[u]=1024>>-h-14,n[u|256]=1024>>-h-14|32768,i[u]=-h-1,i[u|256]=-h-1):h<=15?(n[u]=h+15<<10,n[u|256]=h+15<<10|32768,i[u]=13,i[u|256]=13):h<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const s=new Uint32Array(2048),l=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,d=0;for(;(h&8388608)===0;)h<<=1,d-=8388608;h&=-8388609,d+=947912704,s[u]=h|d}for(let u=1024;u<2048;++u)s[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)l[u]=u<<23;l[31]=1199570944,l[32]=2147483648;for(let u=33;u<63;++u)l[u]=2147483648+(u-32<<23);l[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:l,offsetTable:c}}function Fn(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=Xt(r,-65504,65504),ji.floatView[0]=r;const e=ji.uint32View[0],t=e>>23&511;return ji.baseTable[t]+((e&8388607)>>ji.shiftTable[t])}function Ka(r){const e=r>>10;return ji.uint32View[0]=ji.mantissaTable[ji.offsetTable[e]+(r&1023)]+ji.exponentTable[e],ji.floatView[0]}const Hx={toHalfFloat:Fn,fromHalfFloat:Ka},en=new D,Gl=new ce;class It{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=mo,this.updateRange={offset:0,count:-1},this.gpuType=Ci,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Gl.fromBufferAttribute(this,t),Gl.applyMatrix3(e),this.setXY(t,Gl.x,Gl.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)en.fromBufferAttribute(this,t),en.applyMatrix3(e),this.setXYZ(t,en.x,en.y,en.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)en.fromBufferAttribute(this,t),en.applyMatrix4(e),this.setXYZ(t,en.x,en.y,en.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)en.fromBufferAttribute(this,t),en.applyNormalMatrix(e),this.setXYZ(t,en.x,en.y,en.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)en.fromBufferAttribute(this,t),en.transformDirection(e),this.setXYZ(t,en.x,en.y,en.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=kn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ut(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=kn(t,this.array)),t}setX(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=kn(t,this.array)),t}setY(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=kn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=kn(t,this.array)),t}setW(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array),i=ut(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array),i=ut(i,this.array),s=ut(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==mo&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}class Vx extends It{constructor(e,t,n){super(new Int8Array(e),t,n)}}class Gx extends It{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class Wx extends It{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class Xx extends It{constructor(e,t,n){super(new Int16Array(e),t,n)}}class yd extends It{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class qx extends It{constructor(e,t,n){super(new Int32Array(e),t,n)}}class xd extends It{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Yx extends It{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=Ka(this.array[e*this.itemSize]);return this.normalized&&(t=kn(t,this.array)),t}setX(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize]=Fn(t),this}getY(e){let t=Ka(this.array[e*this.itemSize+1]);return this.normalized&&(t=kn(t,this.array)),t}setY(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize+1]=Fn(t),this}getZ(e){let t=Ka(this.array[e*this.itemSize+2]);return this.normalized&&(t=kn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize+2]=Fn(t),this}getW(e){let t=Ka(this.array[e*this.itemSize+3]);return this.normalized&&(t=kn(t,this.array)),t}setW(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize+3]=Fn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array)),this.array[e+0]=Fn(t),this.array[e+1]=Fn(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array),i=ut(i,this.array)),this.array[e+0]=Fn(t),this.array[e+1]=Fn(n),this.array[e+2]=Fn(i),this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array),i=ut(i,this.array),s=ut(s,this.array)),this.array[e+0]=Fn(t),this.array[e+1]=Fn(n),this.array[e+2]=Fn(i),this.array[e+3]=Fn(s),this}}class Fe extends It{constructor(e,t,n){super(new Float32Array(e),t,n)}}class Zx extends It{constructor(e,t,n){super(new Float64Array(e),t,n)}}let Jx=0;const oi=new lt,Oh=new Et,Bs=new D,Kn=new Oi,Ha=new Oi,hn=new D;class mt extends ir{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Jx++}),this.uuid=Qn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(d_(e)?xd:yd)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new ft().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return oi.makeRotationFromQuaternion(e),this.applyMatrix4(oi),this}rotateX(e){return oi.makeRotationX(e),this.applyMatrix4(oi),this}rotateY(e){return oi.makeRotationY(e),this.applyMatrix4(oi),this}rotateZ(e){return oi.makeRotationZ(e),this.applyMatrix4(oi),this}translate(e,t,n){return oi.makeTranslation(e,t,n),this.applyMatrix4(oi),this}scale(e,t,n){return oi.makeScale(e,t,n),this.applyMatrix4(oi),this}lookAt(e){return Oh.lookAt(e),Oh.updateMatrix(),this.applyMatrix4(Oh.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Bs).negate(),this.translate(Bs.x,Bs.y,Bs.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Fe(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Oi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new D(-1/0,-1/0,-1/0),new D(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];Kn.setFromBufferAttribute(s),this.morphTargetsRelative?(hn.addVectors(this.boundingBox.min,Kn.min),this.boundingBox.expandByPoint(hn),hn.addVectors(this.boundingBox.max,Kn.max),this.boundingBox.expandByPoint(hn)):(this.boundingBox.expandByPoint(Kn.min),this.boundingBox.expandByPoint(Kn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new _i);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new D,1/0);return}if(e){const n=this.boundingSphere.center;if(Kn.setFromBufferAttribute(e),t)for(let s=0,l=t.length;s<l;s++){const c=t[s];Ha.setFromBufferAttribute(c),this.morphTargetsRelative?(hn.addVectors(Kn.min,Ha.min),Kn.expandByPoint(hn),hn.addVectors(Kn.max,Ha.max),Kn.expandByPoint(hn)):(Kn.expandByPoint(Ha.min),Kn.expandByPoint(Ha.max))}Kn.getCenter(n);let i=0;for(let s=0,l=e.count;s<l;s++)hn.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(hn));if(t)for(let s=0,l=t.length;s<l;s++){const c=t[s],u=this.morphTargetsRelative;for(let h=0,d=c.count;h<d;h++)hn.fromBufferAttribute(c,h),u&&(Bs.fromBufferAttribute(e,h),hn.add(Bs)),i=Math.max(i,n.distanceToSquared(hn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,s=t.normal.array,l=t.uv.array,c=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new It(new Float32Array(4*c),4));const u=this.getAttribute("tangent").array,h=[],d=[];for(let L=0;L<c;L++)h[L]=new D,d[L]=new D;const p=new D,m=new D,_=new D,y=new ce,E=new ce,x=new ce,v=new D,w=new D;function M(L,H,ee){p.fromArray(i,L*3),m.fromArray(i,H*3),_.fromArray(i,ee*3),y.fromArray(l,L*2),E.fromArray(l,H*2),x.fromArray(l,ee*2),m.sub(p),_.sub(p),E.sub(y),x.sub(y);const oe=1/(E.x*x.y-x.x*E.y);isFinite(oe)&&(v.copy(m).multiplyScalar(x.y).addScaledVector(_,-E.y).multiplyScalar(oe),w.copy(_).multiplyScalar(E.x).addScaledVector(m,-x.x).multiplyScalar(oe),h[L].add(v),h[H].add(v),h[ee].add(v),d[L].add(w),d[H].add(w),d[ee].add(w))}let A=this.groups;A.length===0&&(A=[{start:0,count:n.length}]);for(let L=0,H=A.length;L<H;++L){const ee=A[L],oe=ee.start,V=ee.count;for(let $=oe,ae=oe+V;$<ae;$+=3)M(n[$+0],n[$+1],n[$+2])}const R=new D,P=new D,I=new D,F=new D;function b(L){I.fromArray(s,L*3),F.copy(I);const H=h[L];R.copy(H),R.sub(I.multiplyScalar(I.dot(H))).normalize(),P.crossVectors(F,H);const oe=P.dot(d[L])<0?-1:1;u[L*4]=R.x,u[L*4+1]=R.y,u[L*4+2]=R.z,u[L*4+3]=oe}for(let L=0,H=A.length;L<H;++L){const ee=A[L],oe=ee.start,V=ee.count;for(let $=oe,ae=oe+V;$<ae;$+=3)b(n[$+0]),b(n[$+1]),b(n[$+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new It(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let m=0,_=n.count;m<_;m++)n.setXYZ(m,0,0,0);const i=new D,s=new D,l=new D,c=new D,u=new D,h=new D,d=new D,p=new D;if(e)for(let m=0,_=e.count;m<_;m+=3){const y=e.getX(m+0),E=e.getX(m+1),x=e.getX(m+2);i.fromBufferAttribute(t,y),s.fromBufferAttribute(t,E),l.fromBufferAttribute(t,x),d.subVectors(l,s),p.subVectors(i,s),d.cross(p),c.fromBufferAttribute(n,y),u.fromBufferAttribute(n,E),h.fromBufferAttribute(n,x),c.add(d),u.add(d),h.add(d),n.setXYZ(y,c.x,c.y,c.z),n.setXYZ(E,u.x,u.y,u.z),n.setXYZ(x,h.x,h.y,h.z)}else for(let m=0,_=t.count;m<_;m+=3)i.fromBufferAttribute(t,m+0),s.fromBufferAttribute(t,m+1),l.fromBufferAttribute(t,m+2),d.subVectors(l,s),p.subVectors(i,s),d.cross(p),n.setXYZ(m+0,d.x,d.y,d.z),n.setXYZ(m+1,d.x,d.y,d.z),n.setXYZ(m+2,d.x,d.y,d.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)hn.fromBufferAttribute(e,t),hn.normalize(),e.setXYZ(t,hn.x,hn.y,hn.z)}toNonIndexed(){function e(c,u){const h=c.array,d=c.itemSize,p=c.normalized,m=new h.constructor(u.length*d);let _=0,y=0;for(let E=0,x=u.length;E<x;E++){c.isInterleavedBufferAttribute?_=u[E]*c.data.stride+c.offset:_=u[E]*d;for(let v=0;v<d;v++)m[y++]=h[_++]}return new It(m,d,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new mt,n=this.index.array,i=this.attributes;for(const c in i){const u=i[c],h=e(u,n);t.setAttribute(c,h)}const s=this.morphAttributes;for(const c in s){const u=[],h=s[c];for(let d=0,p=h.length;d<p;d++){const m=h[d],_=e(m,n);u.push(_)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,u=l.length;c<u;c++){const h=l[c];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const i={};let s=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],d=[];for(let p=0,m=h.length;p<m;p++){const _=h[p];d.push(_.toJSON(e.data))}d.length>0&&(i[u]=d,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(e.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const d=i[h];this.setAttribute(h,d.clone(t))}const s=e.morphAttributes;for(const h in s){const d=[],p=s[h];for(let m=0,_=p.length;m<_;m++)d.push(p[m].clone(t));this.morphAttributes[h]=d}this.morphTargetsRelative=e.morphTargetsRelative;const l=e.groups;for(let h=0,d=l.length;h<d;h++){const p=l[h];this.addGroup(p.start,p.count,p.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Om=new lt,Gr=new pa,Wl=new _i,Fm=new D,zs=new D,ks=new D,Hs=new D,Fh=new D,Xl=new D,ql=new ce,Yl=new ce,Zl=new ce,Bm=new D,zm=new D,km=new D,Jl=new D,Kl=new D;class gn extends Et{constructor(e=new mt,t=new Cr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,l=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const c=this.morphTargetInfluences;if(s&&c){Xl.set(0,0,0);for(let u=0,h=s.length;u<h;u++){const d=c[u],p=s[u];d!==0&&(Fh.fromBufferAttribute(p,e),l?Xl.addScaledVector(Fh,d):Xl.addScaledVector(Fh.sub(t),d))}t.add(Xl)}return t}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),Wl.copy(n.boundingSphere),Wl.applyMatrix4(s),Gr.copy(e.ray).recast(e.near),!(Wl.containsPoint(Gr.origin)===!1&&(Gr.intersectSphere(Wl,Fm)===null||Gr.origin.distanceToSquared(Fm)>(e.far-e.near)**2))&&(Om.copy(s).invert(),Gr.copy(e.ray).applyMatrix4(Om),!(n.boundingBox!==null&&Gr.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,Gr)))}_computeIntersections(e,t,n){let i;const s=this.geometry,l=this.material,c=s.index,u=s.attributes.position,h=s.attributes.uv,d=s.attributes.uv1,p=s.attributes.normal,m=s.groups,_=s.drawRange;if(c!==null)if(Array.isArray(l))for(let y=0,E=m.length;y<E;y++){const x=m[y],v=l[x.materialIndex],w=Math.max(x.start,_.start),M=Math.min(c.count,Math.min(x.start+x.count,_.start+_.count));for(let A=w,R=M;A<R;A+=3){const P=c.getX(A),I=c.getX(A+1),F=c.getX(A+2);i=jl(this,v,e,n,h,d,p,P,I,F),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,_.start),E=Math.min(c.count,_.start+_.count);for(let x=y,v=E;x<v;x+=3){const w=c.getX(x),M=c.getX(x+1),A=c.getX(x+2);i=jl(this,l,e,n,h,d,p,w,M,A),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}else if(u!==void 0)if(Array.isArray(l))for(let y=0,E=m.length;y<E;y++){const x=m[y],v=l[x.materialIndex],w=Math.max(x.start,_.start),M=Math.min(u.count,Math.min(x.start+x.count,_.start+_.count));for(let A=w,R=M;A<R;A+=3){const P=A,I=A+1,F=A+2;i=jl(this,v,e,n,h,d,p,P,I,F),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,_.start),E=Math.min(u.count,_.start+_.count);for(let x=y,v=E;x<v;x+=3){const w=x,M=x+1,A=x+2;i=jl(this,l,e,n,h,d,p,w,M,A),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}}}function Kx(r,e,t,n,i,s,l,c){let u;if(e.side===Ln?u=n.intersectTriangle(l,s,i,!0,c):u=n.intersectTriangle(i,s,l,e.side===er,c),u===null)return null;Kl.copy(c),Kl.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(Kl);return h<t.near||h>t.far?null:{distance:h,point:Kl.clone(),object:r}}function jl(r,e,t,n,i,s,l,c,u,h){r.getVertexPosition(c,zs),r.getVertexPosition(u,ks),r.getVertexPosition(h,Hs);const d=Kx(r,e,t,n,zs,ks,Hs,Jl);if(d){i&&(ql.fromBufferAttribute(i,c),Yl.fromBufferAttribute(i,u),Zl.fromBufferAttribute(i,h),d.uv=Bn.getInterpolation(Jl,zs,ks,Hs,ql,Yl,Zl,new ce)),s&&(ql.fromBufferAttribute(s,c),Yl.fromBufferAttribute(s,u),Zl.fromBufferAttribute(s,h),d.uv1=Bn.getInterpolation(Jl,zs,ks,Hs,ql,Yl,Zl,new ce),d.uv2=d.uv1),l&&(Bm.fromBufferAttribute(l,c),zm.fromBufferAttribute(l,u),km.fromBufferAttribute(l,h),d.normal=Bn.getInterpolation(Jl,zs,ks,Hs,Bm,zm,km,new D),d.normal.dot(n.direction)>0&&d.normal.multiplyScalar(-1));const p={a:c,b:u,c:h,normal:new D,materialIndex:0};Bn.getNormal(zs,ks,Hs,p.normal),d.face=p}return d}class fs extends mt{constructor(e=1,t=1,n=1,i=1,s=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:l};const c=this;i=Math.floor(i),s=Math.floor(s),l=Math.floor(l);const u=[],h=[],d=[],p=[];let m=0,_=0;y("z","y","x",-1,-1,n,t,e,l,s,0),y("z","y","x",1,-1,n,t,-e,l,s,1),y("x","z","y",1,1,e,n,t,i,l,2),y("x","z","y",1,-1,e,n,-t,i,l,3),y("x","y","z",1,-1,e,t,n,i,s,4),y("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(u),this.setAttribute("position",new Fe(h,3)),this.setAttribute("normal",new Fe(d,3)),this.setAttribute("uv",new Fe(p,2));function y(E,x,v,w,M,A,R,P,I,F,b){const L=A/I,H=R/F,ee=A/2,oe=R/2,V=P/2,$=I+1,ae=F+1;let se=0,q=0;const X=new D;for(let Y=0;Y<ae;Y++){const k=Y*H-oe;for(let Q=0;Q<$;Q++){const fe=Q*L-ee;X[E]=fe*w,X[x]=k*M,X[v]=V,h.push(X.x,X.y,X.z),X[E]=0,X[x]=0,X[v]=P>0?1:-1,d.push(X.x,X.y,X.z),p.push(Q/I),p.push(1-Y/F),se+=1}}for(let Y=0;Y<F;Y++)for(let k=0;k<I;k++){const Q=m+k+$*Y,fe=m+k+$*(Y+1),Me=m+(k+1)+$*(Y+1),Te=m+(k+1)+$*Y;u.push(Q,fe,Te),u.push(fe,Me,Te),q+=6}c.addGroup(_,q,b),_+=q,m+=se}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new fs(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function ua(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Pn(r){const e={};for(let t=0;t<r.length;t++){const n=ua(r[t]);for(const i in n)e[i]=n[i]}return e}function jx(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function __(r){return r.getRenderTarget()===null?r.outputColorSpace:bt.workingColorSpace}const v_={clone:ua,merge:Pn};var Qx=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,$x=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ni extends An{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Qx,this.fragmentShader=$x,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=ua(e.uniforms),this.uniformsGroups=jx(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const l=this.uniforms[i].value;l&&l.isTexture?t.uniforms[i]={type:"t",value:l.toJSON(e).uuid}:l&&l.isColor?t.uniforms[i]={type:"c",value:l.getHex()}:l&&l.isVector2?t.uniforms[i]={type:"v2",value:l.toArray()}:l&&l.isVector3?t.uniforms[i]={type:"v3",value:l.toArray()}:l&&l.isVector4?t.uniforms[i]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?t.uniforms[i]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?t.uniforms[i]={type:"m4",value:l.toArray()}:t.uniforms[i]={value:l}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Co extends Et{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new lt,this.projectionMatrix=new lt,this.projectionMatrixInverse=new lt,this.coordinateSystem=Pi}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class dn extends Co{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=ca*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(ss*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return ca*2*Math.atan(Math.tan(ss*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,l){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(ss*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const l=this.view;if(this.view!==null&&this.view.enabled){const u=l.fullWidth,h=l.fullHeight;s+=l.offsetX*i/u,t-=l.offsetY*n/h,i*=l.width/u,n*=l.height/h}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Vs=-90,Gs=1;class y_ extends Et{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new dn(Vs,Gs,e,t);i.layers=this.layers,this.add(i);const s=new dn(Vs,Gs,e,t);s.layers=this.layers,this.add(s);const l=new dn(Vs,Gs,e,t);l.layers=this.layers,this.add(l);const c=new dn(Vs,Gs,e,t);c.layers=this.layers,this.add(c);const u=new dn(Vs,Gs,e,t);u.layers=this.layers,this.add(u);const h=new dn(Vs,Gs,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,s,l,c,u]=t;for(const h of t)this.remove(h);if(e===Pi)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===go)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,l,c,u,h,d]=this.children,p=e.getRenderTarget(),m=e.getActiveCubeFace(),_=e.getActiveMipmapLevel(),y=e.xr.enabled;e.xr.enabled=!1;const E=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,s),e.setRenderTarget(n,1,i),e.render(t,l),e.setRenderTarget(n,2,i),e.render(t,c),e.setRenderTarget(n,3,i),e.render(t,u),e.setRenderTarget(n,4,i),e.render(t,h),n.texture.generateMipmaps=E,e.setRenderTarget(n,5,i),e.render(t,d),e.setRenderTarget(p,m,_),e.xr.enabled=y,n.texture.needsPMREMUpdate=!0}}class Po extends Kt{constructor(e,t,n,i,s,l,c,u,h,d){e=e!==void 0?e:[],t=t!==void 0?t:tr,super(e,t,n,i,s,l,c,u,h,d),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class x_ extends gi{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];t.encoding!==void 0&&(to("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===wr?rn:jn),this.texture=new Po(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Jt}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new fs(5,5,5),s=new Ni({name:"CubemapFromEquirect",uniforms:ua(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Ln,blending:$i});s.uniforms.tEquirect.value=t;const l=new gn(i,s),c=t.minFilter;return t.minFilter===Ar&&(t.minFilter=Jt),new y_(1,10,this).update(e,l),t.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let l=0;l<6;l++)e.setRenderTarget(this,l),e.clear(t,n,i);e.setRenderTarget(s)}}const Bh=new D,eS=new D,tS=new ft;class Sr{constructor(e=new D(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Bh.subVectors(n,t).cross(eS.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Bh),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||tS.getNormalMatrix(e),i=this.coplanarPoint(Bh).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Wr=new _i,Ql=new D;class qc{constructor(e=new Sr,t=new Sr,n=new Sr,i=new Sr,s=new Sr,l=new Sr){this.planes=[e,t,n,i,s,l]}set(e,t,n,i,s,l){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(s),c[5].copy(l),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Pi){const n=this.planes,i=e.elements,s=i[0],l=i[1],c=i[2],u=i[3],h=i[4],d=i[5],p=i[6],m=i[7],_=i[8],y=i[9],E=i[10],x=i[11],v=i[12],w=i[13],M=i[14],A=i[15];if(n[0].setComponents(u-s,m-h,x-_,A-v).normalize(),n[1].setComponents(u+s,m+h,x+_,A+v).normalize(),n[2].setComponents(u+l,m+d,x+y,A+w).normalize(),n[3].setComponents(u-l,m-d,x-y,A-w).normalize(),n[4].setComponents(u-c,m-p,x-E,A-M).normalize(),t===Pi)n[5].setComponents(u+c,m+p,x+E,A+M).normalize();else if(t===go)n[5].setComponents(c,p,E,M).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Wr.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Wr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Wr)}intersectsSprite(e){return Wr.center.set(0,0,0),Wr.radius=.7071067811865476,Wr.applyMatrix4(e.matrixWorld),this.intersectsSphere(Wr)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Ql.x=i.normal.x>0?e.max.x:e.min.x,Ql.y=i.normal.y>0?e.max.y:e.min.y,Ql.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Ql)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function S_(){let r=null,e=!1,t=null,n=null;function i(s,l){t(s,l),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function nS(r,e){const t=e.isWebGL2,n=new WeakMap;function i(h,d){const p=h.array,m=h.usage,_=r.createBuffer();r.bindBuffer(d,_),r.bufferData(d,p,m),h.onUploadCallback();let y;if(p instanceof Float32Array)y=r.FLOAT;else if(p instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)y=r.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else y=r.UNSIGNED_SHORT;else if(p instanceof Int16Array)y=r.SHORT;else if(p instanceof Uint32Array)y=r.UNSIGNED_INT;else if(p instanceof Int32Array)y=r.INT;else if(p instanceof Int8Array)y=r.BYTE;else if(p instanceof Uint8Array)y=r.UNSIGNED_BYTE;else if(p instanceof Uint8ClampedArray)y=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+p);return{buffer:_,type:y,bytesPerElement:p.BYTES_PER_ELEMENT,version:h.version}}function s(h,d,p){const m=d.array,_=d.updateRange;r.bindBuffer(p,h),_.count===-1?r.bufferSubData(p,0,m):(t?r.bufferSubData(p,_.offset*m.BYTES_PER_ELEMENT,m,_.offset,_.count):r.bufferSubData(p,_.offset*m.BYTES_PER_ELEMENT,m.subarray(_.offset,_.offset+_.count)),_.count=-1),d.onUploadCallback()}function l(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function c(h){h.isInterleavedBufferAttribute&&(h=h.data);const d=n.get(h);d&&(r.deleteBuffer(d.buffer),n.delete(h))}function u(h,d){if(h.isGLBufferAttribute){const m=n.get(h);(!m||m.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const p=n.get(h);p===void 0?n.set(h,i(h,d)):p.version<h.version&&(s(p.buffer,h,d),p.version=h.version)}return{get:l,remove:c,update:u}}class Lo extends mt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,l=t/2,c=Math.floor(n),u=Math.floor(i),h=c+1,d=u+1,p=e/c,m=t/u,_=[],y=[],E=[],x=[];for(let v=0;v<d;v++){const w=v*m-l;for(let M=0;M<h;M++){const A=M*p-s;y.push(A,-w,0),E.push(0,0,1),x.push(M/c),x.push(1-v/u)}}for(let v=0;v<u;v++)for(let w=0;w<c;w++){const M=w+h*v,A=w+h*(v+1),R=w+1+h*(v+1),P=w+1+h*v;_.push(M,A,P),_.push(A,R,P)}this.setIndex(_),this.setAttribute("position",new Fe(y,3)),this.setAttribute("normal",new Fe(E,3)),this.setAttribute("uv",new Fe(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Lo(e.width,e.height,e.widthSegments,e.heightSegments)}}var iS=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,rS=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,sS=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,aS=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,oS=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,lS=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,cS=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,uS=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,hS=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,fS=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,dS=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,pS=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,mS=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,gS=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,_S=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,vS=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,yS=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,xS=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,SS=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,MS=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,ES=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,wS=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,TS=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,AS=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,bS=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,RS=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,CS=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,PS=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,LS="gl_FragColor = linearToOutputTexel( gl_FragColor );",IS=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,US=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,DS=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,NS=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,OS=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,FS=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,BS=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,zS=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,kS=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,HS=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,VS=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,GS=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,WS=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,XS=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,qS=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,YS=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,ZS=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,JS=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,KS=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,jS=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,QS=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,$S=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`,eM=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,tM=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal;
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,nM=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,iM=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,rM=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,sM=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,aM=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,oM=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,lM=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,cM=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,uM=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,hM=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,fM=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,dM=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,pM=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,mM=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,gM=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,_M=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,vM=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,yM=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,xM=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,SM=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,MM=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,EM=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,wM=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,TM=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,AM=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,bM=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,RM=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,CM=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,PM=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,LM=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,IM=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,UM=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,DM=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,NM=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,OM=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,FM=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,BM=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,zM=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,kM=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,HM=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,VM=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,GM=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,WM=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,XM=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,qM=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,YM=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,ZM=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,JM=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,KM=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,jM=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,QM=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,$M=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const eE=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,tE=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,nE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,iE=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,rE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,sE=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,aE=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,oE=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,lE=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,cE=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,uE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,hE=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,fE=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,dE=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,pE=`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,mE=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,gE=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,_E=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vE=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,yE=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,xE=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,SE=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,ME=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,EE=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,wE=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,TE=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,AE=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,bE=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,RE=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,CE=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,PE=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,LE=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,IE=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,UE=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,ct={alphahash_fragment:iS,alphahash_pars_fragment:rS,alphamap_fragment:sS,alphamap_pars_fragment:aS,alphatest_fragment:oS,alphatest_pars_fragment:lS,aomap_fragment:cS,aomap_pars_fragment:uS,begin_vertex:hS,beginnormal_vertex:fS,bsdfs:dS,iridescence_fragment:pS,bumpmap_pars_fragment:mS,clipping_planes_fragment:gS,clipping_planes_pars_fragment:_S,clipping_planes_pars_vertex:vS,clipping_planes_vertex:yS,color_fragment:xS,color_pars_fragment:SS,color_pars_vertex:MS,color_vertex:ES,common:wS,cube_uv_reflection_fragment:TS,defaultnormal_vertex:AS,displacementmap_pars_vertex:bS,displacementmap_vertex:RS,emissivemap_fragment:CS,emissivemap_pars_fragment:PS,colorspace_fragment:LS,colorspace_pars_fragment:IS,envmap_fragment:US,envmap_common_pars_fragment:DS,envmap_pars_fragment:NS,envmap_pars_vertex:OS,envmap_physical_pars_fragment:ZS,envmap_vertex:FS,fog_vertex:BS,fog_pars_vertex:zS,fog_fragment:kS,fog_pars_fragment:HS,gradientmap_pars_fragment:VS,lightmap_fragment:GS,lightmap_pars_fragment:WS,lights_lambert_fragment:XS,lights_lambert_pars_fragment:qS,lights_pars_begin:YS,lights_toon_fragment:JS,lights_toon_pars_fragment:KS,lights_phong_fragment:jS,lights_phong_pars_fragment:QS,lights_physical_fragment:$S,lights_physical_pars_fragment:eM,lights_fragment_begin:tM,lights_fragment_maps:nM,lights_fragment_end:iM,logdepthbuf_fragment:rM,logdepthbuf_pars_fragment:sM,logdepthbuf_pars_vertex:aM,logdepthbuf_vertex:oM,map_fragment:lM,map_pars_fragment:cM,map_particle_fragment:uM,map_particle_pars_fragment:hM,metalnessmap_fragment:fM,metalnessmap_pars_fragment:dM,morphcolor_vertex:pM,morphnormal_vertex:mM,morphtarget_pars_vertex:gM,morphtarget_vertex:_M,normal_fragment_begin:vM,normal_fragment_maps:yM,normal_pars_fragment:xM,normal_pars_vertex:SM,normal_vertex:MM,normalmap_pars_fragment:EM,clearcoat_normal_fragment_begin:wM,clearcoat_normal_fragment_maps:TM,clearcoat_pars_fragment:AM,iridescence_pars_fragment:bM,opaque_fragment:RM,packing:CM,premultiplied_alpha_fragment:PM,project_vertex:LM,dithering_fragment:IM,dithering_pars_fragment:UM,roughnessmap_fragment:DM,roughnessmap_pars_fragment:NM,shadowmap_pars_fragment:OM,shadowmap_pars_vertex:FM,shadowmap_vertex:BM,shadowmask_pars_fragment:zM,skinbase_vertex:kM,skinning_pars_vertex:HM,skinning_vertex:VM,skinnormal_vertex:GM,specularmap_fragment:WM,specularmap_pars_fragment:XM,tonemapping_fragment:qM,tonemapping_pars_fragment:YM,transmission_fragment:ZM,transmission_pars_fragment:JM,uv_pars_fragment:KM,uv_pars_vertex:jM,uv_vertex:QM,worldpos_vertex:$M,background_vert:eE,background_frag:tE,backgroundCube_vert:nE,backgroundCube_frag:iE,cube_vert:rE,cube_frag:sE,depth_vert:aE,depth_frag:oE,distanceRGBA_vert:lE,distanceRGBA_frag:cE,equirect_vert:uE,equirect_frag:hE,linedashed_vert:fE,linedashed_frag:dE,meshbasic_vert:pE,meshbasic_frag:mE,meshlambert_vert:gE,meshlambert_frag:_E,meshmatcap_vert:vE,meshmatcap_frag:yE,meshnormal_vert:xE,meshnormal_frag:SE,meshphong_vert:ME,meshphong_frag:EE,meshphysical_vert:wE,meshphysical_frag:TE,meshtoon_vert:AE,meshtoon_frag:bE,points_vert:RE,points_frag:CE,shadow_vert:PE,shadow_frag:LE,sprite_vert:IE,sprite_frag:UE},we={common:{diffuse:{value:new De(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new ft},alphaMap:{value:null},alphaMapTransform:{value:new ft},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new ft}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new ft}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new ft}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new ft},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new ft},normalScale:{value:new ce(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new ft},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new ft}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new ft}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new ft}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new De(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new De(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new ft},alphaTest:{value:0},uvTransform:{value:new ft}},sprite:{diffuse:{value:new De(16777215)},opacity:{value:1},center:{value:new ce(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new ft},alphaMap:{value:null},alphaMapTransform:{value:new ft},alphaTest:{value:0}}},mi={basic:{uniforms:Pn([we.common,we.specularmap,we.envmap,we.aomap,we.lightmap,we.fog]),vertexShader:ct.meshbasic_vert,fragmentShader:ct.meshbasic_frag},lambert:{uniforms:Pn([we.common,we.specularmap,we.envmap,we.aomap,we.lightmap,we.emissivemap,we.bumpmap,we.normalmap,we.displacementmap,we.fog,we.lights,{emissive:{value:new De(0)}}]),vertexShader:ct.meshlambert_vert,fragmentShader:ct.meshlambert_frag},phong:{uniforms:Pn([we.common,we.specularmap,we.envmap,we.aomap,we.lightmap,we.emissivemap,we.bumpmap,we.normalmap,we.displacementmap,we.fog,we.lights,{emissive:{value:new De(0)},specular:{value:new De(1118481)},shininess:{value:30}}]),vertexShader:ct.meshphong_vert,fragmentShader:ct.meshphong_frag},standard:{uniforms:Pn([we.common,we.envmap,we.aomap,we.lightmap,we.emissivemap,we.bumpmap,we.normalmap,we.displacementmap,we.roughnessmap,we.metalnessmap,we.fog,we.lights,{emissive:{value:new De(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ct.meshphysical_vert,fragmentShader:ct.meshphysical_frag},toon:{uniforms:Pn([we.common,we.aomap,we.lightmap,we.emissivemap,we.bumpmap,we.normalmap,we.displacementmap,we.gradientmap,we.fog,we.lights,{emissive:{value:new De(0)}}]),vertexShader:ct.meshtoon_vert,fragmentShader:ct.meshtoon_frag},matcap:{uniforms:Pn([we.common,we.bumpmap,we.normalmap,we.displacementmap,we.fog,{matcap:{value:null}}]),vertexShader:ct.meshmatcap_vert,fragmentShader:ct.meshmatcap_frag},points:{uniforms:Pn([we.points,we.fog]),vertexShader:ct.points_vert,fragmentShader:ct.points_frag},dashed:{uniforms:Pn([we.common,we.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ct.linedashed_vert,fragmentShader:ct.linedashed_frag},depth:{uniforms:Pn([we.common,we.displacementmap]),vertexShader:ct.depth_vert,fragmentShader:ct.depth_frag},normal:{uniforms:Pn([we.common,we.bumpmap,we.normalmap,we.displacementmap,{opacity:{value:1}}]),vertexShader:ct.meshnormal_vert,fragmentShader:ct.meshnormal_frag},sprite:{uniforms:Pn([we.sprite,we.fog]),vertexShader:ct.sprite_vert,fragmentShader:ct.sprite_frag},background:{uniforms:{uvTransform:{value:new ft},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ct.background_vert,fragmentShader:ct.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:ct.backgroundCube_vert,fragmentShader:ct.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ct.cube_vert,fragmentShader:ct.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ct.equirect_vert,fragmentShader:ct.equirect_frag},distanceRGBA:{uniforms:Pn([we.common,we.displacementmap,{referencePosition:{value:new D},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ct.distanceRGBA_vert,fragmentShader:ct.distanceRGBA_frag},shadow:{uniforms:Pn([we.lights,we.fog,{color:{value:new De(0)},opacity:{value:1}}]),vertexShader:ct.shadow_vert,fragmentShader:ct.shadow_frag}};mi.physical={uniforms:Pn([mi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new ft},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new ft},clearcoatNormalScale:{value:new ce(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new ft},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new ft},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new ft},sheen:{value:0},sheenColor:{value:new De(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new ft},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new ft},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new ft},transmissionSamplerSize:{value:new ce},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new ft},attenuationDistance:{value:0},attenuationColor:{value:new De(0)},specularColor:{value:new De(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new ft},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new ft},anisotropyVector:{value:new ce},anisotropyMap:{value:null},anisotropyMapTransform:{value:new ft}}]),vertexShader:ct.meshphysical_vert,fragmentShader:ct.meshphysical_frag};const $l={r:0,b:0,g:0};function DE(r,e,t,n,i,s,l){const c=new De(0);let u=s===!0?0:1,h,d,p=null,m=0,_=null;function y(x,v){let w=!1,M=v.isScene===!0?v.background:null;M&&M.isTexture&&(M=(v.backgroundBlurriness>0?t:e).get(M)),M===null?E(c,u):M&&M.isColor&&(E(M,1),w=!0);const A=r.xr.getEnvironmentBlendMode();A==="additive"?n.buffers.color.setClear(0,0,0,1,l):A==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,l),(r.autoClear||w)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),M&&(M.isCubeTexture||M.mapping===da)?(d===void 0&&(d=new gn(new fs(1,1,1),new Ni({name:"BackgroundCubeMaterial",uniforms:ua(mi.backgroundCube.uniforms),vertexShader:mi.backgroundCube.vertexShader,fragmentShader:mi.backgroundCube.fragmentShader,side:Ln,depthTest:!1,depthWrite:!1,fog:!1})),d.geometry.deleteAttribute("normal"),d.geometry.deleteAttribute("uv"),d.onBeforeRender=function(R,P,I){this.matrixWorld.copyPosition(I.matrixWorld)},Object.defineProperty(d.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(d)),d.material.uniforms.envMap.value=M,d.material.uniforms.flipEnvMap.value=M.isCubeTexture&&M.isRenderTargetTexture===!1?-1:1,d.material.uniforms.backgroundBlurriness.value=v.backgroundBlurriness,d.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,d.material.toneMapped=bt.getTransfer(M.colorSpace)!==Dt,(p!==M||m!==M.version||_!==r.toneMapping)&&(d.material.needsUpdate=!0,p=M,m=M.version,_=r.toneMapping),d.layers.enableAll(),x.unshift(d,d.geometry,d.material,0,0,null)):M&&M.isTexture&&(h===void 0&&(h=new gn(new Lo(2,2),new Ni({name:"BackgroundMaterial",uniforms:ua(mi.background.uniforms),vertexShader:mi.background.vertexShader,fragmentShader:mi.background.fragmentShader,side:er,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=M,h.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,h.material.toneMapped=bt.getTransfer(M.colorSpace)!==Dt,M.matrixAutoUpdate===!0&&M.updateMatrix(),h.material.uniforms.uvTransform.value.copy(M.matrix),(p!==M||m!==M.version||_!==r.toneMapping)&&(h.material.needsUpdate=!0,p=M,m=M.version,_=r.toneMapping),h.layers.enableAll(),x.unshift(h,h.geometry,h.material,0,0,null))}function E(x,v){x.getRGB($l,__(r)),n.buffers.color.setClear($l.r,$l.g,$l.b,v,l)}return{getClearColor:function(){return c},setClearColor:function(x,v=1){c.set(x),u=v,E(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(x){u=x,E(c,u)},render:y}}function NE(r,e,t,n){const i=r.getParameter(r.MAX_VERTEX_ATTRIBS),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),l=n.isWebGL2||s!==null,c={},u=x(null);let h=u,d=!1;function p(V,$,ae,se,q){let X=!1;if(l){const Y=E(se,ae,$);h!==Y&&(h=Y,_(h.object)),X=v(V,se,ae,q),X&&w(V,se,ae,q)}else{const Y=$.wireframe===!0;(h.geometry!==se.id||h.program!==ae.id||h.wireframe!==Y)&&(h.geometry=se.id,h.program=ae.id,h.wireframe=Y,X=!0)}q!==null&&t.update(q,r.ELEMENT_ARRAY_BUFFER),(X||d)&&(d=!1,F(V,$,ae,se),q!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.get(q).buffer))}function m(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function _(V){return n.isWebGL2?r.bindVertexArray(V):s.bindVertexArrayOES(V)}function y(V){return n.isWebGL2?r.deleteVertexArray(V):s.deleteVertexArrayOES(V)}function E(V,$,ae){const se=ae.wireframe===!0;let q=c[V.id];q===void 0&&(q={},c[V.id]=q);let X=q[$.id];X===void 0&&(X={},q[$.id]=X);let Y=X[se];return Y===void 0&&(Y=x(m()),X[se]=Y),Y}function x(V){const $=[],ae=[],se=[];for(let q=0;q<i;q++)$[q]=0,ae[q]=0,se[q]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:$,enabledAttributes:ae,attributeDivisors:se,object:V,attributes:{},index:null}}function v(V,$,ae,se){const q=h.attributes,X=$.attributes;let Y=0;const k=ae.getAttributes();for(const Q in k)if(k[Q].location>=0){const Me=q[Q];let Te=X[Q];if(Te===void 0&&(Q==="instanceMatrix"&&V.instanceMatrix&&(Te=V.instanceMatrix),Q==="instanceColor"&&V.instanceColor&&(Te=V.instanceColor)),Me===void 0||Me.attribute!==Te||Te&&Me.data!==Te.data)return!0;Y++}return h.attributesNum!==Y||h.index!==se}function w(V,$,ae,se){const q={},X=$.attributes;let Y=0;const k=ae.getAttributes();for(const Q in k)if(k[Q].location>=0){let Me=X[Q];Me===void 0&&(Q==="instanceMatrix"&&V.instanceMatrix&&(Me=V.instanceMatrix),Q==="instanceColor"&&V.instanceColor&&(Me=V.instanceColor));const Te={};Te.attribute=Me,Me&&Me.data&&(Te.data=Me.data),q[Q]=Te,Y++}h.attributes=q,h.attributesNum=Y,h.index=se}function M(){const V=h.newAttributes;for(let $=0,ae=V.length;$<ae;$++)V[$]=0}function A(V){R(V,0)}function R(V,$){const ae=h.newAttributes,se=h.enabledAttributes,q=h.attributeDivisors;ae[V]=1,se[V]===0&&(r.enableVertexAttribArray(V),se[V]=1),q[V]!==$&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](V,$),q[V]=$)}function P(){const V=h.newAttributes,$=h.enabledAttributes;for(let ae=0,se=$.length;ae<se;ae++)$[ae]!==V[ae]&&(r.disableVertexAttribArray(ae),$[ae]=0)}function I(V,$,ae,se,q,X,Y){Y===!0?r.vertexAttribIPointer(V,$,ae,q,X):r.vertexAttribPointer(V,$,ae,se,q,X)}function F(V,$,ae,se){if(n.isWebGL2===!1&&(V.isInstancedMesh||se.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;M();const q=se.attributes,X=ae.getAttributes(),Y=$.defaultAttributeValues;for(const k in X){const Q=X[k];if(Q.location>=0){let fe=q[k];if(fe===void 0&&(k==="instanceMatrix"&&V.instanceMatrix&&(fe=V.instanceMatrix),k==="instanceColor"&&V.instanceColor&&(fe=V.instanceColor)),fe!==void 0){const Me=fe.normalized,Te=fe.itemSize,Oe=t.get(fe);if(Oe===void 0)continue;const Be=Oe.buffer,Xe=Oe.type,_t=Oe.bytesPerElement,Tt=n.isWebGL2===!0&&(Xe===r.INT||Xe===r.UNSIGNED_INT||fe.gpuType===ld);if(fe.isInterleavedBufferAttribute){const ze=fe.data,z=ze.stride,pe=fe.offset;if(ze.isInstancedInterleavedBuffer){for(let le=0;le<Q.locationSize;le++)R(Q.location+le,ze.meshPerAttribute);V.isInstancedMesh!==!0&&se._maxInstanceCount===void 0&&(se._maxInstanceCount=ze.meshPerAttribute*ze.count)}else for(let le=0;le<Q.locationSize;le++)A(Q.location+le);r.bindBuffer(r.ARRAY_BUFFER,Be);for(let le=0;le<Q.locationSize;le++)I(Q.location+le,Te/Q.locationSize,Xe,Me,z*_t,(pe+Te/Q.locationSize*le)*_t,Tt)}else{if(fe.isInstancedBufferAttribute){for(let ze=0;ze<Q.locationSize;ze++)R(Q.location+ze,fe.meshPerAttribute);V.isInstancedMesh!==!0&&se._maxInstanceCount===void 0&&(se._maxInstanceCount=fe.meshPerAttribute*fe.count)}else for(let ze=0;ze<Q.locationSize;ze++)A(Q.location+ze);r.bindBuffer(r.ARRAY_BUFFER,Be);for(let ze=0;ze<Q.locationSize;ze++)I(Q.location+ze,Te/Q.locationSize,Xe,Me,Te*_t,Te/Q.locationSize*ze*_t,Tt)}}else if(Y!==void 0){const Me=Y[k];if(Me!==void 0)switch(Me.length){case 2:r.vertexAttrib2fv(Q.location,Me);break;case 3:r.vertexAttrib3fv(Q.location,Me);break;case 4:r.vertexAttrib4fv(Q.location,Me);break;default:r.vertexAttrib1fv(Q.location,Me)}}}}P()}function b(){ee();for(const V in c){const $=c[V];for(const ae in $){const se=$[ae];for(const q in se)y(se[q].object),delete se[q];delete $[ae]}delete c[V]}}function L(V){if(c[V.id]===void 0)return;const $=c[V.id];for(const ae in $){const se=$[ae];for(const q in se)y(se[q].object),delete se[q];delete $[ae]}delete c[V.id]}function H(V){for(const $ in c){const ae=c[$];if(ae[V.id]===void 0)continue;const se=ae[V.id];for(const q in se)y(se[q].object),delete se[q];delete ae[V.id]}}function ee(){oe(),d=!0,h!==u&&(h=u,_(h.object))}function oe(){u.geometry=null,u.program=null,u.wireframe=!1}return{setup:p,reset:ee,resetDefaultState:oe,dispose:b,releaseStatesOfGeometry:L,releaseStatesOfProgram:H,initAttributes:M,enableAttribute:A,disableUnusedAttributes:P}}function OE(r,e,t,n){const i=n.isWebGL2;let s;function l(h){s=h}function c(h,d){r.drawArrays(s,h,d),t.update(d,s,1)}function u(h,d,p){if(p===0)return;let m,_;if(i)m=r,_="drawArraysInstanced";else if(m=e.get("ANGLE_instanced_arrays"),_="drawArraysInstancedANGLE",m===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[_](s,h,d,p),t.update(d,s,p)}this.setMode=l,this.render=c,this.renderInstances=u}function FE(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const I=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(I.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(I){if(I==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";I="mediump"}return I==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const l=typeof WebGL2RenderingContext<"u"&&r.constructor.name==="WebGL2RenderingContext";let c=t.precision!==void 0?t.precision:"highp";const u=s(c);u!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",u,"instead."),c=u);const h=l||e.has("WEBGL_draw_buffers"),d=t.logarithmicDepthBuffer===!0,p=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),m=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),_=r.getParameter(r.MAX_TEXTURE_SIZE),y=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),E=r.getParameter(r.MAX_VERTEX_ATTRIBS),x=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),v=r.getParameter(r.MAX_VARYING_VECTORS),w=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),M=m>0,A=l||e.has("OES_texture_float"),R=M&&A,P=l?r.getParameter(r.MAX_SAMPLES):0;return{isWebGL2:l,drawBuffers:h,getMaxAnisotropy:i,getMaxPrecision:s,precision:c,logarithmicDepthBuffer:d,maxTextures:p,maxVertexTextures:m,maxTextureSize:_,maxCubemapSize:y,maxAttributes:E,maxVertexUniforms:x,maxVaryings:v,maxFragmentUniforms:w,vertexTextures:M,floatFragmentTextures:A,floatVertexTextures:R,maxSamples:P}}function BE(r){const e=this;let t=null,n=0,i=!1,s=!1;const l=new Sr,c=new ft,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(p,m){const _=p.length!==0||m||n!==0||i;return i=m,n=p.length,_},this.beginShadows=function(){s=!0,d(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(p,m){t=d(p,m,0)},this.setState=function(p,m,_){const y=p.clippingPlanes,E=p.clipIntersection,x=p.clipShadows,v=r.get(p);if(!i||y===null||y.length===0||s&&!x)s?d(null):h();else{const w=s?0:n,M=w*4;let A=v.clippingState||null;u.value=A,A=d(y,m,M,_);for(let R=0;R!==M;++R)A[R]=t[R];v.clippingState=A,this.numIntersection=E?this.numPlanes:0,this.numPlanes+=w}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function d(p,m,_,y){const E=p!==null?p.length:0;let x=null;if(E!==0){if(x=u.value,y!==!0||x===null){const v=_+E*4,w=m.matrixWorldInverse;c.getNormalMatrix(w),(x===null||x.length<v)&&(x=new Float32Array(v));for(let M=0,A=_;M!==E;++M,A+=4)l.copy(p[M]).applyMatrix4(w,c),l.normal.toArray(x,A),x[A+3]=l.constant}u.value=x,u.needsUpdate=!0}return e.numPlanes=E,e.numIntersection=0,x}}function zE(r){let e=new WeakMap;function t(l,c){return c===ro?l.mapping=tr:c===so&&(l.mapping=Tr),l}function n(l){if(l&&l.isTexture&&l.isRenderTargetTexture===!1){const c=l.mapping;if(c===ro||c===so)if(e.has(l)){const u=e.get(l).texture;return t(u,l.mapping)}else{const u=l.image;if(u&&u.height>0){const h=new x_(u.height/2);return h.fromEquirectangularTexture(r,l),e.set(l,h),l.addEventListener("dispose",i),t(h.texture,l.mapping)}else return null}}return l}function i(l){const c=l.target;c.removeEventListener("dispose",i);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class Io extends Co{constructor(e=-1,t=1,n=1,i=-1,s=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=l,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,l=n+e,c=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,d=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,l=s+h*this.view.width,c-=d*this.view.offsetY,u=c-d*this.view.height}this.projectionMatrix.makeOrthographic(s,l,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const na=4,Hm=[.125,.215,.35,.446,.526,.582],Qr=20,zh=new Io,Vm=new De;let kh=null;const Kr=(1+Math.sqrt(5))/2,Ws=1/Kr,Gm=[new D(1,1,1),new D(-1,1,1),new D(1,1,-1),new D(-1,1,-1),new D(0,Kr,Ws),new D(0,Kr,-Ws),new D(Ws,0,Kr),new D(-Ws,0,Kr),new D(Kr,Ws,0),new D(-Kr,Ws,0)];class Zf{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){kh=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=qm(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Xm(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(kh),e.scissorTest=!1,ec(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===tr||e.mapping===Tr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),kh=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Jt,minFilter:Jt,generateMipmaps:!1,type:la,format:zn,colorSpace:Di,depthBuffer:!1},i=Wm(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Wm(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=kE(s)),this._blurMaterial=HE(s,e,t)}return i}_compileMaterial(e){const t=new gn(this._lodPlanes[0],e);this._renderer.compile(t,zh)}_sceneToCubeUV(e,t,n,i){const c=new dn(90,1,t,n),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],d=this._renderer,p=d.autoClear,m=d.toneMapping;d.getClearColor(Vm),d.toneMapping=Li,d.autoClear=!1;const _=new Cr({name:"PMREM.Background",side:Ln,depthWrite:!1,depthTest:!1}),y=new gn(new fs,_);let E=!1;const x=e.background;x?x.isColor&&(_.color.copy(x),e.background=null,E=!0):(_.color.copy(Vm),E=!0);for(let v=0;v<6;v++){const w=v%3;w===0?(c.up.set(0,u[v],0),c.lookAt(h[v],0,0)):w===1?(c.up.set(0,0,u[v]),c.lookAt(0,h[v],0)):(c.up.set(0,u[v],0),c.lookAt(0,0,h[v]));const M=this._cubeSize;ec(i,w*M,v>2?M:0,M,M),d.setRenderTarget(i),E&&d.render(y,c),d.render(e,c)}y.geometry.dispose(),y.material.dispose(),d.toneMapping=m,d.autoClear=p,e.background=x}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===tr||e.mapping===Tr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=qm()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Xm());const s=i?this._cubemapMaterial:this._equirectMaterial,l=new gn(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;ec(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(l,zh)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),l=Gm[(i-1)%Gm.length];this._blur(e,i-1,i,s,l)}t.autoClear=n}_blur(e,t,n,i,s){const l=this._pingPongRenderTarget;this._halfBlur(e,l,t,n,i,"latitudinal",s),this._halfBlur(l,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,l,c){const u=this._renderer,h=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const d=3,p=new gn(this._lodPlanes[i],h),m=h.uniforms,_=this._sizeLods[n]-1,y=isFinite(s)?Math.PI/(2*_):2*Math.PI/(2*Qr-1),E=s/y,x=isFinite(s)?1+Math.floor(d*E):Qr;x>Qr&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${x} samples when the maximum is set to ${Qr}`);const v=[];let w=0;for(let I=0;I<Qr;++I){const F=I/E,b=Math.exp(-F*F/2);v.push(b),I===0?w+=b:I<x&&(w+=2*b)}for(let I=0;I<v.length;I++)v[I]=v[I]/w;m.envMap.value=e.texture,m.samples.value=x,m.weights.value=v,m.latitudinal.value=l==="latitudinal",c&&(m.poleAxis.value=c);const{_lodMax:M}=this;m.dTheta.value=y,m.mipInt.value=M-n;const A=this._sizeLods[i],R=3*A*(i>M-na?i-M+na:0),P=4*(this._cubeSize-A);ec(t,R,P,3*A,2*A),u.setRenderTarget(t),u.render(p,zh)}}function kE(r){const e=[],t=[],n=[];let i=r;const s=r-na+1+Hm.length;for(let l=0;l<s;l++){const c=Math.pow(2,i);t.push(c);let u=1/c;l>r-na?u=Hm[l-r+na-1]:l===0&&(u=0),n.push(u);const h=1/(c-2),d=-h,p=1+h,m=[d,d,p,d,p,p,d,d,p,p,d,p],_=6,y=6,E=3,x=2,v=1,w=new Float32Array(E*y*_),M=new Float32Array(x*y*_),A=new Float32Array(v*y*_);for(let P=0;P<_;P++){const I=P%3*2/3-1,F=P>2?0:-1,b=[I,F,0,I+2/3,F,0,I+2/3,F+1,0,I,F,0,I+2/3,F+1,0,I,F+1,0];w.set(b,E*y*P),M.set(m,x*y*P);const L=[P,P,P,P,P,P];A.set(L,v*y*P)}const R=new mt;R.setAttribute("position",new It(w,E)),R.setAttribute("uv",new It(M,x)),R.setAttribute("faceIndex",new It(A,v)),e.push(R),i>na&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Wm(r,e,t){const n=new gi(r,e,t);return n.texture.mapping=da,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function ec(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function HE(r,e,t){const n=new Float32Array(Qr),i=new D(0,1,0);return new Ni({name:"SphericalGaussianBlur",defines:{n:Qr,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Sd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:$i,depthTest:!1,depthWrite:!1})}function Xm(){return new Ni({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Sd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:$i,depthTest:!1,depthWrite:!1})}function qm(){return new Ni({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Sd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:$i,depthTest:!1,depthWrite:!1})}function Sd(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function VE(r){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,h=u===ro||u===so,d=u===tr||u===Tr;if(h||d)if(c.isRenderTargetTexture&&c.needsPMREMUpdate===!0){c.needsPMREMUpdate=!1;let p=e.get(c);return t===null&&(t=new Zf(r)),p=h?t.fromEquirectangular(c,p):t.fromCubemap(c,p),e.set(c,p),p.texture}else{if(e.has(c))return e.get(c).texture;{const p=c.image;if(h&&p&&p.height>0||d&&p&&i(p)){t===null&&(t=new Zf(r));const m=h?t.fromEquirectangular(c):t.fromCubemap(c);return e.set(c,m),c.addEventListener("dispose",s),m.texture}else return null}}}return c}function i(c){let u=0;const h=6;for(let d=0;d<h;d++)c[d]!==void 0&&u++;return u===h}function s(c){const u=c.target;u.removeEventListener("dispose",s);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function l(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:l}}function GE(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function WE(r,e,t,n){const i={},s=new WeakMap;function l(p){const m=p.target;m.index!==null&&e.remove(m.index);for(const y in m.attributes)e.remove(m.attributes[y]);for(const y in m.morphAttributes){const E=m.morphAttributes[y];for(let x=0,v=E.length;x<v;x++)e.remove(E[x])}m.removeEventListener("dispose",l),delete i[m.id];const _=s.get(m);_&&(e.remove(_),s.delete(m)),n.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,t.memory.geometries--}function c(p,m){return i[m.id]===!0||(m.addEventListener("dispose",l),i[m.id]=!0,t.memory.geometries++),m}function u(p){const m=p.attributes;for(const y in m)e.update(m[y],r.ARRAY_BUFFER);const _=p.morphAttributes;for(const y in _){const E=_[y];for(let x=0,v=E.length;x<v;x++)e.update(E[x],r.ARRAY_BUFFER)}}function h(p){const m=[],_=p.index,y=p.attributes.position;let E=0;if(_!==null){const w=_.array;E=_.version;for(let M=0,A=w.length;M<A;M+=3){const R=w[M+0],P=w[M+1],I=w[M+2];m.push(R,P,P,I,I,R)}}else if(y!==void 0){const w=y.array;E=y.version;for(let M=0,A=w.length/3-1;M<A;M+=3){const R=M+0,P=M+1,I=M+2;m.push(R,P,P,I,I,R)}}else return;const x=new(d_(m)?xd:yd)(m,1);x.version=E;const v=s.get(p);v&&e.remove(v),s.set(p,x)}function d(p){const m=s.get(p);if(m){const _=p.index;_!==null&&m.version<_.version&&h(p)}else h(p);return s.get(p)}return{get:c,update:u,getWireframeAttribute:d}}function XE(r,e,t,n){const i=n.isWebGL2;let s;function l(m){s=m}let c,u;function h(m){c=m.type,u=m.bytesPerElement}function d(m,_){r.drawElements(s,_,c,m*u),t.update(_,s,1)}function p(m,_,y){if(y===0)return;let E,x;if(i)E=r,x="drawElementsInstanced";else if(E=e.get("ANGLE_instanced_arrays"),x="drawElementsInstancedANGLE",E===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}E[x](s,_,c,m*u,y),t.update(_,s,y)}this.setMode=l,this.setIndex=h,this.render=d,this.renderInstances=p}function qE(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,l,c){switch(t.calls++,l){case r.TRIANGLES:t.triangles+=c*(s/3);break;case r.LINES:t.lines+=c*(s/2);break;case r.LINE_STRIP:t.lines+=c*(s-1);break;case r.LINE_LOOP:t.lines+=c*s;break;case r.POINTS:t.points+=c*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function YE(r,e){return r[0]-e[0]}function ZE(r,e){return Math.abs(e[1])-Math.abs(r[1])}function JE(r,e,t){const n={},i=new Float32Array(8),s=new WeakMap,l=new Rt,c=[];for(let h=0;h<8;h++)c[h]=[h,0];function u(h,d,p){const m=h.morphTargetInfluences;if(e.isWebGL2===!0){const _=d.morphAttributes.position||d.morphAttributes.normal||d.morphAttributes.color,y=_!==void 0?_.length:0;let E=s.get(d);if(E===void 0||E.count!==y){let V=function(){ee.dispose(),s.delete(d),d.removeEventListener("dispose",V)};E!==void 0&&E.texture.dispose();const w=d.morphAttributes.position!==void 0,M=d.morphAttributes.normal!==void 0,A=d.morphAttributes.color!==void 0,R=d.morphAttributes.position||[],P=d.morphAttributes.normal||[],I=d.morphAttributes.color||[];let F=0;w===!0&&(F=1),M===!0&&(F=2),A===!0&&(F=3);let b=d.attributes.position.count*F,L=1;b>e.maxTextureSize&&(L=Math.ceil(b/e.maxTextureSize),b=e.maxTextureSize);const H=new Float32Array(b*L*4*y),ee=new Xc(H,b,L,y);ee.type=Ci,ee.needsUpdate=!0;const oe=F*4;for(let $=0;$<y;$++){const ae=R[$],se=P[$],q=I[$],X=b*L*4*$;for(let Y=0;Y<ae.count;Y++){const k=Y*oe;w===!0&&(l.fromBufferAttribute(ae,Y),H[X+k+0]=l.x,H[X+k+1]=l.y,H[X+k+2]=l.z,H[X+k+3]=0),M===!0&&(l.fromBufferAttribute(se,Y),H[X+k+4]=l.x,H[X+k+5]=l.y,H[X+k+6]=l.z,H[X+k+7]=0),A===!0&&(l.fromBufferAttribute(q,Y),H[X+k+8]=l.x,H[X+k+9]=l.y,H[X+k+10]=l.z,H[X+k+11]=q.itemSize===4?l.w:1)}}E={count:y,texture:ee,size:new ce(b,L)},s.set(d,E),d.addEventListener("dispose",V)}let x=0;for(let w=0;w<m.length;w++)x+=m[w];const v=d.morphTargetsRelative?1:1-x;p.getUniforms().setValue(r,"morphTargetBaseInfluence",v),p.getUniforms().setValue(r,"morphTargetInfluences",m),p.getUniforms().setValue(r,"morphTargetsTexture",E.texture,t),p.getUniforms().setValue(r,"morphTargetsTextureSize",E.size)}else{const _=m===void 0?0:m.length;let y=n[d.id];if(y===void 0||y.length!==_){y=[];for(let M=0;M<_;M++)y[M]=[M,0];n[d.id]=y}for(let M=0;M<_;M++){const A=y[M];A[0]=M,A[1]=m[M]}y.sort(ZE);for(let M=0;M<8;M++)M<_&&y[M][1]?(c[M][0]=y[M][0],c[M][1]=y[M][1]):(c[M][0]=Number.MAX_SAFE_INTEGER,c[M][1]=0);c.sort(YE);const E=d.morphAttributes.position,x=d.morphAttributes.normal;let v=0;for(let M=0;M<8;M++){const A=c[M],R=A[0],P=A[1];R!==Number.MAX_SAFE_INTEGER&&P?(E&&d.getAttribute("morphTarget"+M)!==E[R]&&d.setAttribute("morphTarget"+M,E[R]),x&&d.getAttribute("morphNormal"+M)!==x[R]&&d.setAttribute("morphNormal"+M,x[R]),i[M]=P,v+=P):(E&&d.hasAttribute("morphTarget"+M)===!0&&d.deleteAttribute("morphTarget"+M),x&&d.hasAttribute("morphNormal"+M)===!0&&d.deleteAttribute("morphNormal"+M),i[M]=0)}const w=d.morphTargetsRelative?1:1-v;p.getUniforms().setValue(r,"morphTargetBaseInfluence",w),p.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:u}}function KE(r,e,t,n){let i=new WeakMap;function s(u){const h=n.render.frame,d=u.geometry,p=e.get(u,d);if(i.get(p)!==h&&(e.update(p),i.set(p,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),i.get(u)!==h&&(t.update(u.instanceMatrix,r.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,r.ARRAY_BUFFER),i.set(u,h))),u.isSkinnedMesh){const m=u.skeleton;i.get(m)!==h&&(m.update(),i.set(m,h))}return p}function l(){i=new WeakMap}function c(u){const h=u.target;h.removeEventListener("dispose",c),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:l}}const M_=new Kt,E_=new Xc,w_=new vd,T_=new Po,Ym=[],Zm=[],Jm=new Float32Array(16),Km=new Float32Array(9),jm=new Float32Array(4);function ma(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=Ym[i];if(s===void 0&&(s=new Float32Array(i),Ym[i]=s),e!==0){n.toArray(s,0);for(let l=1,c=0;l!==e;++l)c+=t,r[l].toArray(s,c)}return s}function sn(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function an(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function Yc(r,e){let t=Zm[e];t===void 0&&(t=new Int32Array(e),Zm[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function jE(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function QE(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(sn(t,e))return;r.uniform2fv(this.addr,e),an(t,e)}}function $E(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(sn(t,e))return;r.uniform3fv(this.addr,e),an(t,e)}}function e1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(sn(t,e))return;r.uniform4fv(this.addr,e),an(t,e)}}function t1(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(sn(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),an(t,e)}else{if(sn(t,n))return;jm.set(n),r.uniformMatrix2fv(this.addr,!1,jm),an(t,n)}}function n1(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(sn(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),an(t,e)}else{if(sn(t,n))return;Km.set(n),r.uniformMatrix3fv(this.addr,!1,Km),an(t,n)}}function i1(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(sn(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),an(t,e)}else{if(sn(t,n))return;Jm.set(n),r.uniformMatrix4fv(this.addr,!1,Jm),an(t,n)}}function r1(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function s1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(sn(t,e))return;r.uniform2iv(this.addr,e),an(t,e)}}function a1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(sn(t,e))return;r.uniform3iv(this.addr,e),an(t,e)}}function o1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(sn(t,e))return;r.uniform4iv(this.addr,e),an(t,e)}}function l1(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function c1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(sn(t,e))return;r.uniform2uiv(this.addr,e),an(t,e)}}function u1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(sn(t,e))return;r.uniform3uiv(this.addr,e),an(t,e)}}function h1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(sn(t,e))return;r.uniform4uiv(this.addr,e),an(t,e)}}function f1(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||M_,i)}function d1(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||w_,i)}function p1(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||T_,i)}function m1(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||E_,i)}function g1(r){switch(r){case 5126:return jE;case 35664:return QE;case 35665:return $E;case 35666:return e1;case 35674:return t1;case 35675:return n1;case 35676:return i1;case 5124:case 35670:return r1;case 35667:case 35671:return s1;case 35668:case 35672:return a1;case 35669:case 35673:return o1;case 5125:return l1;case 36294:return c1;case 36295:return u1;case 36296:return h1;case 35678:case 36198:case 36298:case 36306:case 35682:return f1;case 35679:case 36299:case 36307:return d1;case 35680:case 36300:case 36308:case 36293:return p1;case 36289:case 36303:case 36311:case 36292:return m1}}function _1(r,e){r.uniform1fv(this.addr,e)}function v1(r,e){const t=ma(e,this.size,2);r.uniform2fv(this.addr,t)}function y1(r,e){const t=ma(e,this.size,3);r.uniform3fv(this.addr,t)}function x1(r,e){const t=ma(e,this.size,4);r.uniform4fv(this.addr,t)}function S1(r,e){const t=ma(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function M1(r,e){const t=ma(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function E1(r,e){const t=ma(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function w1(r,e){r.uniform1iv(this.addr,e)}function T1(r,e){r.uniform2iv(this.addr,e)}function A1(r,e){r.uniform3iv(this.addr,e)}function b1(r,e){r.uniform4iv(this.addr,e)}function R1(r,e){r.uniform1uiv(this.addr,e)}function C1(r,e){r.uniform2uiv(this.addr,e)}function P1(r,e){r.uniform3uiv(this.addr,e)}function L1(r,e){r.uniform4uiv(this.addr,e)}function I1(r,e,t){const n=this.cache,i=e.length,s=Yc(t,i);sn(n,s)||(r.uniform1iv(this.addr,s),an(n,s));for(let l=0;l!==i;++l)t.setTexture2D(e[l]||M_,s[l])}function U1(r,e,t){const n=this.cache,i=e.length,s=Yc(t,i);sn(n,s)||(r.uniform1iv(this.addr,s),an(n,s));for(let l=0;l!==i;++l)t.setTexture3D(e[l]||w_,s[l])}function D1(r,e,t){const n=this.cache,i=e.length,s=Yc(t,i);sn(n,s)||(r.uniform1iv(this.addr,s),an(n,s));for(let l=0;l!==i;++l)t.setTextureCube(e[l]||T_,s[l])}function N1(r,e,t){const n=this.cache,i=e.length,s=Yc(t,i);sn(n,s)||(r.uniform1iv(this.addr,s),an(n,s));for(let l=0;l!==i;++l)t.setTexture2DArray(e[l]||E_,s[l])}function O1(r){switch(r){case 5126:return _1;case 35664:return v1;case 35665:return y1;case 35666:return x1;case 35674:return S1;case 35675:return M1;case 35676:return E1;case 5124:case 35670:return w1;case 35667:case 35671:return T1;case 35668:case 35672:return A1;case 35669:case 35673:return b1;case 5125:return R1;case 36294:return C1;case 36295:return P1;case 36296:return L1;case 35678:case 36198:case 36298:case 36306:case 35682:return I1;case 35679:case 36299:case 36307:return U1;case 35680:case 36300:case 36308:case 36293:return D1;case 36289:case 36303:case 36311:case 36292:return N1}}class F1{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=g1(t.type)}}class B1{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=O1(t.type)}}class z1{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,l=i.length;s!==l;++s){const c=i[s];c.setValue(e,t[c.id],n)}}}const Hh=/(\w+)(\])?(\[|\.)?/g;function Qm(r,e){r.seq.push(e),r.map[e.id]=e}function k1(r,e,t){const n=r.name,i=n.length;for(Hh.lastIndex=0;;){const s=Hh.exec(n),l=Hh.lastIndex;let c=s[1];const u=s[2]==="]",h=s[3];if(u&&(c=c|0),h===void 0||h==="["&&l+2===i){Qm(t,h===void 0?new F1(c,r,e):new B1(c,r,e));break}else{let p=t.map[c];p===void 0&&(p=new z1(c),Qm(t,p)),t=p}}}class Lc{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),l=e.getUniformLocation(t,s.name);k1(s,l,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,l=t.length;s!==l;++s){const c=t[s],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const l=e[i];l.id in t&&n.push(l)}return n}}function $m(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}let H1=0;function V1(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let l=i;l<s;l++){const c=l+1;n.push(`${c===e?">":" "} ${c}: ${t[l]}`)}return n.join(`
`)}function G1(r){const e=bt.getPrimaries(bt.workingColorSpace),t=bt.getPrimaries(r);let n;switch(e===t?n="":e===po&&t===fo?n="LinearDisplayP3ToLinearSRGB":e===fo&&t===po&&(n="LinearSRGBToLinearDisplayP3"),r){case Di:case bo:return[n,"LinearTransferOETF"];case rn:case Wc:return[n,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",r),[n,"LinearTransferOETF"]}}function eg(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const l=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+V1(r.getShaderSource(e),l)}else return i}function W1(r,e){const t=G1(e);return`vec4 ${r}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function X1(r,e){let t;switch(e){case B0:t="Linear";break;case z0:t="Reinhard";break;case k0:t="OptimizedCineon";break;case ad:t="ACESFilmic";break;case H0:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function q1(r){return[r.extensionDerivatives||r.envMapCubeUVHeight||r.bumpMap||r.normalMapTangentSpace||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(ja).join(`
`)}function Y1(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function Z1(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),l=s.name;let c=1;s.type===r.FLOAT_MAT2&&(c=2),s.type===r.FLOAT_MAT3&&(c=3),s.type===r.FLOAT_MAT4&&(c=4),t[l]={type:s.type,location:r.getAttribLocation(e,l),locationSize:c}}return t}function ja(r){return r!==""}function tg(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function ng(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const J1=/^[ \t]*#include +<([\w\d./]+)>/gm;function Jf(r){return r.replace(J1,j1)}const K1=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function j1(r,e){let t=ct[e];if(t===void 0){const n=K1.get(e);if(n!==void 0)t=ct[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return Jf(t)}const Q1=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function ig(r){return r.replace(Q1,$1)}function $1(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function rg(r){let e="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function ew(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===kc?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===Qa?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===pi&&(e="SHADOWMAP_TYPE_VSM"),e}function tw(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case tr:case Tr:e="ENVMAP_TYPE_CUBE";break;case da:e="ENVMAP_TYPE_CUBE_UV";break}return e}function nw(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Tr:e="ENVMAP_MODE_REFRACTION";break}return e}function iw(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case Ao:e="ENVMAP_BLENDING_MULTIPLY";break;case O0:e="ENVMAP_BLENDING_MIX";break;case F0:e="ENVMAP_BLENDING_ADD";break}return e}function rw(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function sw(r,e,t,n){const i=r.getContext(),s=t.defines;let l=t.vertexShader,c=t.fragmentShader;const u=ew(t),h=tw(t),d=nw(t),p=iw(t),m=rw(t),_=t.isWebGL2?"":q1(t),y=Y1(s),E=i.createProgram();let x,v,w=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(x=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(ja).join(`
`),x.length>0&&(x+=`
`),v=[_,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(ja).join(`
`),v.length>0&&(v+=`
`)):(x=[rg(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(ja).join(`
`),v=[_,rg(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+d:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Li?"#define TONE_MAPPING":"",t.toneMapping!==Li?ct.tonemapping_pars_fragment:"",t.toneMapping!==Li?X1("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",ct.colorspace_pars_fragment,W1("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(ja).join(`
`)),l=Jf(l),l=tg(l,t),l=ng(l,t),c=Jf(c),c=tg(c,t),c=ng(c,t),l=ig(l),c=ig(c),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(w=`#version 300 es
`,x=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+x,v=["#define varying in",t.glslVersion===qf?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===qf?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const M=w+x+l,A=w+v+c,R=$m(i,i.VERTEX_SHADER,M),P=$m(i,i.FRAGMENT_SHADER,A);if(i.attachShader(E,R),i.attachShader(E,P),t.index0AttributeName!==void 0?i.bindAttribLocation(E,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(E,0,"position"),i.linkProgram(E),r.debug.checkShaderErrors){const b=i.getProgramInfoLog(E).trim(),L=i.getShaderInfoLog(R).trim(),H=i.getShaderInfoLog(P).trim();let ee=!0,oe=!0;if(i.getProgramParameter(E,i.LINK_STATUS)===!1)if(ee=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,E,R,P);else{const V=eg(i,R,"vertex"),$=eg(i,P,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(E,i.VALIDATE_STATUS)+`

Program Info Log: `+b+`
`+V+`
`+$)}else b!==""?console.warn("THREE.WebGLProgram: Program Info Log:",b):(L===""||H==="")&&(oe=!1);oe&&(this.diagnostics={runnable:ee,programLog:b,vertexShader:{log:L,prefix:x},fragmentShader:{log:H,prefix:v}})}i.deleteShader(R),i.deleteShader(P);let I;this.getUniforms=function(){return I===void 0&&(I=new Lc(i,E)),I};let F;return this.getAttributes=function(){return F===void 0&&(F=Z1(i,E)),F},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(E),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=H1++,this.cacheKey=e,this.usedTimes=1,this.program=E,this.vertexShader=R,this.fragmentShader=P,this}let aw=0;class ow{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),l=this._getShaderCacheForMaterial(e);return l.has(i)===!1&&(l.add(i),i.usedTimes++),l.has(s)===!1&&(l.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new lw(e),t.set(e,n)),n}}class lw{constructor(e){this.id=aw++,this.code=e,this.usedTimes=0}}function cw(r,e,t,n,i,s,l){const c=new as,u=new ow,h=[],d=i.isWebGL2,p=i.logarithmicDepthBuffer,m=i.vertexTextures;let _=i.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function E(b){return b===0?"uv":`uv${b}`}function x(b,L,H,ee,oe){const V=ee.fog,$=oe.geometry,ae=b.isMeshStandardMaterial?ee.environment:null,se=(b.isMeshStandardMaterial?t:e).get(b.envMap||ae),q=se&&se.mapping===da?se.image.height:null,X=y[b.type];b.precision!==null&&(_=i.getMaxPrecision(b.precision),_!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",_,"instead."));const Y=$.morphAttributes.position||$.morphAttributes.normal||$.morphAttributes.color,k=Y!==void 0?Y.length:0;let Q=0;$.morphAttributes.position!==void 0&&(Q=1),$.morphAttributes.normal!==void 0&&(Q=2),$.morphAttributes.color!==void 0&&(Q=3);let fe,Me,Te,Oe;if(X){const Ct=mi[X];fe=Ct.vertexShader,Me=Ct.fragmentShader}else fe=b.vertexShader,Me=b.fragmentShader,u.update(b),Te=u.getVertexShaderID(b),Oe=u.getFragmentShaderID(b);const Be=r.getRenderTarget(),Xe=oe.isInstancedMesh===!0,_t=!!b.map,Tt=!!b.matcap,ze=!!se,z=!!b.aoMap,pe=!!b.lightMap,le=!!b.bumpMap,ve=!!b.normalMap,ue=!!b.displacementMap,We=!!b.emissiveMap,Pe=!!b.metalnessMap,Ne=!!b.roughnessMap,Ke=b.anisotropy>0,gt=b.clearcoat>0,Ft=b.iridescence>0,O=b.sheen>0,C=b.transmission>0,j=Ke&&!!b.anisotropyMap,me=gt&&!!b.clearcoatMap,de=gt&&!!b.clearcoatNormalMap,ge=gt&&!!b.clearcoatRoughnessMap,ke=Ft&&!!b.iridescenceMap,xe=Ft&&!!b.iridescenceThicknessMap,Re=O&&!!b.sheenColorMap,Qe=O&&!!b.sheenRoughnessMap,vt=!!b.specularMap,ye=!!b.specularColorMap,wt=!!b.specularIntensityMap,rt=C&&!!b.transmissionMap,je=C&&!!b.thicknessMap,Ze=!!b.gradientMap,B=!!b.alphaMap,Ee=b.alphaTest>0,Se=!!b.alphaHash,Le=!!b.extensions,be=!!$.attributes.uv1,he=!!$.attributes.uv2,Ve=!!$.attributes.uv3;let st=Li;return b.toneMapped&&(Be===null||Be.isXRRenderTarget===!0)&&(st=r.toneMapping),{isWebGL2:d,shaderID:X,shaderType:b.type,shaderName:b.name,vertexShader:fe,fragmentShader:Me,defines:b.defines,customVertexShaderID:Te,customFragmentShaderID:Oe,isRawShaderMaterial:b.isRawShaderMaterial===!0,glslVersion:b.glslVersion,precision:_,instancing:Xe,instancingColor:Xe&&oe.instanceColor!==null,supportsVertexTextures:m,outputColorSpace:Be===null?r.outputColorSpace:Be.isXRRenderTarget===!0?Be.texture.colorSpace:Di,map:_t,matcap:Tt,envMap:ze,envMapMode:ze&&se.mapping,envMapCubeUVHeight:q,aoMap:z,lightMap:pe,bumpMap:le,normalMap:ve,displacementMap:m&&ue,emissiveMap:We,normalMapObjectSpace:ve&&b.normalMapType===n_,normalMapTangentSpace:ve&&b.normalMapType===Rr,metalnessMap:Pe,roughnessMap:Ne,anisotropy:Ke,anisotropyMap:j,clearcoat:gt,clearcoatMap:me,clearcoatNormalMap:de,clearcoatRoughnessMap:ge,iridescence:Ft,iridescenceMap:ke,iridescenceThicknessMap:xe,sheen:O,sheenColorMap:Re,sheenRoughnessMap:Qe,specularMap:vt,specularColorMap:ye,specularIntensityMap:wt,transmission:C,transmissionMap:rt,thicknessMap:je,gradientMap:Ze,opaque:b.transparent===!1&&b.blending===rs,alphaMap:B,alphaTest:Ee,alphaHash:Se,combine:b.combine,mapUv:_t&&E(b.map.channel),aoMapUv:z&&E(b.aoMap.channel),lightMapUv:pe&&E(b.lightMap.channel),bumpMapUv:le&&E(b.bumpMap.channel),normalMapUv:ve&&E(b.normalMap.channel),displacementMapUv:ue&&E(b.displacementMap.channel),emissiveMapUv:We&&E(b.emissiveMap.channel),metalnessMapUv:Pe&&E(b.metalnessMap.channel),roughnessMapUv:Ne&&E(b.roughnessMap.channel),anisotropyMapUv:j&&E(b.anisotropyMap.channel),clearcoatMapUv:me&&E(b.clearcoatMap.channel),clearcoatNormalMapUv:de&&E(b.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:ge&&E(b.clearcoatRoughnessMap.channel),iridescenceMapUv:ke&&E(b.iridescenceMap.channel),iridescenceThicknessMapUv:xe&&E(b.iridescenceThicknessMap.channel),sheenColorMapUv:Re&&E(b.sheenColorMap.channel),sheenRoughnessMapUv:Qe&&E(b.sheenRoughnessMap.channel),specularMapUv:vt&&E(b.specularMap.channel),specularColorMapUv:ye&&E(b.specularColorMap.channel),specularIntensityMapUv:wt&&E(b.specularIntensityMap.channel),transmissionMapUv:rt&&E(b.transmissionMap.channel),thicknessMapUv:je&&E(b.thicknessMap.channel),alphaMapUv:B&&E(b.alphaMap.channel),vertexTangents:!!$.attributes.tangent&&(ve||Ke),vertexColors:b.vertexColors,vertexAlphas:b.vertexColors===!0&&!!$.attributes.color&&$.attributes.color.itemSize===4,vertexUv1s:be,vertexUv2s:he,vertexUv3s:Ve,pointsUvs:oe.isPoints===!0&&!!$.attributes.uv&&(_t||B),fog:!!V,useFog:b.fog===!0,fogExp2:V&&V.isFogExp2,flatShading:b.flatShading===!0,sizeAttenuation:b.sizeAttenuation===!0,logarithmicDepthBuffer:p,skinning:oe.isSkinnedMesh===!0,morphTargets:$.morphAttributes.position!==void 0,morphNormals:$.morphAttributes.normal!==void 0,morphColors:$.morphAttributes.color!==void 0,morphTargetsCount:k,morphTextureStride:Q,numDirLights:L.directional.length,numPointLights:L.point.length,numSpotLights:L.spot.length,numSpotLightMaps:L.spotLightMap.length,numRectAreaLights:L.rectArea.length,numHemiLights:L.hemi.length,numDirLightShadows:L.directionalShadowMap.length,numPointLightShadows:L.pointShadowMap.length,numSpotLightShadows:L.spotShadowMap.length,numSpotLightShadowsWithMaps:L.numSpotLightShadowsWithMaps,numLightProbes:L.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:b.dithering,shadowMapEnabled:r.shadowMap.enabled&&H.length>0,shadowMapType:r.shadowMap.type,toneMapping:st,useLegacyLights:r._useLegacyLights,decodeVideoTexture:_t&&b.map.isVideoTexture===!0&&bt.getTransfer(b.map.colorSpace)===Dt,premultipliedAlpha:b.premultipliedAlpha,doubleSided:b.side===Ri,flipSided:b.side===Ln,useDepthPacking:b.depthPacking>=0,depthPacking:b.depthPacking||0,index0AttributeName:b.index0AttributeName,extensionDerivatives:Le&&b.extensions.derivatives===!0,extensionFragDepth:Le&&b.extensions.fragDepth===!0,extensionDrawBuffers:Le&&b.extensions.drawBuffers===!0,extensionShaderTextureLOD:Le&&b.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:d||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:d||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:d||n.has("EXT_shader_texture_lod"),customProgramCacheKey:b.customProgramCacheKey()}}function v(b){const L=[];if(b.shaderID?L.push(b.shaderID):(L.push(b.customVertexShaderID),L.push(b.customFragmentShaderID)),b.defines!==void 0)for(const H in b.defines)L.push(H),L.push(b.defines[H]);return b.isRawShaderMaterial===!1&&(w(L,b),M(L,b),L.push(r.outputColorSpace)),L.push(b.customProgramCacheKey),L.join()}function w(b,L){b.push(L.precision),b.push(L.outputColorSpace),b.push(L.envMapMode),b.push(L.envMapCubeUVHeight),b.push(L.mapUv),b.push(L.alphaMapUv),b.push(L.lightMapUv),b.push(L.aoMapUv),b.push(L.bumpMapUv),b.push(L.normalMapUv),b.push(L.displacementMapUv),b.push(L.emissiveMapUv),b.push(L.metalnessMapUv),b.push(L.roughnessMapUv),b.push(L.anisotropyMapUv),b.push(L.clearcoatMapUv),b.push(L.clearcoatNormalMapUv),b.push(L.clearcoatRoughnessMapUv),b.push(L.iridescenceMapUv),b.push(L.iridescenceThicknessMapUv),b.push(L.sheenColorMapUv),b.push(L.sheenRoughnessMapUv),b.push(L.specularMapUv),b.push(L.specularColorMapUv),b.push(L.specularIntensityMapUv),b.push(L.transmissionMapUv),b.push(L.thicknessMapUv),b.push(L.combine),b.push(L.fogExp2),b.push(L.sizeAttenuation),b.push(L.morphTargetsCount),b.push(L.morphAttributeCount),b.push(L.numDirLights),b.push(L.numPointLights),b.push(L.numSpotLights),b.push(L.numSpotLightMaps),b.push(L.numHemiLights),b.push(L.numRectAreaLights),b.push(L.numDirLightShadows),b.push(L.numPointLightShadows),b.push(L.numSpotLightShadows),b.push(L.numSpotLightShadowsWithMaps),b.push(L.numLightProbes),b.push(L.shadowMapType),b.push(L.toneMapping),b.push(L.numClippingPlanes),b.push(L.numClipIntersection),b.push(L.depthPacking)}function M(b,L){c.disableAll(),L.isWebGL2&&c.enable(0),L.supportsVertexTextures&&c.enable(1),L.instancing&&c.enable(2),L.instancingColor&&c.enable(3),L.matcap&&c.enable(4),L.envMap&&c.enable(5),L.normalMapObjectSpace&&c.enable(6),L.normalMapTangentSpace&&c.enable(7),L.clearcoat&&c.enable(8),L.iridescence&&c.enable(9),L.alphaTest&&c.enable(10),L.vertexColors&&c.enable(11),L.vertexAlphas&&c.enable(12),L.vertexUv1s&&c.enable(13),L.vertexUv2s&&c.enable(14),L.vertexUv3s&&c.enable(15),L.vertexTangents&&c.enable(16),L.anisotropy&&c.enable(17),b.push(c.mask),c.disableAll(),L.fog&&c.enable(0),L.useFog&&c.enable(1),L.flatShading&&c.enable(2),L.logarithmicDepthBuffer&&c.enable(3),L.skinning&&c.enable(4),L.morphTargets&&c.enable(5),L.morphNormals&&c.enable(6),L.morphColors&&c.enable(7),L.premultipliedAlpha&&c.enable(8),L.shadowMapEnabled&&c.enable(9),L.useLegacyLights&&c.enable(10),L.doubleSided&&c.enable(11),L.flipSided&&c.enable(12),L.useDepthPacking&&c.enable(13),L.dithering&&c.enable(14),L.transmission&&c.enable(15),L.sheen&&c.enable(16),L.opaque&&c.enable(17),L.pointsUvs&&c.enable(18),L.decodeVideoTexture&&c.enable(19),b.push(c.mask)}function A(b){const L=y[b.type];let H;if(L){const ee=mi[L];H=v_.clone(ee.uniforms)}else H=b.uniforms;return H}function R(b,L){let H;for(let ee=0,oe=h.length;ee<oe;ee++){const V=h[ee];if(V.cacheKey===L){H=V,++H.usedTimes;break}}return H===void 0&&(H=new sw(r,L,b,s),h.push(H)),H}function P(b){if(--b.usedTimes===0){const L=h.indexOf(b);h[L]=h[h.length-1],h.pop(),b.destroy()}}function I(b){u.remove(b)}function F(){u.dispose()}return{getParameters:x,getProgramCacheKey:v,getUniforms:A,acquireProgram:R,releaseProgram:P,releaseShaderCache:I,programs:h,dispose:F}}function uw(){let r=new WeakMap;function e(s){let l=r.get(s);return l===void 0&&(l={},r.set(s,l)),l}function t(s){r.delete(s)}function n(s,l,c){r.get(s)[l]=c}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function hw(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function sg(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function ag(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function l(p,m,_,y,E,x){let v=r[e];return v===void 0?(v={id:p.id,object:p,geometry:m,material:_,groupOrder:y,renderOrder:p.renderOrder,z:E,group:x},r[e]=v):(v.id=p.id,v.object=p,v.geometry=m,v.material=_,v.groupOrder=y,v.renderOrder=p.renderOrder,v.z=E,v.group=x),e++,v}function c(p,m,_,y,E,x){const v=l(p,m,_,y,E,x);_.transmission>0?n.push(v):_.transparent===!0?i.push(v):t.push(v)}function u(p,m,_,y,E,x){const v=l(p,m,_,y,E,x);_.transmission>0?n.unshift(v):_.transparent===!0?i.unshift(v):t.unshift(v)}function h(p,m){t.length>1&&t.sort(p||hw),n.length>1&&n.sort(m||sg),i.length>1&&i.sort(m||sg)}function d(){for(let p=e,m=r.length;p<m;p++){const _=r[p];if(_.id===null)break;_.id=null,_.object=null,_.geometry=null,_.material=null,_.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:c,unshift:u,finish:d,sort:h}}function fw(){let r=new WeakMap;function e(n,i){const s=r.get(n);let l;return s===void 0?(l=new ag,r.set(n,[l])):i>=s.length?(l=new ag,s.push(l)):l=s[i],l}function t(){r=new WeakMap}return{get:e,dispose:t}}function dw(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new D,color:new De};break;case"SpotLight":t={position:new D,direction:new D,color:new De,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new D,color:new De,distance:0,decay:0};break;case"HemisphereLight":t={direction:new D,skyColor:new De,groundColor:new De};break;case"RectAreaLight":t={color:new De,position:new D,halfWidth:new D,halfHeight:new D};break}return r[e.id]=t,t}}}function pw(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ce};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ce};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ce,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let mw=0;function gw(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function _w(r,e){const t=new dw,n=pw(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let d=0;d<9;d++)i.probe.push(new D);const s=new D,l=new lt,c=new lt;function u(d,p){let m=0,_=0,y=0;for(let ee=0;ee<9;ee++)i.probe[ee].set(0,0,0);let E=0,x=0,v=0,w=0,M=0,A=0,R=0,P=0,I=0,F=0,b=0;d.sort(gw);const L=p===!0?Math.PI:1;for(let ee=0,oe=d.length;ee<oe;ee++){const V=d[ee],$=V.color,ae=V.intensity,se=V.distance,q=V.shadow&&V.shadow.map?V.shadow.map.texture:null;if(V.isAmbientLight)m+=$.r*ae*L,_+=$.g*ae*L,y+=$.b*ae*L;else if(V.isLightProbe){for(let X=0;X<9;X++)i.probe[X].addScaledVector(V.sh.coefficients[X],ae);b++}else if(V.isDirectionalLight){const X=t.get(V);if(X.color.copy(V.color).multiplyScalar(V.intensity*L),V.castShadow){const Y=V.shadow,k=n.get(V);k.shadowBias=Y.bias,k.shadowNormalBias=Y.normalBias,k.shadowRadius=Y.radius,k.shadowMapSize=Y.mapSize,i.directionalShadow[E]=k,i.directionalShadowMap[E]=q,i.directionalShadowMatrix[E]=V.shadow.matrix,A++}i.directional[E]=X,E++}else if(V.isSpotLight){const X=t.get(V);X.position.setFromMatrixPosition(V.matrixWorld),X.color.copy($).multiplyScalar(ae*L),X.distance=se,X.coneCos=Math.cos(V.angle),X.penumbraCos=Math.cos(V.angle*(1-V.penumbra)),X.decay=V.decay,i.spot[v]=X;const Y=V.shadow;if(V.map&&(i.spotLightMap[I]=V.map,I++,Y.updateMatrices(V),V.castShadow&&F++),i.spotLightMatrix[v]=Y.matrix,V.castShadow){const k=n.get(V);k.shadowBias=Y.bias,k.shadowNormalBias=Y.normalBias,k.shadowRadius=Y.radius,k.shadowMapSize=Y.mapSize,i.spotShadow[v]=k,i.spotShadowMap[v]=q,P++}v++}else if(V.isRectAreaLight){const X=t.get(V);X.color.copy($).multiplyScalar(ae),X.halfWidth.set(V.width*.5,0,0),X.halfHeight.set(0,V.height*.5,0),i.rectArea[w]=X,w++}else if(V.isPointLight){const X=t.get(V);if(X.color.copy(V.color).multiplyScalar(V.intensity*L),X.distance=V.distance,X.decay=V.decay,V.castShadow){const Y=V.shadow,k=n.get(V);k.shadowBias=Y.bias,k.shadowNormalBias=Y.normalBias,k.shadowRadius=Y.radius,k.shadowMapSize=Y.mapSize,k.shadowCameraNear=Y.camera.near,k.shadowCameraFar=Y.camera.far,i.pointShadow[x]=k,i.pointShadowMap[x]=q,i.pointShadowMatrix[x]=V.shadow.matrix,R++}i.point[x]=X,x++}else if(V.isHemisphereLight){const X=t.get(V);X.skyColor.copy(V.color).multiplyScalar(ae*L),X.groundColor.copy(V.groundColor).multiplyScalar(ae*L),i.hemi[M]=X,M++}}w>0&&(e.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=we.LTC_FLOAT_1,i.rectAreaLTC2=we.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=we.LTC_HALF_1,i.rectAreaLTC2=we.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=m,i.ambient[1]=_,i.ambient[2]=y;const H=i.hash;(H.directionalLength!==E||H.pointLength!==x||H.spotLength!==v||H.rectAreaLength!==w||H.hemiLength!==M||H.numDirectionalShadows!==A||H.numPointShadows!==R||H.numSpotShadows!==P||H.numSpotMaps!==I||H.numLightProbes!==b)&&(i.directional.length=E,i.spot.length=v,i.rectArea.length=w,i.point.length=x,i.hemi.length=M,i.directionalShadow.length=A,i.directionalShadowMap.length=A,i.pointShadow.length=R,i.pointShadowMap.length=R,i.spotShadow.length=P,i.spotShadowMap.length=P,i.directionalShadowMatrix.length=A,i.pointShadowMatrix.length=R,i.spotLightMatrix.length=P+I-F,i.spotLightMap.length=I,i.numSpotLightShadowsWithMaps=F,i.numLightProbes=b,H.directionalLength=E,H.pointLength=x,H.spotLength=v,H.rectAreaLength=w,H.hemiLength=M,H.numDirectionalShadows=A,H.numPointShadows=R,H.numSpotShadows=P,H.numSpotMaps=I,H.numLightProbes=b,i.version=mw++)}function h(d,p){let m=0,_=0,y=0,E=0,x=0;const v=p.matrixWorldInverse;for(let w=0,M=d.length;w<M;w++){const A=d[w];if(A.isDirectionalLight){const R=i.directional[m];R.direction.setFromMatrixPosition(A.matrixWorld),s.setFromMatrixPosition(A.target.matrixWorld),R.direction.sub(s),R.direction.transformDirection(v),m++}else if(A.isSpotLight){const R=i.spot[y];R.position.setFromMatrixPosition(A.matrixWorld),R.position.applyMatrix4(v),R.direction.setFromMatrixPosition(A.matrixWorld),s.setFromMatrixPosition(A.target.matrixWorld),R.direction.sub(s),R.direction.transformDirection(v),y++}else if(A.isRectAreaLight){const R=i.rectArea[E];R.position.setFromMatrixPosition(A.matrixWorld),R.position.applyMatrix4(v),c.identity(),l.copy(A.matrixWorld),l.premultiply(v),c.extractRotation(l),R.halfWidth.set(A.width*.5,0,0),R.halfHeight.set(0,A.height*.5,0),R.halfWidth.applyMatrix4(c),R.halfHeight.applyMatrix4(c),E++}else if(A.isPointLight){const R=i.point[_];R.position.setFromMatrixPosition(A.matrixWorld),R.position.applyMatrix4(v),_++}else if(A.isHemisphereLight){const R=i.hemi[x];R.direction.setFromMatrixPosition(A.matrixWorld),R.direction.transformDirection(v),x++}}}return{setup:u,setupView:h,state:i}}function og(r,e){const t=new _w(r,e),n=[],i=[];function s(){n.length=0,i.length=0}function l(p){n.push(p)}function c(p){i.push(p)}function u(p){t.setup(n,p)}function h(p){t.setupView(n,p)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:u,setupLightsView:h,pushLight:l,pushShadow:c}}function vw(r,e){let t=new WeakMap;function n(s,l=0){const c=t.get(s);let u;return c===void 0?(u=new og(r,e),t.set(s,[u])):l>=c.length?(u=new og(r,e),c.push(u)):u=c[l],u}function i(){t=new WeakMap}return{get:n,dispose:i}}class Md extends An{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=e_,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Ed extends An{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const yw=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,xw=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Sw(r,e,t){let n=new qc;const i=new ce,s=new ce,l=new Rt,c=new Md({depthPacking:t_}),u=new Ed,h={},d=t.maxTextureSize,p={[er]:Ln,[Ln]:er,[Ri]:Ri},m=new Ni({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ce},radius:{value:4}},vertexShader:yw,fragmentShader:xw}),_=m.clone();_.defines.HORIZONTAL_PASS=1;const y=new mt;y.setAttribute("position",new It(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const E=new gn(y,m),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=kc;let v=this.type;this.render=function(R,P,I){if(x.enabled===!1||x.autoUpdate===!1&&x.needsUpdate===!1||R.length===0)return;const F=r.getRenderTarget(),b=r.getActiveCubeFace(),L=r.getActiveMipmapLevel(),H=r.state;H.setBlending($i),H.buffers.color.setClear(1,1,1,1),H.buffers.depth.setTest(!0),H.setScissorTest(!1);const ee=v!==pi&&this.type===pi,oe=v===pi&&this.type!==pi;for(let V=0,$=R.length;V<$;V++){const ae=R[V],se=ae.shadow;if(se===void 0){console.warn("THREE.WebGLShadowMap:",ae,"has no shadow.");continue}if(se.autoUpdate===!1&&se.needsUpdate===!1)continue;i.copy(se.mapSize);const q=se.getFrameExtents();if(i.multiply(q),s.copy(se.mapSize),(i.x>d||i.y>d)&&(i.x>d&&(s.x=Math.floor(d/q.x),i.x=s.x*q.x,se.mapSize.x=s.x),i.y>d&&(s.y=Math.floor(d/q.y),i.y=s.y*q.y,se.mapSize.y=s.y)),se.map===null||ee===!0||oe===!0){const Y=this.type!==pi?{minFilter:Zt,magFilter:Zt}:{};se.map!==null&&se.map.dispose(),se.map=new gi(i.x,i.y,Y),se.map.texture.name=ae.name+".shadowMap",se.camera.updateProjectionMatrix()}r.setRenderTarget(se.map),r.clear();const X=se.getViewportCount();for(let Y=0;Y<X;Y++){const k=se.getViewport(Y);l.set(s.x*k.x,s.y*k.y,s.x*k.z,s.y*k.w),H.viewport(l),se.updateMatrices(ae,Y),n=se.getFrustum(),A(P,I,se.camera,ae,this.type)}se.isPointLightShadow!==!0&&this.type===pi&&w(se,I),se.needsUpdate=!1}v=this.type,x.needsUpdate=!1,r.setRenderTarget(F,b,L)};function w(R,P){const I=e.update(E);m.defines.VSM_SAMPLES!==R.blurSamples&&(m.defines.VSM_SAMPLES=R.blurSamples,_.defines.VSM_SAMPLES=R.blurSamples,m.needsUpdate=!0,_.needsUpdate=!0),R.mapPass===null&&(R.mapPass=new gi(i.x,i.y)),m.uniforms.shadow_pass.value=R.map.texture,m.uniforms.resolution.value=R.mapSize,m.uniforms.radius.value=R.radius,r.setRenderTarget(R.mapPass),r.clear(),r.renderBufferDirect(P,null,I,m,E,null),_.uniforms.shadow_pass.value=R.mapPass.texture,_.uniforms.resolution.value=R.mapSize,_.uniforms.radius.value=R.radius,r.setRenderTarget(R.map),r.clear(),r.renderBufferDirect(P,null,I,_,E,null)}function M(R,P,I,F){let b=null;const L=I.isPointLight===!0?R.customDistanceMaterial:R.customDepthMaterial;if(L!==void 0)b=L;else if(b=I.isPointLight===!0?u:c,r.localClippingEnabled&&P.clipShadows===!0&&Array.isArray(P.clippingPlanes)&&P.clippingPlanes.length!==0||P.displacementMap&&P.displacementScale!==0||P.alphaMap&&P.alphaTest>0||P.map&&P.alphaTest>0){const H=b.uuid,ee=P.uuid;let oe=h[H];oe===void 0&&(oe={},h[H]=oe);let V=oe[ee];V===void 0&&(V=b.clone(),oe[ee]=V),b=V}if(b.visible=P.visible,b.wireframe=P.wireframe,F===pi?b.side=P.shadowSide!==null?P.shadowSide:P.side:b.side=P.shadowSide!==null?P.shadowSide:p[P.side],b.alphaMap=P.alphaMap,b.alphaTest=P.alphaTest,b.map=P.map,b.clipShadows=P.clipShadows,b.clippingPlanes=P.clippingPlanes,b.clipIntersection=P.clipIntersection,b.displacementMap=P.displacementMap,b.displacementScale=P.displacementScale,b.displacementBias=P.displacementBias,b.wireframeLinewidth=P.wireframeLinewidth,b.linewidth=P.linewidth,I.isPointLight===!0&&b.isMeshDistanceMaterial===!0){const H=r.properties.get(b);H.light=I}return b}function A(R,P,I,F,b){if(R.visible===!1)return;if(R.layers.test(P.layers)&&(R.isMesh||R.isLine||R.isPoints)&&(R.castShadow||R.receiveShadow&&b===pi)&&(!R.frustumCulled||n.intersectsObject(R))){R.modelViewMatrix.multiplyMatrices(I.matrixWorldInverse,R.matrixWorld);const ee=e.update(R),oe=R.material;if(Array.isArray(oe)){const V=ee.groups;for(let $=0,ae=V.length;$<ae;$++){const se=V[$],q=oe[se.materialIndex];if(q&&q.visible){const X=M(R,q,F,b);r.renderBufferDirect(I,null,ee,X,R,se)}}}else if(oe.visible){const V=M(R,oe,F,b);r.renderBufferDirect(I,null,ee,V,R,null)}}const H=R.children;for(let ee=0,oe=H.length;ee<oe;ee++)A(H[ee],P,I,F,b)}}function Mw(r,e,t){const n=t.isWebGL2;function i(){let B=!1;const Ee=new Rt;let Se=null;const Le=new Rt(0,0,0,0);return{setMask:function(be){Se!==be&&!B&&(r.colorMask(be,be,be,be),Se=be)},setLocked:function(be){B=be},setClear:function(be,he,Ve,st,on){on===!0&&(be*=st,he*=st,Ve*=st),Ee.set(be,he,Ve,st),Le.equals(Ee)===!1&&(r.clearColor(be,he,Ve,st),Le.copy(Ee))},reset:function(){B=!1,Se=null,Le.set(-1,0,0,0)}}}function s(){let B=!1,Ee=null,Se=null,Le=null;return{setTest:function(be){be?Be(r.DEPTH_TEST):Xe(r.DEPTH_TEST)},setMask:function(be){Ee!==be&&!B&&(r.depthMask(be),Ee=be)},setFunc:function(be){if(Se!==be){switch(be){case C0:r.depthFunc(r.NEVER);break;case P0:r.depthFunc(r.ALWAYS);break;case L0:r.depthFunc(r.LESS);break;case Uc:r.depthFunc(r.LEQUAL);break;case I0:r.depthFunc(r.EQUAL);break;case U0:r.depthFunc(r.GEQUAL);break;case D0:r.depthFunc(r.GREATER);break;case N0:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}Se=be}},setLocked:function(be){B=be},setClear:function(be){Le!==be&&(r.clearDepth(be),Le=be)},reset:function(){B=!1,Ee=null,Se=null,Le=null}}}function l(){let B=!1,Ee=null,Se=null,Le=null,be=null,he=null,Ve=null,st=null,on=null;return{setTest:function(Ct){B||(Ct?Be(r.STENCIL_TEST):Xe(r.STENCIL_TEST))},setMask:function(Ct){Ee!==Ct&&!B&&(r.stencilMask(Ct),Ee=Ct)},setFunc:function(Ct,Gn,pn){(Se!==Ct||Le!==Gn||be!==pn)&&(r.stencilFunc(Ct,Gn,pn),Se=Ct,Le=Gn,be=pn)},setOp:function(Ct,Gn,pn){(he!==Ct||Ve!==Gn||st!==pn)&&(r.stencilOp(Ct,Gn,pn),he=Ct,Ve=Gn,st=pn)},setLocked:function(Ct){B=Ct},setClear:function(Ct){on!==Ct&&(r.clearStencil(Ct),on=Ct)},reset:function(){B=!1,Ee=null,Se=null,Le=null,be=null,he=null,Ve=null,st=null,on=null}}}const c=new i,u=new s,h=new l,d=new WeakMap,p=new WeakMap;let m={},_={},y=new WeakMap,E=[],x=null,v=!1,w=null,M=null,A=null,R=null,P=null,I=null,F=null,b=!1,L=null,H=null,ee=null,oe=null,V=null;const $=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let ae=!1,se=0;const q=r.getParameter(r.VERSION);q.indexOf("WebGL")!==-1?(se=parseFloat(/^WebGL (\d)/.exec(q)[1]),ae=se>=1):q.indexOf("OpenGL ES")!==-1&&(se=parseFloat(/^OpenGL ES (\d)/.exec(q)[1]),ae=se>=2);let X=null,Y={};const k=r.getParameter(r.SCISSOR_BOX),Q=r.getParameter(r.VIEWPORT),fe=new Rt().fromArray(k),Me=new Rt().fromArray(Q);function Te(B,Ee,Se,Le){const be=new Uint8Array(4),he=r.createTexture();r.bindTexture(B,he),r.texParameteri(B,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(B,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let Ve=0;Ve<Se;Ve++)n&&(B===r.TEXTURE_3D||B===r.TEXTURE_2D_ARRAY)?r.texImage3D(Ee,0,r.RGBA,1,1,Le,0,r.RGBA,r.UNSIGNED_BYTE,be):r.texImage2D(Ee+Ve,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,be);return he}const Oe={};Oe[r.TEXTURE_2D]=Te(r.TEXTURE_2D,r.TEXTURE_2D,1),Oe[r.TEXTURE_CUBE_MAP]=Te(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(Oe[r.TEXTURE_2D_ARRAY]=Te(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),Oe[r.TEXTURE_3D]=Te(r.TEXTURE_3D,r.TEXTURE_3D,1,1)),c.setClear(0,0,0,1),u.setClear(1),h.setClear(0),Be(r.DEPTH_TEST),u.setFunc(Uc),ue(!1),We(mf),Be(r.CULL_FACE),le($i);function Be(B){m[B]!==!0&&(r.enable(B),m[B]=!0)}function Xe(B){m[B]!==!1&&(r.disable(B),m[B]=!1)}function _t(B,Ee){return _[B]!==Ee?(r.bindFramebuffer(B,Ee),_[B]=Ee,n&&(B===r.DRAW_FRAMEBUFFER&&(_[r.FRAMEBUFFER]=Ee),B===r.FRAMEBUFFER&&(_[r.DRAW_FRAMEBUFFER]=Ee)),!0):!1}function Tt(B,Ee){let Se=E,Le=!1;if(B)if(Se=y.get(Ee),Se===void 0&&(Se=[],y.set(Ee,Se)),B.isWebGLMultipleRenderTargets){const be=B.texture;if(Se.length!==be.length||Se[0]!==r.COLOR_ATTACHMENT0){for(let he=0,Ve=be.length;he<Ve;he++)Se[he]=r.COLOR_ATTACHMENT0+he;Se.length=be.length,Le=!0}}else Se[0]!==r.COLOR_ATTACHMENT0&&(Se[0]=r.COLOR_ATTACHMENT0,Le=!0);else Se[0]!==r.BACK&&(Se[0]=r.BACK,Le=!0);Le&&(t.isWebGL2?r.drawBuffers(Se):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(Se))}function ze(B){return x!==B?(r.useProgram(B),x=B,!0):!1}const z={[jr]:r.FUNC_ADD,[v0]:r.FUNC_SUBTRACT,[y0]:r.FUNC_REVERSE_SUBTRACT};if(n)z[yf]=r.MIN,z[xf]=r.MAX;else{const B=e.get("EXT_blend_minmax");B!==null&&(z[yf]=B.MIN_EXT,z[xf]=B.MAX_EXT)}const pe={[x0]:r.ZERO,[S0]:r.ONE,[M0]:r.SRC_COLOR,[rd]:r.SRC_ALPHA,[R0]:r.SRC_ALPHA_SATURATE,[A0]:r.DST_COLOR,[w0]:r.DST_ALPHA,[E0]:r.ONE_MINUS_SRC_COLOR,[sd]:r.ONE_MINUS_SRC_ALPHA,[b0]:r.ONE_MINUS_DST_COLOR,[T0]:r.ONE_MINUS_DST_ALPHA};function le(B,Ee,Se,Le,be,he,Ve,st){if(B===$i){v===!0&&(Xe(r.BLEND),v=!1);return}if(v===!1&&(Be(r.BLEND),v=!0),B!==_0){if(B!==w||st!==b){if((M!==jr||P!==jr)&&(r.blendEquation(r.FUNC_ADD),M=jr,P=jr),st)switch(B){case rs:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case gf:r.blendFunc(r.ONE,r.ONE);break;case _f:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case vf:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",B);break}else switch(B){case rs:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case gf:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case _f:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case vf:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",B);break}A=null,R=null,I=null,F=null,w=B,b=st}return}be=be||Ee,he=he||Se,Ve=Ve||Le,(Ee!==M||be!==P)&&(r.blendEquationSeparate(z[Ee],z[be]),M=Ee,P=be),(Se!==A||Le!==R||he!==I||Ve!==F)&&(r.blendFuncSeparate(pe[Se],pe[Le],pe[he],pe[Ve]),A=Se,R=Le,I=he,F=Ve),w=B,b=!1}function ve(B,Ee){B.side===Ri?Xe(r.CULL_FACE):Be(r.CULL_FACE);let Se=B.side===Ln;Ee&&(Se=!Se),ue(Se),B.blending===rs&&B.transparent===!1?le($i):le(B.blending,B.blendEquation,B.blendSrc,B.blendDst,B.blendEquationAlpha,B.blendSrcAlpha,B.blendDstAlpha,B.premultipliedAlpha),u.setFunc(B.depthFunc),u.setTest(B.depthTest),u.setMask(B.depthWrite),c.setMask(B.colorWrite);const Le=B.stencilWrite;h.setTest(Le),Le&&(h.setMask(B.stencilWriteMask),h.setFunc(B.stencilFunc,B.stencilRef,B.stencilFuncMask),h.setOp(B.stencilFail,B.stencilZFail,B.stencilZPass)),Ne(B.polygonOffset,B.polygonOffsetFactor,B.polygonOffsetUnits),B.alphaToCoverage===!0?Be(r.SAMPLE_ALPHA_TO_COVERAGE):Xe(r.SAMPLE_ALPHA_TO_COVERAGE)}function ue(B){L!==B&&(B?r.frontFace(r.CW):r.frontFace(r.CCW),L=B)}function We(B){B!==p0?(Be(r.CULL_FACE),B!==H&&(B===mf?r.cullFace(r.BACK):B===m0?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):Xe(r.CULL_FACE),H=B}function Pe(B){B!==ee&&(ae&&r.lineWidth(B),ee=B)}function Ne(B,Ee,Se){B?(Be(r.POLYGON_OFFSET_FILL),(oe!==Ee||V!==Se)&&(r.polygonOffset(Ee,Se),oe=Ee,V=Se)):Xe(r.POLYGON_OFFSET_FILL)}function Ke(B){B?Be(r.SCISSOR_TEST):Xe(r.SCISSOR_TEST)}function gt(B){B===void 0&&(B=r.TEXTURE0+$-1),X!==B&&(r.activeTexture(B),X=B)}function Ft(B,Ee,Se){Se===void 0&&(X===null?Se=r.TEXTURE0+$-1:Se=X);let Le=Y[Se];Le===void 0&&(Le={type:void 0,texture:void 0},Y[Se]=Le),(Le.type!==B||Le.texture!==Ee)&&(X!==Se&&(r.activeTexture(Se),X=Se),r.bindTexture(B,Ee||Oe[B]),Le.type=B,Le.texture=Ee)}function O(){const B=Y[X];B!==void 0&&B.type!==void 0&&(r.bindTexture(B.type,null),B.type=void 0,B.texture=void 0)}function C(){try{r.compressedTexImage2D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function j(){try{r.compressedTexImage3D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function me(){try{r.texSubImage2D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function de(){try{r.texSubImage3D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function ge(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function ke(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function xe(){try{r.texStorage2D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Re(){try{r.texStorage3D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Qe(){try{r.texImage2D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function vt(){try{r.texImage3D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function ye(B){fe.equals(B)===!1&&(r.scissor(B.x,B.y,B.z,B.w),fe.copy(B))}function wt(B){Me.equals(B)===!1&&(r.viewport(B.x,B.y,B.z,B.w),Me.copy(B))}function rt(B,Ee){let Se=p.get(Ee);Se===void 0&&(Se=new WeakMap,p.set(Ee,Se));let Le=Se.get(B);Le===void 0&&(Le=r.getUniformBlockIndex(Ee,B.name),Se.set(B,Le))}function je(B,Ee){const Le=p.get(Ee).get(B);d.get(Ee)!==Le&&(r.uniformBlockBinding(Ee,Le,B.__bindingPointIndex),d.set(Ee,Le))}function Ze(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),n===!0&&(r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),m={},X=null,Y={},_={},y=new WeakMap,E=[],x=null,v=!1,w=null,M=null,A=null,R=null,P=null,I=null,F=null,b=!1,L=null,H=null,ee=null,oe=null,V=null,fe.set(0,0,r.canvas.width,r.canvas.height),Me.set(0,0,r.canvas.width,r.canvas.height),c.reset(),u.reset(),h.reset()}return{buffers:{color:c,depth:u,stencil:h},enable:Be,disable:Xe,bindFramebuffer:_t,drawBuffers:Tt,useProgram:ze,setBlending:le,setMaterial:ve,setFlipSided:ue,setCullFace:We,setLineWidth:Pe,setPolygonOffset:Ne,setScissorTest:Ke,activeTexture:gt,bindTexture:Ft,unbindTexture:O,compressedTexImage2D:C,compressedTexImage3D:j,texImage2D:Qe,texImage3D:vt,updateUBOMapping:rt,uniformBlockBinding:je,texStorage2D:xe,texStorage3D:Re,texSubImage2D:me,texSubImage3D:de,compressedTexSubImage2D:ge,compressedTexSubImage3D:ke,scissor:ye,viewport:wt,reset:Ze}}function Ew(r,e,t,n,i,s,l){const c=i.isWebGL2,u=i.maxTextures,h=i.maxCubemapSize,d=i.maxTextureSize,p=i.maxSamples,m=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,_=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),y=new WeakMap;let E;const x=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function w(O,C){return v?new OffscreenCanvas(O,C):_o("canvas")}function M(O,C,j,me){let de=1;if((O.width>me||O.height>me)&&(de=me/Math.max(O.width,O.height)),de<1||C===!0)if(typeof HTMLImageElement<"u"&&O instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&O instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&O instanceof ImageBitmap){const ge=C?Oc:Math.floor,ke=ge(de*O.width),xe=ge(de*O.height);E===void 0&&(E=w(ke,xe));const Re=j?w(ke,xe):E;return Re.width=ke,Re.height=xe,Re.getContext("2d").drawImage(O,0,0,ke,xe),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+O.width+"x"+O.height+") to ("+ke+"x"+xe+")."),Re}else return"data"in O&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+O.width+"x"+O.height+")."),O;return O}function A(O){return Yf(O.width)&&Yf(O.height)}function R(O){return c?!1:O.wrapS!==Tn||O.wrapT!==Tn||O.minFilter!==Zt&&O.minFilter!==Jt}function P(O,C){return O.generateMipmaps&&C&&O.minFilter!==Zt&&O.minFilter!==Jt}function I(O){r.generateMipmap(O)}function F(O,C,j,me,de=!1){if(c===!1)return C;if(O!==null){if(r[O]!==void 0)return r[O];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+O+"'")}let ge=C;if(C===r.RED&&(j===r.FLOAT&&(ge=r.R32F),j===r.HALF_FLOAT&&(ge=r.R16F),j===r.UNSIGNED_BYTE&&(ge=r.R8)),C===r.RED_INTEGER&&(j===r.UNSIGNED_BYTE&&(ge=r.R8UI),j===r.UNSIGNED_SHORT&&(ge=r.R16UI),j===r.UNSIGNED_INT&&(ge=r.R32UI),j===r.BYTE&&(ge=r.R8I),j===r.SHORT&&(ge=r.R16I),j===r.INT&&(ge=r.R32I)),C===r.RG&&(j===r.FLOAT&&(ge=r.RG32F),j===r.HALF_FLOAT&&(ge=r.RG16F),j===r.UNSIGNED_BYTE&&(ge=r.RG8)),C===r.RGBA){const ke=de?ho:bt.getTransfer(me);j===r.FLOAT&&(ge=r.RGBA32F),j===r.HALF_FLOAT&&(ge=r.RGBA16F),j===r.UNSIGNED_BYTE&&(ge=ke===Dt?r.SRGB8_ALPHA8:r.RGBA8),j===r.UNSIGNED_SHORT_4_4_4_4&&(ge=r.RGBA4),j===r.UNSIGNED_SHORT_5_5_5_1&&(ge=r.RGB5_A1)}return(ge===r.R16F||ge===r.R32F||ge===r.RG16F||ge===r.RG32F||ge===r.RGBA16F||ge===r.RGBA32F)&&e.get("EXT_color_buffer_float"),ge}function b(O,C,j){return P(O,j)===!0||O.isFramebufferTexture&&O.minFilter!==Zt&&O.minFilter!==Jt?Math.log2(Math.max(C.width,C.height))+1:O.mipmaps!==void 0&&O.mipmaps.length>0?O.mipmaps.length:O.isCompressedTexture&&Array.isArray(O.image)?C.mipmaps.length:1}function L(O){return O===Zt||O===Dc||O===$a?r.NEAREST:r.LINEAR}function H(O){const C=O.target;C.removeEventListener("dispose",H),oe(C),C.isVideoTexture&&y.delete(C)}function ee(O){const C=O.target;C.removeEventListener("dispose",ee),$(C)}function oe(O){const C=n.get(O);if(C.__webglInit===void 0)return;const j=O.source,me=x.get(j);if(me){const de=me[C.__cacheKey];de.usedTimes--,de.usedTimes===0&&V(O),Object.keys(me).length===0&&x.delete(j)}n.remove(O)}function V(O){const C=n.get(O);r.deleteTexture(C.__webglTexture);const j=O.source,me=x.get(j);delete me[C.__cacheKey],l.memory.textures--}function $(O){const C=O.texture,j=n.get(O),me=n.get(C);if(me.__webglTexture!==void 0&&(r.deleteTexture(me.__webglTexture),l.memory.textures--),O.depthTexture&&O.depthTexture.dispose(),O.isWebGLCubeRenderTarget)for(let de=0;de<6;de++){if(Array.isArray(j.__webglFramebuffer[de]))for(let ge=0;ge<j.__webglFramebuffer[de].length;ge++)r.deleteFramebuffer(j.__webglFramebuffer[de][ge]);else r.deleteFramebuffer(j.__webglFramebuffer[de]);j.__webglDepthbuffer&&r.deleteRenderbuffer(j.__webglDepthbuffer[de])}else{if(Array.isArray(j.__webglFramebuffer))for(let de=0;de<j.__webglFramebuffer.length;de++)r.deleteFramebuffer(j.__webglFramebuffer[de]);else r.deleteFramebuffer(j.__webglFramebuffer);if(j.__webglDepthbuffer&&r.deleteRenderbuffer(j.__webglDepthbuffer),j.__webglMultisampledFramebuffer&&r.deleteFramebuffer(j.__webglMultisampledFramebuffer),j.__webglColorRenderbuffer)for(let de=0;de<j.__webglColorRenderbuffer.length;de++)j.__webglColorRenderbuffer[de]&&r.deleteRenderbuffer(j.__webglColorRenderbuffer[de]);j.__webglDepthRenderbuffer&&r.deleteRenderbuffer(j.__webglDepthRenderbuffer)}if(O.isWebGLMultipleRenderTargets)for(let de=0,ge=C.length;de<ge;de++){const ke=n.get(C[de]);ke.__webglTexture&&(r.deleteTexture(ke.__webglTexture),l.memory.textures--),n.remove(C[de])}n.remove(C),n.remove(O)}let ae=0;function se(){ae=0}function q(){const O=ae;return O>=u&&console.warn("THREE.WebGLTextures: Trying to use "+O+" texture units while this GPU supports only "+u),ae+=1,O}function X(O){const C=[];return C.push(O.wrapS),C.push(O.wrapT),C.push(O.wrapR||0),C.push(O.magFilter),C.push(O.minFilter),C.push(O.anisotropy),C.push(O.internalFormat),C.push(O.format),C.push(O.type),C.push(O.generateMipmaps),C.push(O.premultiplyAlpha),C.push(O.flipY),C.push(O.unpackAlignment),C.push(O.colorSpace),C.join()}function Y(O,C){const j=n.get(O);if(O.isVideoTexture&&gt(O),O.isRenderTargetTexture===!1&&O.version>0&&j.__version!==O.version){const me=O.image;if(me===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(me.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{_t(j,O,C);return}}t.bindTexture(r.TEXTURE_2D,j.__webglTexture,r.TEXTURE0+C)}function k(O,C){const j=n.get(O);if(O.version>0&&j.__version!==O.version){_t(j,O,C);return}t.bindTexture(r.TEXTURE_2D_ARRAY,j.__webglTexture,r.TEXTURE0+C)}function Q(O,C){const j=n.get(O);if(O.version>0&&j.__version!==O.version){_t(j,O,C);return}t.bindTexture(r.TEXTURE_3D,j.__webglTexture,r.TEXTURE0+C)}function fe(O,C){const j=n.get(O);if(O.version>0&&j.__version!==O.version){Tt(j,O,C);return}t.bindTexture(r.TEXTURE_CUBE_MAP,j.__webglTexture,r.TEXTURE0+C)}const Me={[ao]:r.REPEAT,[Tn]:r.CLAMP_TO_EDGE,[oo]:r.MIRRORED_REPEAT},Te={[Zt]:r.NEAREST,[Dc]:r.NEAREST_MIPMAP_NEAREST,[$a]:r.NEAREST_MIPMAP_LINEAR,[Jt]:r.LINEAR,[od]:r.LINEAR_MIPMAP_NEAREST,[Ar]:r.LINEAR_MIPMAP_LINEAR},Oe={[r_]:r.NEVER,[h_]:r.ALWAYS,[s_]:r.LESS,[o_]:r.LEQUAL,[a_]:r.EQUAL,[u_]:r.GEQUAL,[l_]:r.GREATER,[c_]:r.NOTEQUAL};function Be(O,C,j){if(j?(r.texParameteri(O,r.TEXTURE_WRAP_S,Me[C.wrapS]),r.texParameteri(O,r.TEXTURE_WRAP_T,Me[C.wrapT]),(O===r.TEXTURE_3D||O===r.TEXTURE_2D_ARRAY)&&r.texParameteri(O,r.TEXTURE_WRAP_R,Me[C.wrapR]),r.texParameteri(O,r.TEXTURE_MAG_FILTER,Te[C.magFilter]),r.texParameteri(O,r.TEXTURE_MIN_FILTER,Te[C.minFilter])):(r.texParameteri(O,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(O,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),(O===r.TEXTURE_3D||O===r.TEXTURE_2D_ARRAY)&&r.texParameteri(O,r.TEXTURE_WRAP_R,r.CLAMP_TO_EDGE),(C.wrapS!==Tn||C.wrapT!==Tn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(O,r.TEXTURE_MAG_FILTER,L(C.magFilter)),r.texParameteri(O,r.TEXTURE_MIN_FILTER,L(C.minFilter)),C.minFilter!==Zt&&C.minFilter!==Jt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),C.compareFunction&&(r.texParameteri(O,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(O,r.TEXTURE_COMPARE_FUNC,Oe[C.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const me=e.get("EXT_texture_filter_anisotropic");if(C.magFilter===Zt||C.minFilter!==$a&&C.minFilter!==Ar||C.type===Ci&&e.has("OES_texture_float_linear")===!1||c===!1&&C.type===la&&e.has("OES_texture_half_float_linear")===!1)return;(C.anisotropy>1||n.get(C).__currentAnisotropy)&&(r.texParameterf(O,me.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(C.anisotropy,i.getMaxAnisotropy())),n.get(C).__currentAnisotropy=C.anisotropy)}}function Xe(O,C){let j=!1;O.__webglInit===void 0&&(O.__webglInit=!0,C.addEventListener("dispose",H));const me=C.source;let de=x.get(me);de===void 0&&(de={},x.set(me,de));const ge=X(C);if(ge!==O.__cacheKey){de[ge]===void 0&&(de[ge]={texture:r.createTexture(),usedTimes:0},l.memory.textures++,j=!0),de[ge].usedTimes++;const ke=de[O.__cacheKey];ke!==void 0&&(de[O.__cacheKey].usedTimes--,ke.usedTimes===0&&V(C)),O.__cacheKey=ge,O.__webglTexture=de[ge].texture}return j}function _t(O,C,j){let me=r.TEXTURE_2D;(C.isDataArrayTexture||C.isCompressedArrayTexture)&&(me=r.TEXTURE_2D_ARRAY),C.isData3DTexture&&(me=r.TEXTURE_3D);const de=Xe(O,C),ge=C.source;t.bindTexture(me,O.__webglTexture,r.TEXTURE0+j);const ke=n.get(ge);if(ge.version!==ke.__version||de===!0){t.activeTexture(r.TEXTURE0+j);const xe=bt.getPrimaries(bt.workingColorSpace),Re=C.colorSpace===jn?null:bt.getPrimaries(C.colorSpace),Qe=C.colorSpace===jn||xe===Re?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,C.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,C.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Qe);const vt=R(C)&&A(C.image)===!1;let ye=M(C.image,vt,!1,d);ye=Ft(C,ye);const wt=A(ye)||c,rt=s.convert(C.format,C.colorSpace);let je=s.convert(C.type),Ze=F(C.internalFormat,rt,je,C.colorSpace,C.isVideoTexture);Be(me,C,wt);let B;const Ee=C.mipmaps,Se=c&&C.isVideoTexture!==!0,Le=ke.__version===void 0||de===!0,be=b(C,ye,wt);if(C.isDepthTexture)Ze=r.DEPTH_COMPONENT,c?C.type===Ci?Ze=r.DEPTH_COMPONENT32F:C.type===Qi?Ze=r.DEPTH_COMPONENT24:C.type===Mr?Ze=r.DEPTH24_STENCIL8:Ze=r.DEPTH_COMPONENT16:C.type===Ci&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),C.format===Er&&Ze===r.DEPTH_COMPONENT&&C.type!==Vc&&C.type!==Qi&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),C.type=Qi,je=s.convert(C.type)),C.format===ls&&Ze===r.DEPTH_COMPONENT&&(Ze=r.DEPTH_STENCIL,C.type!==Mr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),C.type=Mr,je=s.convert(C.type))),Le&&(Se?t.texStorage2D(r.TEXTURE_2D,1,Ze,ye.width,ye.height):t.texImage2D(r.TEXTURE_2D,0,Ze,ye.width,ye.height,0,rt,je,null));else if(C.isDataTexture)if(Ee.length>0&&wt){Se&&Le&&t.texStorage2D(r.TEXTURE_2D,be,Ze,Ee[0].width,Ee[0].height);for(let he=0,Ve=Ee.length;he<Ve;he++)B=Ee[he],Se?t.texSubImage2D(r.TEXTURE_2D,he,0,0,B.width,B.height,rt,je,B.data):t.texImage2D(r.TEXTURE_2D,he,Ze,B.width,B.height,0,rt,je,B.data);C.generateMipmaps=!1}else Se?(Le&&t.texStorage2D(r.TEXTURE_2D,be,Ze,ye.width,ye.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,ye.width,ye.height,rt,je,ye.data)):t.texImage2D(r.TEXTURE_2D,0,Ze,ye.width,ye.height,0,rt,je,ye.data);else if(C.isCompressedTexture)if(C.isCompressedArrayTexture){Se&&Le&&t.texStorage3D(r.TEXTURE_2D_ARRAY,be,Ze,Ee[0].width,Ee[0].height,ye.depth);for(let he=0,Ve=Ee.length;he<Ve;he++)B=Ee[he],C.format!==zn?rt!==null?Se?t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,he,0,0,0,B.width,B.height,ye.depth,rt,B.data,0,0):t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,he,Ze,B.width,B.height,ye.depth,0,B.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Se?t.texSubImage3D(r.TEXTURE_2D_ARRAY,he,0,0,0,B.width,B.height,ye.depth,rt,je,B.data):t.texImage3D(r.TEXTURE_2D_ARRAY,he,Ze,B.width,B.height,ye.depth,0,rt,je,B.data)}else{Se&&Le&&t.texStorage2D(r.TEXTURE_2D,be,Ze,Ee[0].width,Ee[0].height);for(let he=0,Ve=Ee.length;he<Ve;he++)B=Ee[he],C.format!==zn?rt!==null?Se?t.compressedTexSubImage2D(r.TEXTURE_2D,he,0,0,B.width,B.height,rt,B.data):t.compressedTexImage2D(r.TEXTURE_2D,he,Ze,B.width,B.height,0,B.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Se?t.texSubImage2D(r.TEXTURE_2D,he,0,0,B.width,B.height,rt,je,B.data):t.texImage2D(r.TEXTURE_2D,he,Ze,B.width,B.height,0,rt,je,B.data)}else if(C.isDataArrayTexture)Se?(Le&&t.texStorage3D(r.TEXTURE_2D_ARRAY,be,Ze,ye.width,ye.height,ye.depth),t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,ye.width,ye.height,ye.depth,rt,je,ye.data)):t.texImage3D(r.TEXTURE_2D_ARRAY,0,Ze,ye.width,ye.height,ye.depth,0,rt,je,ye.data);else if(C.isData3DTexture)Se?(Le&&t.texStorage3D(r.TEXTURE_3D,be,Ze,ye.width,ye.height,ye.depth),t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,ye.width,ye.height,ye.depth,rt,je,ye.data)):t.texImage3D(r.TEXTURE_3D,0,Ze,ye.width,ye.height,ye.depth,0,rt,je,ye.data);else if(C.isFramebufferTexture){if(Le)if(Se)t.texStorage2D(r.TEXTURE_2D,be,Ze,ye.width,ye.height);else{let he=ye.width,Ve=ye.height;for(let st=0;st<be;st++)t.texImage2D(r.TEXTURE_2D,st,Ze,he,Ve,0,rt,je,null),he>>=1,Ve>>=1}}else if(Ee.length>0&&wt){Se&&Le&&t.texStorage2D(r.TEXTURE_2D,be,Ze,Ee[0].width,Ee[0].height);for(let he=0,Ve=Ee.length;he<Ve;he++)B=Ee[he],Se?t.texSubImage2D(r.TEXTURE_2D,he,0,0,rt,je,B):t.texImage2D(r.TEXTURE_2D,he,Ze,rt,je,B);C.generateMipmaps=!1}else Se?(Le&&t.texStorage2D(r.TEXTURE_2D,be,Ze,ye.width,ye.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,rt,je,ye)):t.texImage2D(r.TEXTURE_2D,0,Ze,rt,je,ye);P(C,wt)&&I(me),ke.__version=ge.version,C.onUpdate&&C.onUpdate(C)}O.__version=C.version}function Tt(O,C,j){if(C.image.length!==6)return;const me=Xe(O,C),de=C.source;t.bindTexture(r.TEXTURE_CUBE_MAP,O.__webglTexture,r.TEXTURE0+j);const ge=n.get(de);if(de.version!==ge.__version||me===!0){t.activeTexture(r.TEXTURE0+j);const ke=bt.getPrimaries(bt.workingColorSpace),xe=C.colorSpace===jn?null:bt.getPrimaries(C.colorSpace),Re=C.colorSpace===jn||ke===xe?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,C.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,C.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Re);const Qe=C.isCompressedTexture||C.image[0].isCompressedTexture,vt=C.image[0]&&C.image[0].isDataTexture,ye=[];for(let he=0;he<6;he++)!Qe&&!vt?ye[he]=M(C.image[he],!1,!0,h):ye[he]=vt?C.image[he].image:C.image[he],ye[he]=Ft(C,ye[he]);const wt=ye[0],rt=A(wt)||c,je=s.convert(C.format,C.colorSpace),Ze=s.convert(C.type),B=F(C.internalFormat,je,Ze,C.colorSpace),Ee=c&&C.isVideoTexture!==!0,Se=ge.__version===void 0||me===!0;let Le=b(C,wt,rt);Be(r.TEXTURE_CUBE_MAP,C,rt);let be;if(Qe){Ee&&Se&&t.texStorage2D(r.TEXTURE_CUBE_MAP,Le,B,wt.width,wt.height);for(let he=0;he<6;he++){be=ye[he].mipmaps;for(let Ve=0;Ve<be.length;Ve++){const st=be[Ve];C.format!==zn?je!==null?Ee?t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+he,Ve,0,0,st.width,st.height,je,st.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+he,Ve,B,st.width,st.height,0,st.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Ee?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+he,Ve,0,0,st.width,st.height,je,Ze,st.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+he,Ve,B,st.width,st.height,0,je,Ze,st.data)}}}else{be=C.mipmaps,Ee&&Se&&(be.length>0&&Le++,t.texStorage2D(r.TEXTURE_CUBE_MAP,Le,B,ye[0].width,ye[0].height));for(let he=0;he<6;he++)if(vt){Ee?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+he,0,0,0,ye[he].width,ye[he].height,je,Ze,ye[he].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+he,0,B,ye[he].width,ye[he].height,0,je,Ze,ye[he].data);for(let Ve=0;Ve<be.length;Ve++){const on=be[Ve].image[he].image;Ee?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+he,Ve+1,0,0,on.width,on.height,je,Ze,on.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+he,Ve+1,B,on.width,on.height,0,je,Ze,on.data)}}else{Ee?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+he,0,0,0,je,Ze,ye[he]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+he,0,B,je,Ze,ye[he]);for(let Ve=0;Ve<be.length;Ve++){const st=be[Ve];Ee?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+he,Ve+1,0,0,je,Ze,st.image[he]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+he,Ve+1,B,je,Ze,st.image[he])}}}P(C,rt)&&I(r.TEXTURE_CUBE_MAP),ge.__version=de.version,C.onUpdate&&C.onUpdate(C)}O.__version=C.version}function ze(O,C,j,me,de,ge){const ke=s.convert(j.format,j.colorSpace),xe=s.convert(j.type),Re=F(j.internalFormat,ke,xe,j.colorSpace);if(!n.get(C).__hasExternalTextures){const vt=Math.max(1,C.width>>ge),ye=Math.max(1,C.height>>ge);de===r.TEXTURE_3D||de===r.TEXTURE_2D_ARRAY?t.texImage3D(de,ge,Re,vt,ye,C.depth,0,ke,xe,null):t.texImage2D(de,ge,Re,vt,ye,0,ke,xe,null)}t.bindFramebuffer(r.FRAMEBUFFER,O),Ke(C)?m.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,me,de,n.get(j).__webglTexture,0,Ne(C)):(de===r.TEXTURE_2D||de>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&de<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,me,de,n.get(j).__webglTexture,ge),t.bindFramebuffer(r.FRAMEBUFFER,null)}function z(O,C,j){if(r.bindRenderbuffer(r.RENDERBUFFER,O),C.depthBuffer&&!C.stencilBuffer){let me=c===!0?r.DEPTH_COMPONENT24:r.DEPTH_COMPONENT16;if(j||Ke(C)){const de=C.depthTexture;de&&de.isDepthTexture&&(de.type===Ci?me=r.DEPTH_COMPONENT32F:de.type===Qi&&(me=r.DEPTH_COMPONENT24));const ge=Ne(C);Ke(C)?m.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,ge,me,C.width,C.height):r.renderbufferStorageMultisample(r.RENDERBUFFER,ge,me,C.width,C.height)}else r.renderbufferStorage(r.RENDERBUFFER,me,C.width,C.height);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,O)}else if(C.depthBuffer&&C.stencilBuffer){const me=Ne(C);j&&Ke(C)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,me,r.DEPTH24_STENCIL8,C.width,C.height):Ke(C)?m.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,me,r.DEPTH24_STENCIL8,C.width,C.height):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,C.width,C.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,O)}else{const me=C.isWebGLMultipleRenderTargets===!0?C.texture:[C.texture];for(let de=0;de<me.length;de++){const ge=me[de],ke=s.convert(ge.format,ge.colorSpace),xe=s.convert(ge.type),Re=F(ge.internalFormat,ke,xe,ge.colorSpace),Qe=Ne(C);j&&Ke(C)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,Qe,Re,C.width,C.height):Ke(C)?m.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Qe,Re,C.width,C.height):r.renderbufferStorage(r.RENDERBUFFER,Re,C.width,C.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function pe(O,C){if(C&&C.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,O),!(C.depthTexture&&C.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(C.depthTexture).__webglTexture||C.depthTexture.image.width!==C.width||C.depthTexture.image.height!==C.height)&&(C.depthTexture.image.width=C.width,C.depthTexture.image.height=C.height,C.depthTexture.needsUpdate=!0),Y(C.depthTexture,0);const me=n.get(C.depthTexture).__webglTexture,de=Ne(C);if(C.depthTexture.format===Er)Ke(C)?m.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,me,0,de):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,me,0);else if(C.depthTexture.format===ls)Ke(C)?m.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,me,0,de):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,me,0);else throw new Error("Unknown depthTexture format")}function le(O){const C=n.get(O),j=O.isWebGLCubeRenderTarget===!0;if(O.depthTexture&&!C.__autoAllocateDepthBuffer){if(j)throw new Error("target.depthTexture not supported in Cube render targets");pe(C.__webglFramebuffer,O)}else if(j){C.__webglDepthbuffer=[];for(let me=0;me<6;me++)t.bindFramebuffer(r.FRAMEBUFFER,C.__webglFramebuffer[me]),C.__webglDepthbuffer[me]=r.createRenderbuffer(),z(C.__webglDepthbuffer[me],O,!1)}else t.bindFramebuffer(r.FRAMEBUFFER,C.__webglFramebuffer),C.__webglDepthbuffer=r.createRenderbuffer(),z(C.__webglDepthbuffer,O,!1);t.bindFramebuffer(r.FRAMEBUFFER,null)}function ve(O,C,j){const me=n.get(O);C!==void 0&&ze(me.__webglFramebuffer,O,O.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),j!==void 0&&le(O)}function ue(O){const C=O.texture,j=n.get(O),me=n.get(C);O.addEventListener("dispose",ee),O.isWebGLMultipleRenderTargets!==!0&&(me.__webglTexture===void 0&&(me.__webglTexture=r.createTexture()),me.__version=C.version,l.memory.textures++);const de=O.isWebGLCubeRenderTarget===!0,ge=O.isWebGLMultipleRenderTargets===!0,ke=A(O)||c;if(de){j.__webglFramebuffer=[];for(let xe=0;xe<6;xe++)if(c&&C.mipmaps&&C.mipmaps.length>0){j.__webglFramebuffer[xe]=[];for(let Re=0;Re<C.mipmaps.length;Re++)j.__webglFramebuffer[xe][Re]=r.createFramebuffer()}else j.__webglFramebuffer[xe]=r.createFramebuffer()}else{if(c&&C.mipmaps&&C.mipmaps.length>0){j.__webglFramebuffer=[];for(let xe=0;xe<C.mipmaps.length;xe++)j.__webglFramebuffer[xe]=r.createFramebuffer()}else j.__webglFramebuffer=r.createFramebuffer();if(ge)if(i.drawBuffers){const xe=O.texture;for(let Re=0,Qe=xe.length;Re<Qe;Re++){const vt=n.get(xe[Re]);vt.__webglTexture===void 0&&(vt.__webglTexture=r.createTexture(),l.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(c&&O.samples>0&&Ke(O)===!1){const xe=ge?C:[C];j.__webglMultisampledFramebuffer=r.createFramebuffer(),j.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,j.__webglMultisampledFramebuffer);for(let Re=0;Re<xe.length;Re++){const Qe=xe[Re];j.__webglColorRenderbuffer[Re]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,j.__webglColorRenderbuffer[Re]);const vt=s.convert(Qe.format,Qe.colorSpace),ye=s.convert(Qe.type),wt=F(Qe.internalFormat,vt,ye,Qe.colorSpace,O.isXRRenderTarget===!0),rt=Ne(O);r.renderbufferStorageMultisample(r.RENDERBUFFER,rt,wt,O.width,O.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Re,r.RENDERBUFFER,j.__webglColorRenderbuffer[Re])}r.bindRenderbuffer(r.RENDERBUFFER,null),O.depthBuffer&&(j.__webglDepthRenderbuffer=r.createRenderbuffer(),z(j.__webglDepthRenderbuffer,O,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(de){t.bindTexture(r.TEXTURE_CUBE_MAP,me.__webglTexture),Be(r.TEXTURE_CUBE_MAP,C,ke);for(let xe=0;xe<6;xe++)if(c&&C.mipmaps&&C.mipmaps.length>0)for(let Re=0;Re<C.mipmaps.length;Re++)ze(j.__webglFramebuffer[xe][Re],O,C,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+xe,Re);else ze(j.__webglFramebuffer[xe],O,C,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+xe,0);P(C,ke)&&I(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(ge){const xe=O.texture;for(let Re=0,Qe=xe.length;Re<Qe;Re++){const vt=xe[Re],ye=n.get(vt);t.bindTexture(r.TEXTURE_2D,ye.__webglTexture),Be(r.TEXTURE_2D,vt,ke),ze(j.__webglFramebuffer,O,vt,r.COLOR_ATTACHMENT0+Re,r.TEXTURE_2D,0),P(vt,ke)&&I(r.TEXTURE_2D)}t.unbindTexture()}else{let xe=r.TEXTURE_2D;if((O.isWebGL3DRenderTarget||O.isWebGLArrayRenderTarget)&&(c?xe=O.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(xe,me.__webglTexture),Be(xe,C,ke),c&&C.mipmaps&&C.mipmaps.length>0)for(let Re=0;Re<C.mipmaps.length;Re++)ze(j.__webglFramebuffer[Re],O,C,r.COLOR_ATTACHMENT0,xe,Re);else ze(j.__webglFramebuffer,O,C,r.COLOR_ATTACHMENT0,xe,0);P(C,ke)&&I(xe),t.unbindTexture()}O.depthBuffer&&le(O)}function We(O){const C=A(O)||c,j=O.isWebGLMultipleRenderTargets===!0?O.texture:[O.texture];for(let me=0,de=j.length;me<de;me++){const ge=j[me];if(P(ge,C)){const ke=O.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,xe=n.get(ge).__webglTexture;t.bindTexture(ke,xe),I(ke),t.unbindTexture()}}}function Pe(O){if(c&&O.samples>0&&Ke(O)===!1){const C=O.isWebGLMultipleRenderTargets?O.texture:[O.texture],j=O.width,me=O.height;let de=r.COLOR_BUFFER_BIT;const ge=[],ke=O.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,xe=n.get(O),Re=O.isWebGLMultipleRenderTargets===!0;if(Re)for(let Qe=0;Qe<C.length;Qe++)t.bindFramebuffer(r.FRAMEBUFFER,xe.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Qe,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,xe.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Qe,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,xe.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,xe.__webglFramebuffer);for(let Qe=0;Qe<C.length;Qe++){ge.push(r.COLOR_ATTACHMENT0+Qe),O.depthBuffer&&ge.push(ke);const vt=xe.__ignoreDepthValues!==void 0?xe.__ignoreDepthValues:!1;if(vt===!1&&(O.depthBuffer&&(de|=r.DEPTH_BUFFER_BIT),O.stencilBuffer&&(de|=r.STENCIL_BUFFER_BIT)),Re&&r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,xe.__webglColorRenderbuffer[Qe]),vt===!0&&(r.invalidateFramebuffer(r.READ_FRAMEBUFFER,[ke]),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[ke])),Re){const ye=n.get(C[Qe]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,ye,0)}r.blitFramebuffer(0,0,j,me,0,0,j,me,de,r.NEAREST),_&&r.invalidateFramebuffer(r.READ_FRAMEBUFFER,ge)}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),Re)for(let Qe=0;Qe<C.length;Qe++){t.bindFramebuffer(r.FRAMEBUFFER,xe.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Qe,r.RENDERBUFFER,xe.__webglColorRenderbuffer[Qe]);const vt=n.get(C[Qe]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,xe.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Qe,r.TEXTURE_2D,vt,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,xe.__webglMultisampledFramebuffer)}}function Ne(O){return Math.min(p,O.samples)}function Ke(O){const C=n.get(O);return c&&O.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&C.__useRenderToTexture!==!1}function gt(O){const C=l.render.frame;y.get(O)!==C&&(y.set(O,C),O.update())}function Ft(O,C){const j=O.colorSpace,me=O.format,de=O.type;return O.isCompressedTexture===!0||O.isVideoTexture===!0||O.format===Nc||j!==Di&&j!==jn&&(bt.getTransfer(j)===Dt?c===!1?e.has("EXT_sRGB")===!0&&me===zn?(O.format=Nc,O.minFilter=Jt,O.generateMipmaps=!1):C=_d.sRGBToLinear(C):(me!==zn||de!==Ii)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",j)),C}this.allocateTextureUnit=q,this.resetTextureUnits=se,this.setTexture2D=Y,this.setTexture2DArray=k,this.setTexture3D=Q,this.setTextureCube=fe,this.rebindTextures=ve,this.setupRenderTarget=ue,this.updateRenderTargetMipmap=We,this.updateMultisampleRenderTarget=Pe,this.setupDepthRenderbuffer=le,this.setupFrameBufferTexture=ze,this.useMultisampledRTT=Ke}function A_(r,e,t){const n=t.isWebGL2;function i(s,l=jn){let c;const u=bt.getTransfer(l);if(s===Ii)return r.UNSIGNED_BYTE;if(s===cd)return r.UNSIGNED_SHORT_4_4_4_4;if(s===ud)return r.UNSIGNED_SHORT_5_5_5_1;if(s===V0)return r.BYTE;if(s===G0)return r.SHORT;if(s===Vc)return r.UNSIGNED_SHORT;if(s===ld)return r.INT;if(s===Qi)return r.UNSIGNED_INT;if(s===Ci)return r.FLOAT;if(s===la)return n?r.HALF_FLOAT:(c=e.get("OES_texture_half_float"),c!==null?c.HALF_FLOAT_OES:null);if(s===W0)return r.ALPHA;if(s===zn)return r.RGBA;if(s===X0)return r.LUMINANCE;if(s===q0)return r.LUMINANCE_ALPHA;if(s===Er)return r.DEPTH_COMPONENT;if(s===ls)return r.DEPTH_STENCIL;if(s===Nc)return c=e.get("EXT_sRGB"),c!==null?c.SRGB_ALPHA_EXT:null;if(s===Y0)return r.RED;if(s===hd)return r.RED_INTEGER;if(s===Z0)return r.RG;if(s===fd)return r.RG_INTEGER;if(s===dd)return r.RGBA_INTEGER;if(s===wc||s===Tc||s===Ac||s===bc)if(u===Dt)if(c=e.get("WEBGL_compressed_texture_s3tc_srgb"),c!==null){if(s===wc)return c.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Tc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Ac)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===bc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(c=e.get("WEBGL_compressed_texture_s3tc"),c!==null){if(s===wc)return c.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Tc)return c.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Ac)return c.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===bc)return c.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===Sf||s===Mf||s===Ef||s===wf)if(c=e.get("WEBGL_compressed_texture_pvrtc"),c!==null){if(s===Sf)return c.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===Mf)return c.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===Ef)return c.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===wf)return c.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===J0)return c=e.get("WEBGL_compressed_texture_etc1"),c!==null?c.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===Tf||s===Af)if(c=e.get("WEBGL_compressed_texture_etc"),c!==null){if(s===Tf)return u===Dt?c.COMPRESSED_SRGB8_ETC2:c.COMPRESSED_RGB8_ETC2;if(s===Af)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:c.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===bf||s===Rf||s===Cf||s===Pf||s===Lf||s===If||s===Uf||s===Df||s===Nf||s===Of||s===Ff||s===Bf||s===zf||s===kf)if(c=e.get("WEBGL_compressed_texture_astc"),c!==null){if(s===bf)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:c.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===Rf)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:c.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===Cf)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:c.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===Pf)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:c.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===Lf)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:c.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===If)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:c.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===Uf)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:c.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===Df)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:c.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===Nf)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:c.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===Of)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:c.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===Ff)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:c.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===Bf)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:c.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===zf)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:c.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===kf)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:c.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===Rc||s===Hf||s===Vf)if(c=e.get("EXT_texture_compression_bptc"),c!==null){if(s===Rc)return u===Dt?c.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:c.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(s===Hf)return c.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(s===Vf)return c.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(s===K0||s===Gf||s===Wf||s===Xf)if(c=e.get("EXT_texture_compression_rgtc"),c!==null){if(s===Rc)return c.COMPRESSED_RED_RGTC1_EXT;if(s===Gf)return c.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(s===Wf)return c.COMPRESSED_RED_GREEN_RGTC2_EXT;if(s===Xf)return c.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return s===Mr?n?r.UNSIGNED_INT_24_8:(c=e.get("WEBGL_depth_texture"),c!==null?c.UNSIGNED_INT_24_8_WEBGL:null):r[s]!==void 0?r[s]:null}return{convert:i}}class b_ extends dn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class ia extends Et{constructor(){super(),this.isGroup=!0,this.type="Group"}}const ww={type:"move"};class Vh{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ia,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ia,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new D,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new D),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ia,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new D,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new D),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,l=null;const c=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){l=!0;for(const E of e.hand.values()){const x=t.getJointPose(E,n),v=this._getHandJoint(h,E);x!==null&&(v.matrix.fromArray(x.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.matrixWorldNeedsUpdate=!0,v.jointRadius=x.radius),v.visible=x!==null}const d=h.joints["index-finger-tip"],p=h.joints["thumb-tip"],m=d.position.distanceTo(p.position),_=.02,y=.005;h.inputState.pinching&&m>_+y?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&m<=_-y&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(ww)))}return c!==null&&(c.visible=i!==null),u!==null&&(u.visible=s!==null),h!==null&&(h.visible=l!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new ia;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class R_ extends Kt{constructor(e,t,n,i,s,l,c,u,h,d){if(d=d!==void 0?d:Er,d!==Er&&d!==ls)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&d===Er&&(n=Qi),n===void 0&&d===ls&&(n=Mr),super(null,i,s,l,c,u,d,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:Zt,this.minFilter=u!==void 0?u:Zt,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class Tw extends ir{constructor(e,t){super();const n=this;let i=null,s=1,l=null,c="local-floor",u=1,h=null,d=null,p=null,m=null,_=null,y=null;const E=t.getContextAttributes();let x=null,v=null;const w=[],M=[],A=new dn;A.layers.enable(1),A.viewport=new Rt;const R=new dn;R.layers.enable(2),R.viewport=new Rt;const P=[A,R],I=new b_;I.layers.enable(1),I.layers.enable(2);let F=null,b=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(k){let Q=w[k];return Q===void 0&&(Q=new Vh,w[k]=Q),Q.getTargetRaySpace()},this.getControllerGrip=function(k){let Q=w[k];return Q===void 0&&(Q=new Vh,w[k]=Q),Q.getGripSpace()},this.getHand=function(k){let Q=w[k];return Q===void 0&&(Q=new Vh,w[k]=Q),Q.getHandSpace()};function L(k){const Q=M.indexOf(k.inputSource);if(Q===-1)return;const fe=w[Q];fe!==void 0&&(fe.update(k.inputSource,k.frame,h||l),fe.dispatchEvent({type:k.type,data:k.inputSource}))}function H(){i.removeEventListener("select",L),i.removeEventListener("selectstart",L),i.removeEventListener("selectend",L),i.removeEventListener("squeeze",L),i.removeEventListener("squeezestart",L),i.removeEventListener("squeezeend",L),i.removeEventListener("end",H),i.removeEventListener("inputsourceschange",ee);for(let k=0;k<w.length;k++){const Q=M[k];Q!==null&&(M[k]=null,w[k].disconnect(Q))}F=null,b=null,e.setRenderTarget(x),_=null,m=null,p=null,i=null,v=null,Y.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(k){s=k,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(k){c=k,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||l},this.setReferenceSpace=function(k){h=k},this.getBaseLayer=function(){return m!==null?m:_},this.getBinding=function(){return p},this.getFrame=function(){return y},this.getSession=function(){return i},this.setSession=async function(k){if(i=k,i!==null){if(x=e.getRenderTarget(),i.addEventListener("select",L),i.addEventListener("selectstart",L),i.addEventListener("selectend",L),i.addEventListener("squeeze",L),i.addEventListener("squeezestart",L),i.addEventListener("squeezeend",L),i.addEventListener("end",H),i.addEventListener("inputsourceschange",ee),E.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const Q={antialias:i.renderState.layers===void 0?E.antialias:!0,alpha:!0,depth:E.depth,stencil:E.stencil,framebufferScaleFactor:s};_=new XRWebGLLayer(i,t,Q),i.updateRenderState({baseLayer:_}),v=new gi(_.framebufferWidth,_.framebufferHeight,{format:zn,type:Ii,colorSpace:e.outputColorSpace,stencilBuffer:E.stencil})}else{let Q=null,fe=null,Me=null;E.depth&&(Me=E.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,Q=E.stencil?ls:Er,fe=E.stencil?Mr:Qi);const Te={colorFormat:t.RGBA8,depthFormat:Me,scaleFactor:s};p=new XRWebGLBinding(i,t),m=p.createProjectionLayer(Te),i.updateRenderState({layers:[m]}),v=new gi(m.textureWidth,m.textureHeight,{format:zn,type:Ii,depthTexture:new R_(m.textureWidth,m.textureHeight,fe,void 0,void 0,void 0,void 0,void 0,void 0,Q),stencilBuffer:E.stencil,colorSpace:e.outputColorSpace,samples:E.antialias?4:0});const Oe=e.properties.get(v);Oe.__ignoreDepthValues=m.ignoreDepthValues}v.isXRRenderTarget=!0,this.setFoveation(u),h=null,l=await i.requestReferenceSpace(c),Y.setContext(i),Y.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function ee(k){for(let Q=0;Q<k.removed.length;Q++){const fe=k.removed[Q],Me=M.indexOf(fe);Me>=0&&(M[Me]=null,w[Me].disconnect(fe))}for(let Q=0;Q<k.added.length;Q++){const fe=k.added[Q];let Me=M.indexOf(fe);if(Me===-1){for(let Oe=0;Oe<w.length;Oe++)if(Oe>=M.length){M.push(fe),Me=Oe;break}else if(M[Oe]===null){M[Oe]=fe,Me=Oe;break}if(Me===-1)break}const Te=w[Me];Te&&Te.connect(fe)}}const oe=new D,V=new D;function $(k,Q,fe){oe.setFromMatrixPosition(Q.matrixWorld),V.setFromMatrixPosition(fe.matrixWorld);const Me=oe.distanceTo(V),Te=Q.projectionMatrix.elements,Oe=fe.projectionMatrix.elements,Be=Te[14]/(Te[10]-1),Xe=Te[14]/(Te[10]+1),_t=(Te[9]+1)/Te[5],Tt=(Te[9]-1)/Te[5],ze=(Te[8]-1)/Te[0],z=(Oe[8]+1)/Oe[0],pe=Be*ze,le=Be*z,ve=Me/(-ze+z),ue=ve*-ze;Q.matrixWorld.decompose(k.position,k.quaternion,k.scale),k.translateX(ue),k.translateZ(ve),k.matrixWorld.compose(k.position,k.quaternion,k.scale),k.matrixWorldInverse.copy(k.matrixWorld).invert();const We=Be+ve,Pe=Xe+ve,Ne=pe-ue,Ke=le+(Me-ue),gt=_t*Xe/Pe*We,Ft=Tt*Xe/Pe*We;k.projectionMatrix.makePerspective(Ne,Ke,gt,Ft,We,Pe),k.projectionMatrixInverse.copy(k.projectionMatrix).invert()}function ae(k,Q){Q===null?k.matrixWorld.copy(k.matrix):k.matrixWorld.multiplyMatrices(Q.matrixWorld,k.matrix),k.matrixWorldInverse.copy(k.matrixWorld).invert()}this.updateCamera=function(k){if(i===null)return;I.near=R.near=A.near=k.near,I.far=R.far=A.far=k.far,(F!==I.near||b!==I.far)&&(i.updateRenderState({depthNear:I.near,depthFar:I.far}),F=I.near,b=I.far);const Q=k.parent,fe=I.cameras;ae(I,Q);for(let Me=0;Me<fe.length;Me++)ae(fe[Me],Q);fe.length===2?$(I,A,R):I.projectionMatrix.copy(A.projectionMatrix),se(k,I,Q)};function se(k,Q,fe){fe===null?k.matrix.copy(Q.matrixWorld):(k.matrix.copy(fe.matrixWorld),k.matrix.invert(),k.matrix.multiply(Q.matrixWorld)),k.matrix.decompose(k.position,k.quaternion,k.scale),k.updateMatrixWorld(!0),k.projectionMatrix.copy(Q.projectionMatrix),k.projectionMatrixInverse.copy(Q.projectionMatrixInverse),k.isPerspectiveCamera&&(k.fov=ca*2*Math.atan(1/k.projectionMatrix.elements[5]),k.zoom=1)}this.getCamera=function(){return I},this.getFoveation=function(){if(!(m===null&&_===null))return u},this.setFoveation=function(k){u=k,m!==null&&(m.fixedFoveation=k),_!==null&&_.fixedFoveation!==void 0&&(_.fixedFoveation=k)};let q=null;function X(k,Q){if(d=Q.getViewerPose(h||l),y=Q,d!==null){const fe=d.views;_!==null&&(e.setRenderTargetFramebuffer(v,_.framebuffer),e.setRenderTarget(v));let Me=!1;fe.length!==I.cameras.length&&(I.cameras.length=0,Me=!0);for(let Te=0;Te<fe.length;Te++){const Oe=fe[Te];let Be=null;if(_!==null)Be=_.getViewport(Oe);else{const _t=p.getViewSubImage(m,Oe);Be=_t.viewport,Te===0&&(e.setRenderTargetTextures(v,_t.colorTexture,m.ignoreDepthValues?void 0:_t.depthStencilTexture),e.setRenderTarget(v))}let Xe=P[Te];Xe===void 0&&(Xe=new dn,Xe.layers.enable(Te),Xe.viewport=new Rt,P[Te]=Xe),Xe.matrix.fromArray(Oe.transform.matrix),Xe.matrix.decompose(Xe.position,Xe.quaternion,Xe.scale),Xe.projectionMatrix.fromArray(Oe.projectionMatrix),Xe.projectionMatrixInverse.copy(Xe.projectionMatrix).invert(),Xe.viewport.set(Be.x,Be.y,Be.width,Be.height),Te===0&&(I.matrix.copy(Xe.matrix),I.matrix.decompose(I.position,I.quaternion,I.scale)),Me===!0&&I.cameras.push(Xe)}}for(let fe=0;fe<w.length;fe++){const Me=M[fe],Te=w[fe];Me!==null&&Te!==void 0&&Te.update(Me,Q,h||l)}q&&q(k,Q),Q.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:Q}),y=null}const Y=new S_;Y.setAnimationLoop(X),this.setAnimationLoop=function(k){q=k},this.dispose=function(){}}}function Aw(r,e){function t(x,v){x.matrixAutoUpdate===!0&&x.updateMatrix(),v.value.copy(x.matrix)}function n(x,v){v.color.getRGB(x.fogColor.value,__(r)),v.isFog?(x.fogNear.value=v.near,x.fogFar.value=v.far):v.isFogExp2&&(x.fogDensity.value=v.density)}function i(x,v,w,M,A){v.isMeshBasicMaterial||v.isMeshLambertMaterial?s(x,v):v.isMeshToonMaterial?(s(x,v),p(x,v)):v.isMeshPhongMaterial?(s(x,v),d(x,v)):v.isMeshStandardMaterial?(s(x,v),m(x,v),v.isMeshPhysicalMaterial&&_(x,v,A)):v.isMeshMatcapMaterial?(s(x,v),y(x,v)):v.isMeshDepthMaterial?s(x,v):v.isMeshDistanceMaterial?(s(x,v),E(x,v)):v.isMeshNormalMaterial?s(x,v):v.isLineBasicMaterial?(l(x,v),v.isLineDashedMaterial&&c(x,v)):v.isPointsMaterial?u(x,v,w,M):v.isSpriteMaterial?h(x,v):v.isShadowMaterial?(x.color.value.copy(v.color),x.opacity.value=v.opacity):v.isShaderMaterial&&(v.uniformsNeedUpdate=!1)}function s(x,v){x.opacity.value=v.opacity,v.color&&x.diffuse.value.copy(v.color),v.emissive&&x.emissive.value.copy(v.emissive).multiplyScalar(v.emissiveIntensity),v.map&&(x.map.value=v.map,t(v.map,x.mapTransform)),v.alphaMap&&(x.alphaMap.value=v.alphaMap,t(v.alphaMap,x.alphaMapTransform)),v.bumpMap&&(x.bumpMap.value=v.bumpMap,t(v.bumpMap,x.bumpMapTransform),x.bumpScale.value=v.bumpScale,v.side===Ln&&(x.bumpScale.value*=-1)),v.normalMap&&(x.normalMap.value=v.normalMap,t(v.normalMap,x.normalMapTransform),x.normalScale.value.copy(v.normalScale),v.side===Ln&&x.normalScale.value.negate()),v.displacementMap&&(x.displacementMap.value=v.displacementMap,t(v.displacementMap,x.displacementMapTransform),x.displacementScale.value=v.displacementScale,x.displacementBias.value=v.displacementBias),v.emissiveMap&&(x.emissiveMap.value=v.emissiveMap,t(v.emissiveMap,x.emissiveMapTransform)),v.specularMap&&(x.specularMap.value=v.specularMap,t(v.specularMap,x.specularMapTransform)),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest);const w=e.get(v).envMap;if(w&&(x.envMap.value=w,x.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,x.reflectivity.value=v.reflectivity,x.ior.value=v.ior,x.refractionRatio.value=v.refractionRatio),v.lightMap){x.lightMap.value=v.lightMap;const M=r._useLegacyLights===!0?Math.PI:1;x.lightMapIntensity.value=v.lightMapIntensity*M,t(v.lightMap,x.lightMapTransform)}v.aoMap&&(x.aoMap.value=v.aoMap,x.aoMapIntensity.value=v.aoMapIntensity,t(v.aoMap,x.aoMapTransform))}function l(x,v){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,v.map&&(x.map.value=v.map,t(v.map,x.mapTransform))}function c(x,v){x.dashSize.value=v.dashSize,x.totalSize.value=v.dashSize+v.gapSize,x.scale.value=v.scale}function u(x,v,w,M){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,x.size.value=v.size*w,x.scale.value=M*.5,v.map&&(x.map.value=v.map,t(v.map,x.uvTransform)),v.alphaMap&&(x.alphaMap.value=v.alphaMap,t(v.alphaMap,x.alphaMapTransform)),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest)}function h(x,v){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,x.rotation.value=v.rotation,v.map&&(x.map.value=v.map,t(v.map,x.mapTransform)),v.alphaMap&&(x.alphaMap.value=v.alphaMap,t(v.alphaMap,x.alphaMapTransform)),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest)}function d(x,v){x.specular.value.copy(v.specular),x.shininess.value=Math.max(v.shininess,1e-4)}function p(x,v){v.gradientMap&&(x.gradientMap.value=v.gradientMap)}function m(x,v){x.metalness.value=v.metalness,v.metalnessMap&&(x.metalnessMap.value=v.metalnessMap,t(v.metalnessMap,x.metalnessMapTransform)),x.roughness.value=v.roughness,v.roughnessMap&&(x.roughnessMap.value=v.roughnessMap,t(v.roughnessMap,x.roughnessMapTransform)),e.get(v).envMap&&(x.envMapIntensity.value=v.envMapIntensity)}function _(x,v,w){x.ior.value=v.ior,v.sheen>0&&(x.sheenColor.value.copy(v.sheenColor).multiplyScalar(v.sheen),x.sheenRoughness.value=v.sheenRoughness,v.sheenColorMap&&(x.sheenColorMap.value=v.sheenColorMap,t(v.sheenColorMap,x.sheenColorMapTransform)),v.sheenRoughnessMap&&(x.sheenRoughnessMap.value=v.sheenRoughnessMap,t(v.sheenRoughnessMap,x.sheenRoughnessMapTransform))),v.clearcoat>0&&(x.clearcoat.value=v.clearcoat,x.clearcoatRoughness.value=v.clearcoatRoughness,v.clearcoatMap&&(x.clearcoatMap.value=v.clearcoatMap,t(v.clearcoatMap,x.clearcoatMapTransform)),v.clearcoatRoughnessMap&&(x.clearcoatRoughnessMap.value=v.clearcoatRoughnessMap,t(v.clearcoatRoughnessMap,x.clearcoatRoughnessMapTransform)),v.clearcoatNormalMap&&(x.clearcoatNormalMap.value=v.clearcoatNormalMap,t(v.clearcoatNormalMap,x.clearcoatNormalMapTransform),x.clearcoatNormalScale.value.copy(v.clearcoatNormalScale),v.side===Ln&&x.clearcoatNormalScale.value.negate())),v.iridescence>0&&(x.iridescence.value=v.iridescence,x.iridescenceIOR.value=v.iridescenceIOR,x.iridescenceThicknessMinimum.value=v.iridescenceThicknessRange[0],x.iridescenceThicknessMaximum.value=v.iridescenceThicknessRange[1],v.iridescenceMap&&(x.iridescenceMap.value=v.iridescenceMap,t(v.iridescenceMap,x.iridescenceMapTransform)),v.iridescenceThicknessMap&&(x.iridescenceThicknessMap.value=v.iridescenceThicknessMap,t(v.iridescenceThicknessMap,x.iridescenceThicknessMapTransform))),v.transmission>0&&(x.transmission.value=v.transmission,x.transmissionSamplerMap.value=w.texture,x.transmissionSamplerSize.value.set(w.width,w.height),v.transmissionMap&&(x.transmissionMap.value=v.transmissionMap,t(v.transmissionMap,x.transmissionMapTransform)),x.thickness.value=v.thickness,v.thicknessMap&&(x.thicknessMap.value=v.thicknessMap,t(v.thicknessMap,x.thicknessMapTransform)),x.attenuationDistance.value=v.attenuationDistance,x.attenuationColor.value.copy(v.attenuationColor)),v.anisotropy>0&&(x.anisotropyVector.value.set(v.anisotropy*Math.cos(v.anisotropyRotation),v.anisotropy*Math.sin(v.anisotropyRotation)),v.anisotropyMap&&(x.anisotropyMap.value=v.anisotropyMap,t(v.anisotropyMap,x.anisotropyMapTransform))),x.specularIntensity.value=v.specularIntensity,x.specularColor.value.copy(v.specularColor),v.specularColorMap&&(x.specularColorMap.value=v.specularColorMap,t(v.specularColorMap,x.specularColorMapTransform)),v.specularIntensityMap&&(x.specularIntensityMap.value=v.specularIntensityMap,t(v.specularIntensityMap,x.specularIntensityMapTransform))}function y(x,v){v.matcap&&(x.matcap.value=v.matcap)}function E(x,v){const w=e.get(v).light;x.referencePosition.value.setFromMatrixPosition(w.matrixWorld),x.nearDistance.value=w.shadow.camera.near,x.farDistance.value=w.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function bw(r,e,t,n){let i={},s={},l=[];const c=t.isWebGL2?r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS):0;function u(w,M){const A=M.program;n.uniformBlockBinding(w,A)}function h(w,M){let A=i[w.id];A===void 0&&(y(w),A=d(w),i[w.id]=A,w.addEventListener("dispose",x));const R=M.program;n.updateUBOMapping(w,R);const P=e.render.frame;s[w.id]!==P&&(m(w),s[w.id]=P)}function d(w){const M=p();w.__bindingPointIndex=M;const A=r.createBuffer(),R=w.__size,P=w.usage;return r.bindBuffer(r.UNIFORM_BUFFER,A),r.bufferData(r.UNIFORM_BUFFER,R,P),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,M,A),A}function p(){for(let w=0;w<c;w++)if(l.indexOf(w)===-1)return l.push(w),w;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(w){const M=i[w.id],A=w.uniforms,R=w.__cache;r.bindBuffer(r.UNIFORM_BUFFER,M);for(let P=0,I=A.length;P<I;P++){const F=A[P];if(_(F,P,R)===!0){const b=F.__offset,L=Array.isArray(F.value)?F.value:[F.value];let H=0;for(let ee=0;ee<L.length;ee++){const oe=L[ee],V=E(oe);typeof oe=="number"?(F.__data[0]=oe,r.bufferSubData(r.UNIFORM_BUFFER,b+H,F.__data)):oe.isMatrix3?(F.__data[0]=oe.elements[0],F.__data[1]=oe.elements[1],F.__data[2]=oe.elements[2],F.__data[3]=oe.elements[0],F.__data[4]=oe.elements[3],F.__data[5]=oe.elements[4],F.__data[6]=oe.elements[5],F.__data[7]=oe.elements[0],F.__data[8]=oe.elements[6],F.__data[9]=oe.elements[7],F.__data[10]=oe.elements[8],F.__data[11]=oe.elements[0]):(oe.toArray(F.__data,H),H+=V.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,b,F.__data)}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function _(w,M,A){const R=w.value;if(A[M]===void 0){if(typeof R=="number")A[M]=R;else{const P=Array.isArray(R)?R:[R],I=[];for(let F=0;F<P.length;F++)I.push(P[F].clone());A[M]=I}return!0}else if(typeof R=="number"){if(A[M]!==R)return A[M]=R,!0}else{const P=Array.isArray(A[M])?A[M]:[A[M]],I=Array.isArray(R)?R:[R];for(let F=0;F<P.length;F++){const b=P[F];if(b.equals(I[F])===!1)return b.copy(I[F]),!0}}return!1}function y(w){const M=w.uniforms;let A=0;const R=16;let P=0;for(let I=0,F=M.length;I<F;I++){const b=M[I],L={boundary:0,storage:0},H=Array.isArray(b.value)?b.value:[b.value];for(let ee=0,oe=H.length;ee<oe;ee++){const V=H[ee],$=E(V);L.boundary+=$.boundary,L.storage+=$.storage}if(b.__data=new Float32Array(L.storage/Float32Array.BYTES_PER_ELEMENT),b.__offset=A,I>0){P=A%R;const ee=R-P;P!==0&&ee-L.boundary<0&&(A+=R-P,b.__offset=A)}A+=L.storage}return P=A%R,P>0&&(A+=R-P),w.__size=A,w.__cache={},this}function E(w){const M={boundary:0,storage:0};return typeof w=="number"?(M.boundary=4,M.storage=4):w.isVector2?(M.boundary=8,M.storage=8):w.isVector3||w.isColor?(M.boundary=16,M.storage=12):w.isVector4?(M.boundary=16,M.storage=16):w.isMatrix3?(M.boundary=48,M.storage=48):w.isMatrix4?(M.boundary=64,M.storage=64):w.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",w),M}function x(w){const M=w.target;M.removeEventListener("dispose",x);const A=l.indexOf(M.__bindingPointIndex);l.splice(A,1),r.deleteBuffer(i[M.id]),delete i[M.id],delete s[M.id]}function v(){for(const w in i)r.deleteBuffer(i[w]);l=[],i={},s={}}return{bind:u,update:h,dispose:v}}class wd{constructor(e={}){const{canvas:t=p_(),context:n=null,depth:i=!0,stencil:s=!0,alpha:l=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:h=!1,powerPreference:d="default",failIfMajorPerformanceCaveat:p=!1}=e;this.isWebGLRenderer=!0;let m;n!==null?m=n.getContextAttributes().alpha:m=l;const _=new Uint32Array(4),y=new Int32Array(4);let E=null,x=null;const v=[],w=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=rn,this._useLegacyLights=!1,this.toneMapping=Li,this.toneMappingExposure=1;const M=this;let A=!1,R=0,P=0,I=null,F=-1,b=null;const L=new Rt,H=new Rt;let ee=null;const oe=new De(0);let V=0,$=t.width,ae=t.height,se=1,q=null,X=null;const Y=new Rt(0,0,$,ae),k=new Rt(0,0,$,ae);let Q=!1;const fe=new qc;let Me=!1,Te=!1,Oe=null;const Be=new lt,Xe=new ce,_t=new D,Tt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ze(){return I===null?se:1}let z=n;function pe(U,Z){for(let ie=0;ie<U.length;ie++){const K=U[ie],re=t.getContext(K,Z);if(re!==null)return re}return null}try{const U={alpha:!0,depth:i,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:h,powerPreference:d,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${zc}`),t.addEventListener("webglcontextlost",Ee,!1),t.addEventListener("webglcontextrestored",Se,!1),t.addEventListener("webglcontextcreationerror",Le,!1),z===null){const Z=["webgl2","webgl","experimental-webgl"];if(M.isWebGL1Renderer===!0&&Z.shift(),z=pe(Z,U),z===null)throw pe(Z)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&z instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),z.getShaderPrecisionFormat===void 0&&(z.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(U){throw console.error("THREE.WebGLRenderer: "+U.message),U}let le,ve,ue,We,Pe,Ne,Ke,gt,Ft,O,C,j,me,de,ge,ke,xe,Re,Qe,vt,ye,wt,rt,je;function Ze(){le=new GE(z),ve=new FE(z,le,e),le.init(ve),wt=new A_(z,le,ve),ue=new Mw(z,le,ve),We=new qE(z),Pe=new uw,Ne=new Ew(z,le,ue,Pe,ve,wt,We),Ke=new zE(M),gt=new VE(M),Ft=new nS(z,ve),rt=new NE(z,le,Ft,ve),O=new WE(z,Ft,We,rt),C=new KE(z,O,Ft,We),Qe=new JE(z,ve,Ne),ke=new BE(Pe),j=new cw(M,Ke,gt,le,ve,rt,ke),me=new Aw(M,Pe),de=new fw,ge=new vw(le,ve),Re=new DE(M,Ke,gt,ue,C,m,u),xe=new Sw(M,C,ve),je=new bw(z,We,ve,ue),vt=new OE(z,le,We,ve),ye=new XE(z,le,We,ve),We.programs=j.programs,M.capabilities=ve,M.extensions=le,M.properties=Pe,M.renderLists=de,M.shadowMap=xe,M.state=ue,M.info=We}Ze();const B=new Tw(M,z);this.xr=B,this.getContext=function(){return z},this.getContextAttributes=function(){return z.getContextAttributes()},this.forceContextLoss=function(){const U=le.get("WEBGL_lose_context");U&&U.loseContext()},this.forceContextRestore=function(){const U=le.get("WEBGL_lose_context");U&&U.restoreContext()},this.getPixelRatio=function(){return se},this.setPixelRatio=function(U){U!==void 0&&(se=U,this.setSize($,ae,!1))},this.getSize=function(U){return U.set($,ae)},this.setSize=function(U,Z,ie=!0){if(B.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}$=U,ae=Z,t.width=Math.floor(U*se),t.height=Math.floor(Z*se),ie===!0&&(t.style.width=U+"px",t.style.height=Z+"px"),this.setViewport(0,0,U,Z)},this.getDrawingBufferSize=function(U){return U.set($*se,ae*se).floor()},this.setDrawingBufferSize=function(U,Z,ie){$=U,ae=Z,se=ie,t.width=Math.floor(U*ie),t.height=Math.floor(Z*ie),this.setViewport(0,0,U,Z)},this.getCurrentViewport=function(U){return U.copy(L)},this.getViewport=function(U){return U.copy(Y)},this.setViewport=function(U,Z,ie,K){U.isVector4?Y.set(U.x,U.y,U.z,U.w):Y.set(U,Z,ie,K),ue.viewport(L.copy(Y).multiplyScalar(se).floor())},this.getScissor=function(U){return U.copy(k)},this.setScissor=function(U,Z,ie,K){U.isVector4?k.set(U.x,U.y,U.z,U.w):k.set(U,Z,ie,K),ue.scissor(H.copy(k).multiplyScalar(se).floor())},this.getScissorTest=function(){return Q},this.setScissorTest=function(U){ue.setScissorTest(Q=U)},this.setOpaqueSort=function(U){q=U},this.setTransparentSort=function(U){X=U},this.getClearColor=function(U){return U.copy(Re.getClearColor())},this.setClearColor=function(){Re.setClearColor.apply(Re,arguments)},this.getClearAlpha=function(){return Re.getClearAlpha()},this.setClearAlpha=function(){Re.setClearAlpha.apply(Re,arguments)},this.clear=function(U=!0,Z=!0,ie=!0){let K=0;if(U){let re=!1;if(I!==null){const Ie=I.texture.format;re=Ie===dd||Ie===fd||Ie===hd}if(re){const Ie=I.texture.type,qe=Ie===Ii||Ie===Qi||Ie===Vc||Ie===Mr||Ie===cd||Ie===ud,$e=Re.getClearColor(),et=Re.getClearAlpha(),dt=$e.r,Je=$e.g,nt=$e.b;qe?(_[0]=dt,_[1]=Je,_[2]=nt,_[3]=et,z.clearBufferuiv(z.COLOR,0,_)):(y[0]=dt,y[1]=Je,y[2]=nt,y[3]=et,z.clearBufferiv(z.COLOR,0,y))}else K|=z.COLOR_BUFFER_BIT}Z&&(K|=z.DEPTH_BUFFER_BIT),ie&&(K|=z.STENCIL_BUFFER_BIT),z.clear(K)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ee,!1),t.removeEventListener("webglcontextrestored",Se,!1),t.removeEventListener("webglcontextcreationerror",Le,!1),de.dispose(),ge.dispose(),Pe.dispose(),Ke.dispose(),gt.dispose(),C.dispose(),rt.dispose(),je.dispose(),j.dispose(),B.dispose(),B.removeEventListener("sessionstart",Ct),B.removeEventListener("sessionend",Gn),Oe&&(Oe.dispose(),Oe=null),pn.stop()};function Ee(U){U.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),A=!0}function Se(){console.log("THREE.WebGLRenderer: Context Restored."),A=!1;const U=We.autoReset,Z=xe.enabled,ie=xe.autoUpdate,K=xe.needsUpdate,re=xe.type;Ze(),We.autoReset=U,xe.enabled=Z,xe.autoUpdate=ie,xe.needsUpdate=K,xe.type=re}function Le(U){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",U.statusMessage)}function be(U){const Z=U.target;Z.removeEventListener("dispose",be),he(Z)}function he(U){Ve(U),Pe.remove(U)}function Ve(U){const Z=Pe.get(U).programs;Z!==void 0&&(Z.forEach(function(ie){j.releaseProgram(ie)}),U.isShaderMaterial&&j.releaseShaderCache(U))}this.renderBufferDirect=function(U,Z,ie,K,re,Ie){Z===null&&(Z=Tt);const qe=re.isMesh&&re.matrixWorld.determinant()<0,$e=mu(U,Z,ie,K,re);ue.setMaterial(K,qe);let et=ie.index,dt=1;if(K.wireframe===!0){if(et=O.getWireframeAttribute(ie),et===void 0)return;dt=2}const Je=ie.drawRange,nt=ie.attributes.position;let Ut=Je.start*dt,Ot=(Je.start+Je.count)*dt;Ie!==null&&(Ut=Math.max(Ut,Ie.start*dt),Ot=Math.min(Ot,(Ie.start+Ie.count)*dt)),et!==null?(Ut=Math.max(Ut,0),Ot=Math.min(Ot,et.count)):nt!=null&&(Ut=Math.max(Ut,0),Ot=Math.min(Ot,nt.count));const Un=Ot-Ut;if(Un<0||Un===1/0)return;rt.setup(re,K,$e,ie,et);let Wn,Pt=vt;if(et!==null&&(Wn=Ft.get(et),Pt=ye,Pt.setIndex(Wn)),re.isMesh)K.wireframe===!0?(ue.setLineWidth(K.wireframeLinewidth*ze()),Pt.setMode(z.LINES)):Pt.setMode(z.TRIANGLES);else if(re.isLine){let it=K.linewidth;it===void 0&&(it=1),ue.setLineWidth(it*ze()),re.isLineSegments?Pt.setMode(z.LINES):re.isLineLoop?Pt.setMode(z.LINE_LOOP):Pt.setMode(z.LINE_STRIP)}else re.isPoints?Pt.setMode(z.POINTS):re.isSprite&&Pt.setMode(z.TRIANGLES);if(re.isInstancedMesh)Pt.renderInstances(Ut,Un,re.count);else if(ie.isInstancedBufferGeometry){const it=ie._maxInstanceCount!==void 0?ie._maxInstanceCount:1/0,At=Math.min(ie.instanceCount,it);Pt.renderInstances(Ut,Un,At)}else Pt.render(Ut,Un)},this.compile=function(U,Z){function ie(K,re,Ie){K.transparent===!0&&K.side===Ri&&K.forceSinglePass===!1?(K.side=Ln,K.needsUpdate=!0,xi(K,re,Ie),K.side=er,K.needsUpdate=!0,xi(K,re,Ie),K.side=Ri):xi(K,re,Ie)}x=ge.get(U),x.init(),w.push(x),U.traverseVisible(function(K){K.isLight&&K.layers.test(Z.layers)&&(x.pushLight(K),K.castShadow&&x.pushShadow(K))}),x.setupLights(M._useLegacyLights),U.traverse(function(K){const re=K.material;if(re)if(Array.isArray(re))for(let Ie=0;Ie<re.length;Ie++){const qe=re[Ie];ie(qe,U,K)}else ie(re,U,K)}),w.pop(),x=null};let st=null;function on(U){st&&st(U)}function Ct(){pn.stop()}function Gn(){pn.start()}const pn=new S_;pn.setAnimationLoop(on),typeof self<"u"&&pn.setContext(self),this.setAnimationLoop=function(U){st=U,B.setAnimationLoop(U),U===null?pn.stop():pn.start()},B.addEventListener("sessionstart",Ct),B.addEventListener("sessionend",Gn),this.render=function(U,Z){if(Z!==void 0&&Z.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(A===!0)return;U.matrixWorldAutoUpdate===!0&&U.updateMatrixWorld(),Z.parent===null&&Z.matrixWorldAutoUpdate===!0&&Z.updateMatrixWorld(),B.enabled===!0&&B.isPresenting===!0&&(B.cameraAutoUpdate===!0&&B.updateCamera(Z),Z=B.getCamera()),U.isScene===!0&&U.onBeforeRender(M,U,Z,I),x=ge.get(U,w.length),x.init(),w.push(x),Be.multiplyMatrices(Z.projectionMatrix,Z.matrixWorldInverse),fe.setFromProjectionMatrix(Be),Te=this.localClippingEnabled,Me=ke.init(this.clippingPlanes,Te),E=de.get(U,v.length),E.init(),v.push(E),Fo(U,Z,0,M.sortObjects),E.finish(),M.sortObjects===!0&&E.sort(q,X),this.info.render.frame++,Me===!0&&ke.beginShadows();const ie=x.state.shadowsArray;if(xe.render(ie,U,Z),Me===!0&&ke.endShadows(),this.info.autoReset===!0&&this.info.reset(),Re.render(E,U),x.setupLights(M._useLegacyLights),Z.isArrayCamera){const K=Z.cameras;for(let re=0,Ie=K.length;re<Ie;re++){const qe=K[re];Bo(E,U,qe,qe.viewport)}}else Bo(E,U,Z);I!==null&&(Ne.updateMultisampleRenderTarget(I),Ne.updateRenderTargetMipmap(I)),U.isScene===!0&&U.onAfterRender(M,U,Z),rt.resetDefaultState(),F=-1,b=null,w.pop(),w.length>0?x=w[w.length-1]:x=null,v.pop(),v.length>0?E=v[v.length-1]:E=null};function Fo(U,Z,ie,K){if(U.visible===!1)return;if(U.layers.test(Z.layers)){if(U.isGroup)ie=U.renderOrder;else if(U.isLOD)U.autoUpdate===!0&&U.update(Z);else if(U.isLight)x.pushLight(U),U.castShadow&&x.pushShadow(U);else if(U.isSprite){if(!U.frustumCulled||fe.intersectsSprite(U)){K&&_t.setFromMatrixPosition(U.matrixWorld).applyMatrix4(Be);const qe=C.update(U),$e=U.material;$e.visible&&E.push(U,qe,$e,ie,_t.z,null)}}else if((U.isMesh||U.isLine||U.isPoints)&&(!U.frustumCulled||fe.intersectsObject(U))){const qe=C.update(U),$e=U.material;if(K&&(U.boundingSphere!==void 0?(U.boundingSphere===null&&U.computeBoundingSphere(),_t.copy(U.boundingSphere.center)):(qe.boundingSphere===null&&qe.computeBoundingSphere(),_t.copy(qe.boundingSphere.center)),_t.applyMatrix4(U.matrixWorld).applyMatrix4(Be)),Array.isArray($e)){const et=qe.groups;for(let dt=0,Je=et.length;dt<Je;dt++){const nt=et[dt],Ut=$e[nt.materialIndex];Ut&&Ut.visible&&E.push(U,qe,Ut,ie,_t.z,nt)}}else $e.visible&&E.push(U,qe,$e,ie,_t.z,null)}}const Ie=U.children;for(let qe=0,$e=Ie.length;qe<$e;qe++)Fo(Ie[qe],Z,ie,K)}function Bo(U,Z,ie,K){const re=U.opaque,Ie=U.transmissive,qe=U.transparent;x.setupLightsView(ie),Me===!0&&ke.setGlobalState(M.clippingPlanes,ie),Ie.length>0&&zo(re,Ie,Z,ie),K&&ue.viewport(L.copy(K)),re.length>0&&rr(re,Z,ie),Ie.length>0&&rr(Ie,Z,ie),qe.length>0&&rr(qe,Z,ie),ue.buffers.depth.setTest(!0),ue.buffers.depth.setMask(!0),ue.buffers.color.setMask(!0),ue.setPolygonOffset(!1)}function zo(U,Z,ie,K){const re=ve.isWebGL2;Oe===null&&(Oe=new gi(1,1,{generateMipmaps:!0,type:le.has("EXT_color_buffer_half_float")?la:Ii,minFilter:Ar,samples:re?4:0})),M.getDrawingBufferSize(Xe),re?Oe.setSize(Xe.x,Xe.y):Oe.setSize(Oc(Xe.x),Oc(Xe.y));const Ie=M.getRenderTarget();M.setRenderTarget(Oe),M.getClearColor(oe),V=M.getClearAlpha(),V<1&&M.setClearColor(16777215,.5),M.clear();const qe=M.toneMapping;M.toneMapping=Li,rr(U,ie,K),Ne.updateMultisampleRenderTarget(Oe),Ne.updateRenderTargetMipmap(Oe);let $e=!1;for(let et=0,dt=Z.length;et<dt;et++){const Je=Z[et],nt=Je.object,Ut=Je.geometry,Ot=Je.material,Un=Je.group;if(Ot.side===Ri&&nt.layers.test(K.layers)){const Wn=Ot.side;Ot.side=Ln,Ot.needsUpdate=!0,ko(nt,ie,K,Ut,Ot,Un),Ot.side=Wn,Ot.needsUpdate=!0,$e=!0}}$e===!0&&(Ne.updateMultisampleRenderTarget(Oe),Ne.updateRenderTargetMipmap(Oe)),M.setRenderTarget(Ie),M.setClearColor(oe,V),M.toneMapping=qe}function rr(U,Z,ie){const K=Z.isScene===!0?Z.overrideMaterial:null;for(let re=0,Ie=U.length;re<Ie;re++){const qe=U[re],$e=qe.object,et=qe.geometry,dt=K===null?qe.material:K,Je=qe.group;$e.layers.test(ie.layers)&&ko($e,Z,ie,et,dt,Je)}}function ko(U,Z,ie,K,re,Ie){U.onBeforeRender(M,Z,ie,K,re,Ie),U.modelViewMatrix.multiplyMatrices(ie.matrixWorldInverse,U.matrixWorld),U.normalMatrix.getNormalMatrix(U.modelViewMatrix),re.onBeforeRender(M,Z,ie,K,U,Ie),re.transparent===!0&&re.side===Ri&&re.forceSinglePass===!1?(re.side=Ln,re.needsUpdate=!0,M.renderBufferDirect(ie,Z,K,re,U,Ie),re.side=er,re.needsUpdate=!0,M.renderBufferDirect(ie,Z,K,re,U,Ie),re.side=Ri):M.renderBufferDirect(ie,Z,K,re,U,Ie),U.onAfterRender(M,Z,ie,K,re,Ie)}function xi(U,Z,ie){Z.isScene!==!0&&(Z=Tt);const K=Pe.get(U),re=x.state.lights,Ie=x.state.shadowsArray,qe=re.state.version,$e=j.getParameters(U,re.state,Ie,Z,ie),et=j.getProgramCacheKey($e);let dt=K.programs;K.environment=U.isMeshStandardMaterial?Z.environment:null,K.fog=Z.fog,K.envMap=(U.isMeshStandardMaterial?gt:Ke).get(U.envMap||K.environment),dt===void 0&&(U.addEventListener("dispose",be),dt=new Map,K.programs=dt);let Je=dt.get(et);if(Je!==void 0){if(K.currentProgram===Je&&K.lightsStateVersion===qe)return Ho(U,$e),Je}else $e.uniforms=j.getUniforms(U),U.onBuild(ie,$e,M),U.onBeforeCompile($e,M),Je=j.acquireProgram($e,et),dt.set(et,Je),K.uniforms=$e.uniforms;const nt=K.uniforms;(!U.isShaderMaterial&&!U.isRawShaderMaterial||U.clipping===!0)&&(nt.clippingPlanes=ke.uniform),Ho(U,$e),K.needsLights=_u(U),K.lightsStateVersion=qe,K.needsLights&&(nt.ambientLightColor.value=re.state.ambient,nt.lightProbe.value=re.state.probe,nt.directionalLights.value=re.state.directional,nt.directionalLightShadows.value=re.state.directionalShadow,nt.spotLights.value=re.state.spot,nt.spotLightShadows.value=re.state.spotShadow,nt.rectAreaLights.value=re.state.rectArea,nt.ltc_1.value=re.state.rectAreaLTC1,nt.ltc_2.value=re.state.rectAreaLTC2,nt.pointLights.value=re.state.point,nt.pointLightShadows.value=re.state.pointShadow,nt.hemisphereLights.value=re.state.hemi,nt.directionalShadowMap.value=re.state.directionalShadowMap,nt.directionalShadowMatrix.value=re.state.directionalShadowMatrix,nt.spotShadowMap.value=re.state.spotShadowMap,nt.spotLightMatrix.value=re.state.spotLightMatrix,nt.spotLightMap.value=re.state.spotLightMap,nt.pointShadowMap.value=re.state.pointShadowMap,nt.pointShadowMatrix.value=re.state.pointShadowMatrix);const Ut=Je.getUniforms(),Ot=Lc.seqWithValue(Ut.seq,nt);return K.currentProgram=Je,K.uniformsList=Ot,Je}function Ho(U,Z){const ie=Pe.get(U);ie.outputColorSpace=Z.outputColorSpace,ie.instancing=Z.instancing,ie.instancingColor=Z.instancingColor,ie.skinning=Z.skinning,ie.morphTargets=Z.morphTargets,ie.morphNormals=Z.morphNormals,ie.morphColors=Z.morphColors,ie.morphTargetsCount=Z.morphTargetsCount,ie.numClippingPlanes=Z.numClippingPlanes,ie.numIntersection=Z.numClipIntersection,ie.vertexAlphas=Z.vertexAlphas,ie.vertexTangents=Z.vertexTangents,ie.toneMapping=Z.toneMapping}function mu(U,Z,ie,K,re){Z.isScene!==!0&&(Z=Tt),Ne.resetTextureUnits();const Ie=Z.fog,qe=K.isMeshStandardMaterial?Z.environment:null,$e=I===null?M.outputColorSpace:I.isXRRenderTarget===!0?I.texture.colorSpace:Di,et=(K.isMeshStandardMaterial?gt:Ke).get(K.envMap||qe),dt=K.vertexColors===!0&&!!ie.attributes.color&&ie.attributes.color.itemSize===4,Je=!!ie.attributes.tangent&&(!!K.normalMap||K.anisotropy>0),nt=!!ie.morphAttributes.position,Ut=!!ie.morphAttributes.normal,Ot=!!ie.morphAttributes.color;let Un=Li;K.toneMapped&&(I===null||I.isXRRenderTarget===!0)&&(Un=M.toneMapping);const Wn=ie.morphAttributes.position||ie.morphAttributes.normal||ie.morphAttributes.color,Pt=Wn!==void 0?Wn.length:0,it=Pe.get(K),At=x.state.lights;if(Me===!0&&(Te===!0||U!==b)){const vn=U===b&&K.id===F;ke.setState(K,U,vn)}let tt=!1;K.version===it.__version?(it.needsLights&&it.lightsStateVersion!==At.state.version||it.outputColorSpace!==$e||re.isInstancedMesh&&it.instancing===!1||!re.isInstancedMesh&&it.instancing===!0||re.isSkinnedMesh&&it.skinning===!1||!re.isSkinnedMesh&&it.skinning===!0||re.isInstancedMesh&&it.instancingColor===!0&&re.instanceColor===null||re.isInstancedMesh&&it.instancingColor===!1&&re.instanceColor!==null||it.envMap!==et||K.fog===!0&&it.fog!==Ie||it.numClippingPlanes!==void 0&&(it.numClippingPlanes!==ke.numPlanes||it.numIntersection!==ke.numIntersection)||it.vertexAlphas!==dt||it.vertexTangents!==Je||it.morphTargets!==nt||it.morphNormals!==Ut||it.morphColors!==Ot||it.toneMapping!==Un||ve.isWebGL2===!0&&it.morphTargetsCount!==Pt)&&(tt=!0):(tt=!0,it.__version=K.version);let _n=it.currentProgram;tt===!0&&(_n=xi(K,Z,re));let tn=!1,jt=!1,li=!1;const Ht=_n.getUniforms(),Vt=it.uniforms;if(ue.useProgram(_n.program)&&(tn=!0,jt=!0,li=!0),K.id!==F&&(F=K.id,jt=!0),tn||b!==U){Ht.setValue(z,"projectionMatrix",U.projectionMatrix),Ht.setValue(z,"viewMatrix",U.matrixWorldInverse);const vn=Ht.map.cameraPosition;vn!==void 0&&vn.setValue(z,_t.setFromMatrixPosition(U.matrixWorld)),ve.logarithmicDepthBuffer&&Ht.setValue(z,"logDepthBufFC",2/(Math.log(U.far+1)/Math.LN2)),(K.isMeshPhongMaterial||K.isMeshToonMaterial||K.isMeshLambertMaterial||K.isMeshBasicMaterial||K.isMeshStandardMaterial||K.isShaderMaterial)&&Ht.setValue(z,"isOrthographic",U.isOrthographicCamera===!0),b!==U&&(b=U,jt=!0,li=!0)}if(re.isSkinnedMesh){Ht.setOptional(z,re,"bindMatrix"),Ht.setOptional(z,re,"bindMatrixInverse");const vn=re.skeleton;vn&&(ve.floatVertexTextures?(vn.boneTexture===null&&vn.computeBoneTexture(),Ht.setValue(z,"boneTexture",vn.boneTexture,Ne),Ht.setValue(z,"boneTextureSize",vn.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const sr=ie.morphAttributes;if((sr.position!==void 0||sr.normal!==void 0||sr.color!==void 0&&ve.isWebGL2===!0)&&Qe.update(re,ie,_n),(jt||it.receiveShadow!==re.receiveShadow)&&(it.receiveShadow=re.receiveShadow,Ht.setValue(z,"receiveShadow",re.receiveShadow)),K.isMeshGouraudMaterial&&K.envMap!==null&&(Vt.envMap.value=et,Vt.flipEnvMap.value=et.isCubeTexture&&et.isRenderTargetTexture===!1?-1:1),jt&&(Ht.setValue(z,"toneMappingExposure",M.toneMappingExposure),it.needsLights&&gu(Vt,li),Ie&&K.fog===!0&&me.refreshFogUniforms(Vt,Ie),me.refreshMaterialUniforms(Vt,K,se,ae,Oe),Lc.upload(z,it.uniformsList,Vt,Ne)),K.isShaderMaterial&&K.uniformsNeedUpdate===!0&&(Lc.upload(z,it.uniformsList,Vt,Ne),K.uniformsNeedUpdate=!1),K.isSpriteMaterial&&Ht.setValue(z,"center",re.center),Ht.setValue(z,"modelViewMatrix",re.modelViewMatrix),Ht.setValue(z,"normalMatrix",re.normalMatrix),Ht.setValue(z,"modelMatrix",re.matrixWorld),K.isShaderMaterial||K.isRawShaderMaterial){const vn=K.uniformsGroups;for(let ms=0,gs=vn.length;ms<gs;ms++)if(ve.isWebGL2){const va=vn[ms];je.update(va,_n),je.bind(va,_n)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return _n}function gu(U,Z){U.ambientLightColor.needsUpdate=Z,U.lightProbe.needsUpdate=Z,U.directionalLights.needsUpdate=Z,U.directionalLightShadows.needsUpdate=Z,U.pointLights.needsUpdate=Z,U.pointLightShadows.needsUpdate=Z,U.spotLights.needsUpdate=Z,U.spotLightShadows.needsUpdate=Z,U.rectAreaLights.needsUpdate=Z,U.hemisphereLights.needsUpdate=Z}function _u(U){return U.isMeshLambertMaterial||U.isMeshToonMaterial||U.isMeshPhongMaterial||U.isMeshStandardMaterial||U.isShadowMaterial||U.isShaderMaterial&&U.lights===!0}this.getActiveCubeFace=function(){return R},this.getActiveMipmapLevel=function(){return P},this.getRenderTarget=function(){return I},this.setRenderTargetTextures=function(U,Z,ie){Pe.get(U.texture).__webglTexture=Z,Pe.get(U.depthTexture).__webglTexture=ie;const K=Pe.get(U);K.__hasExternalTextures=!0,K.__hasExternalTextures&&(K.__autoAllocateDepthBuffer=ie===void 0,K.__autoAllocateDepthBuffer||le.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),K.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(U,Z){const ie=Pe.get(U);ie.__webglFramebuffer=Z,ie.__useDefaultFramebuffer=Z===void 0},this.setRenderTarget=function(U,Z=0,ie=0){I=U,R=Z,P=ie;let K=!0,re=null,Ie=!1,qe=!1;if(U){const et=Pe.get(U);et.__useDefaultFramebuffer!==void 0?(ue.bindFramebuffer(z.FRAMEBUFFER,null),K=!1):et.__webglFramebuffer===void 0?Ne.setupRenderTarget(U):et.__hasExternalTextures&&Ne.rebindTextures(U,Pe.get(U.texture).__webglTexture,Pe.get(U.depthTexture).__webglTexture);const dt=U.texture;(dt.isData3DTexture||dt.isDataArrayTexture||dt.isCompressedArrayTexture)&&(qe=!0);const Je=Pe.get(U).__webglFramebuffer;U.isWebGLCubeRenderTarget?(Array.isArray(Je[Z])?re=Je[Z][ie]:re=Je[Z],Ie=!0):ve.isWebGL2&&U.samples>0&&Ne.useMultisampledRTT(U)===!1?re=Pe.get(U).__webglMultisampledFramebuffer:Array.isArray(Je)?re=Je[ie]:re=Je,L.copy(U.viewport),H.copy(U.scissor),ee=U.scissorTest}else L.copy(Y).multiplyScalar(se).floor(),H.copy(k).multiplyScalar(se).floor(),ee=Q;if(ue.bindFramebuffer(z.FRAMEBUFFER,re)&&ve.drawBuffers&&K&&ue.drawBuffers(U,re),ue.viewport(L),ue.scissor(H),ue.setScissorTest(ee),Ie){const et=Pe.get(U.texture);z.framebufferTexture2D(z.FRAMEBUFFER,z.COLOR_ATTACHMENT0,z.TEXTURE_CUBE_MAP_POSITIVE_X+Z,et.__webglTexture,ie)}else if(qe){const et=Pe.get(U.texture),dt=Z||0;z.framebufferTextureLayer(z.FRAMEBUFFER,z.COLOR_ATTACHMENT0,et.__webglTexture,ie||0,dt)}F=-1},this.readRenderTargetPixels=function(U,Z,ie,K,re,Ie,qe){if(!(U&&U.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let $e=Pe.get(U).__webglFramebuffer;if(U.isWebGLCubeRenderTarget&&qe!==void 0&&($e=$e[qe]),$e){ue.bindFramebuffer(z.FRAMEBUFFER,$e);try{const et=U.texture,dt=et.format,Je=et.type;if(dt!==zn&&wt.convert(dt)!==z.getParameter(z.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const nt=Je===la&&(le.has("EXT_color_buffer_half_float")||ve.isWebGL2&&le.has("EXT_color_buffer_float"));if(Je!==Ii&&wt.convert(Je)!==z.getParameter(z.IMPLEMENTATION_COLOR_READ_TYPE)&&!(Je===Ci&&(ve.isWebGL2||le.has("OES_texture_float")||le.has("WEBGL_color_buffer_float")))&&!nt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Z>=0&&Z<=U.width-K&&ie>=0&&ie<=U.height-re&&z.readPixels(Z,ie,K,re,wt.convert(dt),wt.convert(Je),Ie)}finally{const et=I!==null?Pe.get(I).__webglFramebuffer:null;ue.bindFramebuffer(z.FRAMEBUFFER,et)}}},this.copyFramebufferToTexture=function(U,Z,ie=0){const K=Math.pow(2,-ie),re=Math.floor(Z.image.width*K),Ie=Math.floor(Z.image.height*K);Ne.setTexture2D(Z,0),z.copyTexSubImage2D(z.TEXTURE_2D,ie,0,0,U.x,U.y,re,Ie),ue.unbindTexture()},this.copyTextureToTexture=function(U,Z,ie,K=0){const re=Z.image.width,Ie=Z.image.height,qe=wt.convert(ie.format),$e=wt.convert(ie.type);Ne.setTexture2D(ie,0),z.pixelStorei(z.UNPACK_FLIP_Y_WEBGL,ie.flipY),z.pixelStorei(z.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ie.premultiplyAlpha),z.pixelStorei(z.UNPACK_ALIGNMENT,ie.unpackAlignment),Z.isDataTexture?z.texSubImage2D(z.TEXTURE_2D,K,U.x,U.y,re,Ie,qe,$e,Z.image.data):Z.isCompressedTexture?z.compressedTexSubImage2D(z.TEXTURE_2D,K,U.x,U.y,Z.mipmaps[0].width,Z.mipmaps[0].height,qe,Z.mipmaps[0].data):z.texSubImage2D(z.TEXTURE_2D,K,U.x,U.y,qe,$e,Z.image),K===0&&ie.generateMipmaps&&z.generateMipmap(z.TEXTURE_2D),ue.unbindTexture()},this.copyTextureToTexture3D=function(U,Z,ie,K,re=0){if(M.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Ie=U.max.x-U.min.x+1,qe=U.max.y-U.min.y+1,$e=U.max.z-U.min.z+1,et=wt.convert(K.format),dt=wt.convert(K.type);let Je;if(K.isData3DTexture)Ne.setTexture3D(K,0),Je=z.TEXTURE_3D;else if(K.isDataArrayTexture)Ne.setTexture2DArray(K,0),Je=z.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}z.pixelStorei(z.UNPACK_FLIP_Y_WEBGL,K.flipY),z.pixelStorei(z.UNPACK_PREMULTIPLY_ALPHA_WEBGL,K.premultiplyAlpha),z.pixelStorei(z.UNPACK_ALIGNMENT,K.unpackAlignment);const nt=z.getParameter(z.UNPACK_ROW_LENGTH),Ut=z.getParameter(z.UNPACK_IMAGE_HEIGHT),Ot=z.getParameter(z.UNPACK_SKIP_PIXELS),Un=z.getParameter(z.UNPACK_SKIP_ROWS),Wn=z.getParameter(z.UNPACK_SKIP_IMAGES),Pt=ie.isCompressedTexture?ie.mipmaps[0]:ie.image;z.pixelStorei(z.UNPACK_ROW_LENGTH,Pt.width),z.pixelStorei(z.UNPACK_IMAGE_HEIGHT,Pt.height),z.pixelStorei(z.UNPACK_SKIP_PIXELS,U.min.x),z.pixelStorei(z.UNPACK_SKIP_ROWS,U.min.y),z.pixelStorei(z.UNPACK_SKIP_IMAGES,U.min.z),ie.isDataTexture||ie.isData3DTexture?z.texSubImage3D(Je,re,Z.x,Z.y,Z.z,Ie,qe,$e,et,dt,Pt.data):ie.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),z.compressedTexSubImage3D(Je,re,Z.x,Z.y,Z.z,Ie,qe,$e,et,Pt.data)):z.texSubImage3D(Je,re,Z.x,Z.y,Z.z,Ie,qe,$e,et,dt,Pt),z.pixelStorei(z.UNPACK_ROW_LENGTH,nt),z.pixelStorei(z.UNPACK_IMAGE_HEIGHT,Ut),z.pixelStorei(z.UNPACK_SKIP_PIXELS,Ot),z.pixelStorei(z.UNPACK_SKIP_ROWS,Un),z.pixelStorei(z.UNPACK_SKIP_IMAGES,Wn),re===0&&K.generateMipmaps&&z.generateMipmap(Je),ue.unbindTexture()},this.initTexture=function(U){U.isCubeTexture?Ne.setTextureCube(U,0):U.isData3DTexture?Ne.setTexture3D(U,0):U.isDataArrayTexture||U.isCompressedArrayTexture?Ne.setTexture2DArray(U,0):Ne.setTexture2D(U,0),ue.unbindTexture()},this.resetState=function(){R=0,P=0,I=null,ue.reset(),rt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Pi}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===Wc?"display-p3":"srgb",t.unpackColorSpace=bt.workingColorSpace===bo?"display-p3":"srgb"}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===rn?wr:md}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===wr?rn:Di}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class C_ extends wd{}C_.prototype.isWebGL1Renderer=!0;class Zc{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new De(e),this.density=t}clone(){return new Zc(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class Jc{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new De(e),this.near=t,this.far=n}clone(){return new Jc(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Td extends Et{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}}class Kc{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=mo,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Qn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Qn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Qn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Cn=new D;class cs{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Cn.fromBufferAttribute(this,t),Cn.applyMatrix4(e),this.setXYZ(t,Cn.x,Cn.y,Cn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Cn.fromBufferAttribute(this,t),Cn.applyNormalMatrix(e),this.setXYZ(t,Cn.x,Cn.y,Cn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Cn.fromBufferAttribute(this,t),Cn.transformDirection(e),this.setXYZ(t,Cn.x,Cn.y,Cn.z);return this}setX(e,t){return this.normalized&&(t=ut(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=ut(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=ut(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=ut(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=kn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=kn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=kn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=kn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array),i=ut(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array),i=ut(i,this.array),s=ut(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new It(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new cs(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Ad extends An{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new De(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Xs;const Va=new D,qs=new D,Ys=new D,Zs=new ce,Ga=new ce,P_=new lt,tc=new D,Wa=new D,nc=new D,lg=new ce,Gh=new ce,cg=new ce;class L_ extends Et{constructor(e=new Ad){if(super(),this.isSprite=!0,this.type="Sprite",Xs===void 0){Xs=new mt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Kc(t,5);Xs.setIndex([0,1,2,0,2,3]),Xs.setAttribute("position",new cs(n,3,0,!1)),Xs.setAttribute("uv",new cs(n,2,3,!1))}this.geometry=Xs,this.material=e,this.center=new ce(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),qs.setFromMatrixScale(this.matrixWorld),P_.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Ys.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&qs.multiplyScalar(-Ys.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const l=this.center;ic(tc.set(-.5,-.5,0),Ys,l,qs,i,s),ic(Wa.set(.5,-.5,0),Ys,l,qs,i,s),ic(nc.set(.5,.5,0),Ys,l,qs,i,s),lg.set(0,0),Gh.set(1,0),cg.set(1,1);let c=e.ray.intersectTriangle(tc,Wa,nc,!1,Va);if(c===null&&(ic(Wa.set(-.5,.5,0),Ys,l,qs,i,s),Gh.set(0,1),c=e.ray.intersectTriangle(tc,nc,Wa,!1,Va),c===null))return;const u=e.ray.origin.distanceTo(Va);u<e.near||u>e.far||t.push({distance:u,point:Va.clone(),uv:Bn.getInterpolation(Va,tc,Wa,nc,lg,Gh,cg,new ce),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function ic(r,e,t,n,i,s){Zs.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(Ga.x=s*Zs.x-i*Zs.y,Ga.y=i*Zs.x+s*Zs.y):Ga.copy(Zs),r.copy(e),r.x+=Ga.x,r.y+=Ga.y,r.applyMatrix4(P_)}const rc=new D,ug=new D;class I_ extends Et{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let s;for(s=0;s<i.length&&!(t<i[s].distance);s++);return i.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){rc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(rc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){rc.setFromMatrixPosition(e.matrixWorld),ug.setFromMatrixPosition(this.matrixWorld);const n=rc.distanceTo(ug)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s;i++){let l=t[i].distance;if(t[i].object.visible&&(l-=l*t[i].hysteresis),n>=l)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const l=n[i];t.object.levels.push({object:l.object.uuid,distance:l.distance,hysteresis:l.hysteresis})}return t}}const hg=new D,fg=new Rt,dg=new Rt,Rw=new D,pg=new lt,Js=new D,Wh=new _i,mg=new lt,Xh=new pa;class U_ extends gn{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new lt,this.bindMatrixInverse=new lt,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Oi),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)Js.fromBufferAttribute(t,n),this.applyBoneTransform(n,Js),this.boundingBox.expandByPoint(Js)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new _i),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)Js.fromBufferAttribute(t,n),this.applyBoneTransform(n,Js),this.boundingSphere.expandByPoint(Js)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Wh.copy(this.boundingSphere),Wh.applyMatrix4(i),e.ray.intersectsSphere(Wh)!==!1&&(mg.copy(i).invert(),Xh.copy(e.ray).applyMatrix4(mg),!(this.boundingBox!==null&&Xh.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Xh)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Rt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;fg.fromBufferAttribute(i.attributes.skinIndex,e),dg.fromBufferAttribute(i.attributes.skinWeight,e),hg.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const l=dg.getComponent(s);if(l!==0){const c=fg.getComponent(s);pg.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(Rw.copy(hg).applyMatrix4(pg),l)}}return t.applyMatrix4(this.bindMatrixInverse)}boneTransform(e,t){return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."),this.applyBoneTransform(e,t)}}class bd extends Et{constructor(){super(),this.isBone=!0,this.type="Bone"}}class oa extends Kt{constructor(e=null,t=1,n=1,i,s,l,c,u,h=Zt,d=Zt,p,m){super(null,l,c,u,h,d,i,s,p,m),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const gg=new lt,Cw=new lt;class jc{constructor(e=[],t=[]){this.uuid=Qn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new lt)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new lt;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,l=e.length;s<l;s++){const c=e[s]?e[s].matrixWorld:Cw;gg.multiplyMatrices(c,t[s]),gg.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new jc(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=f_(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new oa(t,e,e,zn,Ci);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let l=t[s];l===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),l=new bd),this.bones.push(l),this.boneInverses.push(new lt().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const l=t[i];e.bones.push(l.uuid);const c=n[i];e.boneInverses.push(c.toArray())}return e}}class ha extends It{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Ks=new lt,_g=new lt,sc=[],vg=new Oi,Pw=new lt,Xa=new gn,qa=new _i;class D_ extends gn{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new ha(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,Pw)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Oi),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Ks),vg.copy(e.boundingBox).applyMatrix4(Ks),this.boundingBox.union(vg)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new _i),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Ks),qa.copy(e.boundingSphere).applyMatrix4(Ks),this.boundingSphere.union(qa)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(Xa.geometry=this.geometry,Xa.material=this.material,Xa.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),qa.copy(this.boundingSphere),qa.applyMatrix4(n),e.ray.intersectsSphere(qa)!==!1))for(let s=0;s<i;s++){this.getMatrixAt(s,Ks),_g.multiplyMatrices(n,Ks),Xa.matrixWorld=_g,Xa.raycast(e,sc);for(let l=0,c=sc.length;l<c;l++){const u=sc[l];u.instanceId=s,u.object=this,t.push(u)}sc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new ha(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class In extends An{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new De(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const yg=new D,xg=new D,Sg=new lt,qh=new pa,ac=new _i;class br extends Et{constructor(e=new mt,t=new In){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)yg.fromBufferAttribute(t,i-1),xg.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=yg.distanceTo(xg);e.setAttribute("lineDistance",new Fe(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),ac.copy(n.boundingSphere),ac.applyMatrix4(i),ac.radius+=s,e.ray.intersectsSphere(ac)===!1)return;Sg.copy(i).invert(),qh.copy(e.ray).applyMatrix4(Sg);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=new D,d=new D,p=new D,m=new D,_=this.isLineSegments?2:1,y=n.index,x=n.attributes.position;if(y!==null){const v=Math.max(0,l.start),w=Math.min(y.count,l.start+l.count);for(let M=v,A=w-1;M<A;M+=_){const R=y.getX(M),P=y.getX(M+1);if(h.fromBufferAttribute(x,R),d.fromBufferAttribute(x,P),qh.distanceSqToSegment(h,d,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const F=e.ray.origin.distanceTo(m);F<e.near||F>e.far||t.push({distance:F,point:p.clone().applyMatrix4(this.matrixWorld),index:M,face:null,faceIndex:null,object:this})}}else{const v=Math.max(0,l.start),w=Math.min(x.count,l.start+l.count);for(let M=v,A=w-1;M<A;M+=_){if(h.fromBufferAttribute(x,M),d.fromBufferAttribute(x,M+1),qh.distanceSqToSegment(h,d,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const P=e.ray.origin.distanceTo(m);P<e.near||P>e.far||t.push({distance:P,point:p.clone().applyMatrix4(this.matrixWorld),index:M,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}const Mg=new D,Eg=new D;class Fi extends br{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)Mg.fromBufferAttribute(t,i),Eg.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Mg.distanceTo(Eg);e.setAttribute("lineDistance",new Fe(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class N_ extends br{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Rd extends An{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new De(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const wg=new lt,Kf=new pa,oc=new _i,lc=new D;class O_ extends Et{constructor(e=new mt,t=new Rd){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),oc.copy(n.boundingSphere),oc.applyMatrix4(i),oc.radius+=s,e.ray.intersectsSphere(oc)===!1)return;wg.copy(i).invert(),Kf.copy(e.ray).applyMatrix4(wg);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=n.index,p=n.attributes.position;if(h!==null){const m=Math.max(0,l.start),_=Math.min(h.count,l.start+l.count);for(let y=m,E=_;y<E;y++){const x=h.getX(y);lc.fromBufferAttribute(p,x),Tg(lc,x,u,i,e,t,this)}}else{const m=Math.max(0,l.start),_=Math.min(p.count,l.start+l.count);for(let y=m,E=_;y<E;y++)lc.fromBufferAttribute(p,y),Tg(lc,y,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function Tg(r,e,t,n,i,s,l){const c=Kf.distanceSqToPoint(r);if(c<t){const u=new D;Kf.closestPointToPoint(r,u),u.applyMatrix4(n);const h=i.ray.origin.distanceTo(u);if(h<i.near||h>i.far)return;s.push({distance:h,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,object:l})}}class Lw extends Kt{constructor(e,t,n,i,s,l,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isVideoTexture=!0,this.minFilter=l!==void 0?l:Jt,this.magFilter=s!==void 0?s:Jt,this.generateMipmaps=!1;const d=this;function p(){d.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class Iw extends Kt{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Zt,this.minFilter=Zt,this.generateMipmaps=!1,this.needsUpdate=!0}}class Qc extends Kt{constructor(e,t,n,i,s,l,c,u,h,d,p,m){super(null,l,c,u,h,d,i,s,p,m),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class Uw extends Qc{constructor(e,t,n,i,s,l){super(e,t,n,s,l),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Tn}}class Dw extends Qc{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,tr),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class Nw extends Kt{constructor(e,t,n,i,s,l,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class vi{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let l=1;l<=e;l++)n=this.getPoint(l/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let l;t?l=t:l=e*n[s-1];let c=0,u=s-1,h;for(;c<=u;)if(i=Math.floor(c+(u-c)/2),h=n[i]-l,h<0)c=i+1;else if(h>0)u=i-1;else{u=i;break}if(i=u,n[i]===l)return i/(s-1);const d=n[i],m=n[i+1]-d,_=(l-d)/m;return(i+_)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const l=this.getPoint(i),c=this.getPoint(s),u=t||(l.isVector2?new ce:new D);return u.copy(c).sub(l).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new D,i=[],s=[],l=[],c=new D,u=new lt;for(let _=0;_<=e;_++){const y=_/e;i[_]=this.getTangentAt(y,new D)}s[0]=new D,l[0]=new D;let h=Number.MAX_VALUE;const d=Math.abs(i[0].x),p=Math.abs(i[0].y),m=Math.abs(i[0].z);d<=h&&(h=d,n.set(1,0,0)),p<=h&&(h=p,n.set(0,1,0)),m<=h&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],c),l[0].crossVectors(i[0],s[0]);for(let _=1;_<=e;_++){if(s[_]=s[_-1].clone(),l[_]=l[_-1].clone(),c.crossVectors(i[_-1],i[_]),c.length()>Number.EPSILON){c.normalize();const y=Math.acos(Xt(i[_-1].dot(i[_]),-1,1));s[_].applyMatrix4(u.makeRotationAxis(c,y))}l[_].crossVectors(i[_],s[_])}if(t===!0){let _=Math.acos(Xt(s[0].dot(s[e]),-1,1));_/=e,i[0].dot(c.crossVectors(s[0],s[e]))>0&&(_=-_);for(let y=1;y<=e;y++)s[y].applyMatrix4(u.makeRotationAxis(i[y],_*y)),l[y].crossVectors(i[y],s[y])}return{tangents:i,normals:s,binormals:l}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class $c extends vi{constructor(e=0,t=0,n=1,i=1,s=0,l=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=l,this.aClockwise=c,this.aRotation=u}getPoint(e,t){const n=t||new ce,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const l=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(l?s=0:s=i),this.aClockwise===!0&&!l&&(s===i?s=-i:s=s-i);const c=this.aStartAngle+e*s;let u=this.aX+this.xRadius*Math.cos(c),h=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const d=Math.cos(this.aRotation),p=Math.sin(this.aRotation),m=u-this.aX,_=h-this.aY;u=m*d-_*p+this.aX,h=m*p+_*d+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class F_ extends $c{constructor(e,t,n,i,s,l){super(e,t,n,n,i,s,l),this.isArcCurve=!0,this.type="ArcCurve"}}function Cd(){let r=0,e=0,t=0,n=0;function i(s,l,c,u){r=s,e=c,t=-3*s+3*l-2*c-u,n=2*s-2*l+c+u}return{initCatmullRom:function(s,l,c,u,h){i(l,c,h*(c-s),h*(u-l))},initNonuniformCatmullRom:function(s,l,c,u,h,d,p){let m=(l-s)/h-(c-s)/(h+d)+(c-l)/d,_=(c-l)/d-(u-l)/(d+p)+(u-c)/p;m*=d,_*=d,i(l,c,m,_)},calc:function(s){const l=s*s,c=l*s;return r+e*s+t*l+n*c}}}const cc=new D,Yh=new Cd,Zh=new Cd,Jh=new Cd;class B_ extends vi{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new D){const n=t,i=this.points,s=i.length,l=(s-(this.closed?0:1))*e;let c=Math.floor(l),u=l-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/s)+1)*s:u===0&&c===s-1&&(c=s-2,u=1);let h,d;this.closed||c>0?h=i[(c-1)%s]:(cc.subVectors(i[0],i[1]).add(i[0]),h=cc);const p=i[c%s],m=i[(c+1)%s];if(this.closed||c+2<s?d=i[(c+2)%s]:(cc.subVectors(i[s-1],i[s-2]).add(i[s-1]),d=cc),this.curveType==="centripetal"||this.curveType==="chordal"){const _=this.curveType==="chordal"?.5:.25;let y=Math.pow(h.distanceToSquared(p),_),E=Math.pow(p.distanceToSquared(m),_),x=Math.pow(m.distanceToSquared(d),_);E<1e-4&&(E=1),y<1e-4&&(y=E),x<1e-4&&(x=E),Yh.initNonuniformCatmullRom(h.x,p.x,m.x,d.x,y,E,x),Zh.initNonuniformCatmullRom(h.y,p.y,m.y,d.y,y,E,x),Jh.initNonuniformCatmullRom(h.z,p.z,m.z,d.z,y,E,x)}else this.curveType==="catmullrom"&&(Yh.initCatmullRom(h.x,p.x,m.x,d.x,this.tension),Zh.initCatmullRom(h.y,p.y,m.y,d.y,this.tension),Jh.initCatmullRom(h.z,p.z,m.z,d.z,this.tension));return n.set(Yh.calc(u),Zh.calc(u),Jh.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new D().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Ag(r,e,t,n,i){const s=(n-e)*.5,l=(i-t)*.5,c=r*r,u=r*c;return(2*t-2*n+s+l)*u+(-3*t+3*n-2*s-l)*c+s*r+t}function Ow(r,e){const t=1-r;return t*t*e}function Fw(r,e){return 2*(1-r)*r*e}function Bw(r,e){return r*r*e}function no(r,e,t,n){return Ow(r,e)+Fw(r,t)+Bw(r,n)}function zw(r,e){const t=1-r;return t*t*t*e}function kw(r,e){const t=1-r;return 3*t*t*r*e}function Hw(r,e){return 3*(1-r)*r*r*e}function Vw(r,e){return r*r*r*e}function io(r,e,t,n,i){return zw(r,e)+kw(r,t)+Hw(r,n)+Vw(r,i)}class Pd extends vi{constructor(e=new ce,t=new ce,n=new ce,i=new ce){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new ce){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(io(e,i.x,s.x,l.x,c.x),io(e,i.y,s.y,l.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class z_ extends vi{constructor(e=new D,t=new D,n=new D,i=new D){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new D){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(io(e,i.x,s.x,l.x,c.x),io(e,i.y,s.y,l.y,c.y),io(e,i.z,s.z,l.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Ld extends vi{constructor(e=new ce,t=new ce){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ce){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new ce){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class k_ extends vi{constructor(e=new D,t=new D){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new D){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new D){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Id extends vi{constructor(e=new ce,t=new ce,n=new ce){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ce){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(no(e,i.x,s.x,l.x),no(e,i.y,s.y,l.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Ud extends vi{constructor(e=new D,t=new D,n=new D){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new D){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(no(e,i.x,s.x,l.x),no(e,i.y,s.y,l.y),no(e,i.z,s.z,l.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Dd extends vi{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new ce){const n=t,i=this.points,s=(i.length-1)*e,l=Math.floor(s),c=s-l,u=i[l===0?l:l-1],h=i[l],d=i[l>i.length-2?i.length-1:l+1],p=i[l>i.length-3?i.length-1:l+2];return n.set(Ag(c,u.x,h.x,d.x,p.x),Ag(c,u.y,h.y,d.y,p.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new ce().fromArray(i))}return this}}var Fc=Object.freeze({__proto__:null,ArcCurve:F_,CatmullRomCurve3:B_,CubicBezierCurve:Pd,CubicBezierCurve3:z_,EllipseCurve:$c,LineCurve:Ld,LineCurve3:k_,QuadraticBezierCurve:Id,QuadraticBezierCurve3:Ud,SplineCurve:Dd});class H_ extends vi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Fc[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const l=i[s]-n,c=this.curves[s],u=c.getLength(),h=u===0?0:1-l/u;return c.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const l=s[i],c=l.isEllipseCurve?e*2:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?e*l.points.length:e,u=l.getPoints(c);for(let h=0;h<u.length;h++){const d=u[h];n&&n.equals(d)||(t.push(d),n=d)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Fc[i.type]().fromJSON(i))}return this}}class vo extends H_{constructor(e){super(),this.type="Path",this.currentPoint=new ce,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Ld(this.currentPoint.clone(),new ce(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new Id(this.currentPoint.clone(),new ce(e,t),new ce(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,l){const c=new Pd(this.currentPoint.clone(),new ce(e,t),new ce(n,i),new ce(s,l));return this.curves.push(c),this.currentPoint.set(s,l),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Dd(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,n,i,s,l),this}absarc(e,t,n,i,s,l){return this.absellipse(e,t,n,n,i,s,l),this}ellipse(e,t,n,i,s,l,c,u){const h=this.currentPoint.x,d=this.currentPoint.y;return this.absellipse(e+h,t+d,n,i,s,l,c,u),this}absellipse(e,t,n,i,s,l,c,u){const h=new $c(e,t,n,i,s,l,c,u);if(this.curves.length>0){const p=h.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(h);const d=h.getPoint(1);return this.currentPoint.copy(d),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Uo extends mt{constructor(e=[new ce(0,-.5),new ce(.5,0),new ce(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=Xt(i,0,Math.PI*2);const s=[],l=[],c=[],u=[],h=[],d=1/t,p=new D,m=new ce,_=new D,y=new D,E=new D;let x=0,v=0;for(let w=0;w<=e.length-1;w++)switch(w){case 0:x=e[w+1].x-e[w].x,v=e[w+1].y-e[w].y,_.x=v*1,_.y=-x,_.z=v*0,E.copy(_),_.normalize(),u.push(_.x,_.y,_.z);break;case e.length-1:u.push(E.x,E.y,E.z);break;default:x=e[w+1].x-e[w].x,v=e[w+1].y-e[w].y,_.x=v*1,_.y=-x,_.z=v*0,y.copy(_),_.x+=E.x,_.y+=E.y,_.z+=E.z,_.normalize(),u.push(_.x,_.y,_.z),E.copy(y)}for(let w=0;w<=t;w++){const M=n+w*d*i,A=Math.sin(M),R=Math.cos(M);for(let P=0;P<=e.length-1;P++){p.x=e[P].x*A,p.y=e[P].y,p.z=e[P].x*R,l.push(p.x,p.y,p.z),m.x=w/t,m.y=P/(e.length-1),c.push(m.x,m.y);const I=u[3*P+0]*A,F=u[3*P+1],b=u[3*P+0]*R;h.push(I,F,b)}}for(let w=0;w<t;w++)for(let M=0;M<e.length-1;M++){const A=M+w*e.length,R=A,P=A+e.length,I=A+e.length+1,F=A+1;s.push(R,P,F),s.push(I,F,P)}this.setIndex(s),this.setAttribute("position",new Fe(l,3)),this.setAttribute("uv",new Fe(c,2)),this.setAttribute("normal",new Fe(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Uo(e.points,e.segments,e.phiStart,e.phiLength)}}class eu extends Uo{constructor(e=1,t=1,n=4,i=8){const s=new vo;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new eu(e.radius,e.length,e.capSegments,e.radialSegments)}}class tu extends mt{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],l=[],c=[],u=[],h=new D,d=new ce;l.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let p=0,m=3;p<=t;p++,m+=3){const _=n+p/t*i;h.x=e*Math.cos(_),h.y=e*Math.sin(_),l.push(h.x,h.y,h.z),c.push(0,0,1),d.x=(l[m]/e+1)/2,d.y=(l[m+1]/e+1)/2,u.push(d.x,d.y)}for(let p=1;p<=t;p++)s.push(p,p+1,0);this.setIndex(s),this.setAttribute("position",new Fe(l,3)),this.setAttribute("normal",new Fe(c,3)),this.setAttribute("uv",new Fe(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new tu(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class ga extends mt{constructor(e=1,t=1,n=1,i=32,s=1,l=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:l,thetaStart:c,thetaLength:u};const h=this;i=Math.floor(i),s=Math.floor(s);const d=[],p=[],m=[],_=[];let y=0;const E=[],x=n/2;let v=0;w(),l===!1&&(e>0&&M(!0),t>0&&M(!1)),this.setIndex(d),this.setAttribute("position",new Fe(p,3)),this.setAttribute("normal",new Fe(m,3)),this.setAttribute("uv",new Fe(_,2));function w(){const A=new D,R=new D;let P=0;const I=(t-e)/n;for(let F=0;F<=s;F++){const b=[],L=F/s,H=L*(t-e)+e;for(let ee=0;ee<=i;ee++){const oe=ee/i,V=oe*u+c,$=Math.sin(V),ae=Math.cos(V);R.x=H*$,R.y=-L*n+x,R.z=H*ae,p.push(R.x,R.y,R.z),A.set($,I,ae).normalize(),m.push(A.x,A.y,A.z),_.push(oe,1-L),b.push(y++)}E.push(b)}for(let F=0;F<i;F++)for(let b=0;b<s;b++){const L=E[b][F],H=E[b+1][F],ee=E[b+1][F+1],oe=E[b][F+1];d.push(L,H,oe),d.push(H,ee,oe),P+=6}h.addGroup(v,P,0),v+=P}function M(A){const R=y,P=new ce,I=new D;let F=0;const b=A===!0?e:t,L=A===!0?1:-1;for(let ee=1;ee<=i;ee++)p.push(0,x*L,0),m.push(0,L,0),_.push(.5,.5),y++;const H=y;for(let ee=0;ee<=i;ee++){const V=ee/i*u+c,$=Math.cos(V),ae=Math.sin(V);I.x=b*ae,I.y=x*L,I.z=b*$,p.push(I.x,I.y,I.z),m.push(0,L,0),P.x=$*.5+.5,P.y=ae*.5*L+.5,_.push(P.x,P.y),y++}for(let ee=0;ee<i;ee++){const oe=R+ee,V=H+ee;A===!0?d.push(V,V+1,oe):d.push(V+1,V,oe),F+=3}h.addGroup(v,F,A===!0?1:2),v+=F}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ga(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class nu extends ga{constructor(e=1,t=1,n=32,i=1,s=!1,l=0,c=Math.PI*2){super(0,e,t,n,i,s,l,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:l,thetaLength:c}}static fromJSON(e){return new nu(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Pr extends mt{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],l=[];c(i),h(n),d(),this.setAttribute("position",new Fe(s,3)),this.setAttribute("normal",new Fe(s.slice(),3)),this.setAttribute("uv",new Fe(l,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(w){const M=new D,A=new D,R=new D;for(let P=0;P<t.length;P+=3)_(t[P+0],M),_(t[P+1],A),_(t[P+2],R),u(M,A,R,w)}function u(w,M,A,R){const P=R+1,I=[];for(let F=0;F<=P;F++){I[F]=[];const b=w.clone().lerp(A,F/P),L=M.clone().lerp(A,F/P),H=P-F;for(let ee=0;ee<=H;ee++)ee===0&&F===P?I[F][ee]=b:I[F][ee]=b.clone().lerp(L,ee/H)}for(let F=0;F<P;F++)for(let b=0;b<2*(P-F)-1;b++){const L=Math.floor(b/2);b%2===0?(m(I[F][L+1]),m(I[F+1][L]),m(I[F][L])):(m(I[F][L+1]),m(I[F+1][L+1]),m(I[F+1][L]))}}function h(w){const M=new D;for(let A=0;A<s.length;A+=3)M.x=s[A+0],M.y=s[A+1],M.z=s[A+2],M.normalize().multiplyScalar(w),s[A+0]=M.x,s[A+1]=M.y,s[A+2]=M.z}function d(){const w=new D;for(let M=0;M<s.length;M+=3){w.x=s[M+0],w.y=s[M+1],w.z=s[M+2];const A=x(w)/2/Math.PI+.5,R=v(w)/Math.PI+.5;l.push(A,1-R)}y(),p()}function p(){for(let w=0;w<l.length;w+=6){const M=l[w+0],A=l[w+2],R=l[w+4],P=Math.max(M,A,R),I=Math.min(M,A,R);P>.9&&I<.1&&(M<.2&&(l[w+0]+=1),A<.2&&(l[w+2]+=1),R<.2&&(l[w+4]+=1))}}function m(w){s.push(w.x,w.y,w.z)}function _(w,M){const A=w*3;M.x=e[A+0],M.y=e[A+1],M.z=e[A+2]}function y(){const w=new D,M=new D,A=new D,R=new D,P=new ce,I=new ce,F=new ce;for(let b=0,L=0;b<s.length;b+=9,L+=6){w.set(s[b+0],s[b+1],s[b+2]),M.set(s[b+3],s[b+4],s[b+5]),A.set(s[b+6],s[b+7],s[b+8]),P.set(l[L+0],l[L+1]),I.set(l[L+2],l[L+3]),F.set(l[L+4],l[L+5]),R.copy(w).add(M).add(A).divideScalar(3);const H=x(R);E(P,L+0,w,H),E(I,L+2,M,H),E(F,L+4,A,H)}}function E(w,M,A,R){R<0&&w.x===1&&(l[M]=w.x-1),A.x===0&&A.z===0&&(l[M]=R/2/Math.PI+.5)}function x(w){return Math.atan2(w.z,-w.x)}function v(w){return Math.atan2(-w.y,Math.sqrt(w.x*w.x+w.z*w.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Pr(e.vertices,e.indices,e.radius,e.details)}}class iu extends Pr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],l=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,l,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new iu(e.radius,e.detail)}}const uc=new D,hc=new D,Kh=new D,fc=new Bn;class V_ extends mt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(ss*t),l=e.getIndex(),c=e.getAttribute("position"),u=l?l.count:c.count,h=[0,0,0],d=["a","b","c"],p=new Array(3),m={},_=[];for(let y=0;y<u;y+=3){l?(h[0]=l.getX(y),h[1]=l.getX(y+1),h[2]=l.getX(y+2)):(h[0]=y,h[1]=y+1,h[2]=y+2);const{a:E,b:x,c:v}=fc;if(E.fromBufferAttribute(c,h[0]),x.fromBufferAttribute(c,h[1]),v.fromBufferAttribute(c,h[2]),fc.getNormal(Kh),p[0]=`${Math.round(E.x*i)},${Math.round(E.y*i)},${Math.round(E.z*i)}`,p[1]=`${Math.round(x.x*i)},${Math.round(x.y*i)},${Math.round(x.z*i)}`,p[2]=`${Math.round(v.x*i)},${Math.round(v.y*i)},${Math.round(v.z*i)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let w=0;w<3;w++){const M=(w+1)%3,A=p[w],R=p[M],P=fc[d[w]],I=fc[d[M]],F=`${A}_${R}`,b=`${R}_${A}`;b in m&&m[b]?(Kh.dot(m[b].normal)<=s&&(_.push(P.x,P.y,P.z),_.push(I.x,I.y,I.z)),m[b]=null):F in m||(m[F]={index0:h[w],index1:h[M],normal:Kh.clone()})}}for(const y in m)if(m[y]){const{index0:E,index1:x}=m[y];uc.fromBufferAttribute(c,E),hc.fromBufferAttribute(c,x),_.push(uc.x,uc.y,uc.z),_.push(hc.x,hc.y,hc.z)}this.setAttribute("position",new Fe(_,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class os extends vo{constructor(e){super(e),this.uuid=Qn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new vo().fromJSON(i))}return this}}const Gw={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=G_(r,0,i,t,!0);const l=[];if(!s||s.next===s.prev)return l;let c,u,h,d,p,m,_;if(n&&(s=Zw(r,e,s,t)),r.length>80*t){c=h=r[0],u=d=r[1];for(let y=t;y<i;y+=t)p=r[y],m=r[y+1],p<c&&(c=p),m<u&&(u=m),p>h&&(h=p),m>d&&(d=m);_=Math.max(h-c,d-u),_=_!==0?32767/_:0}return yo(s,l,t,c,u,_,0),l}};function G_(r,e,t,n,i){let s,l;if(i===sT(r,e,t,n)>0)for(s=e;s<t;s+=n)l=bg(s,r[s],r[s+1],l);else for(s=t-n;s>=e;s-=n)l=bg(s,r[s],r[s+1],l);return l&&ru(l,l.next)&&(So(l),l=l.next),l}function us(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(ru(t,t.next)||kt(t.prev,t,t.next)===0)){if(So(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function yo(r,e,t,n,i,s,l){if(!r)return;!l&&s&&$w(r,n,i,s);let c=r,u,h;for(;r.prev!==r.next;){if(u=r.prev,h=r.next,s?Xw(r,n,i,s):Ww(r)){e.push(u.i/t|0),e.push(r.i/t|0),e.push(h.i/t|0),So(r),r=h.next,c=h.next;continue}if(r=h,r===c){l?l===1?(r=qw(us(r),e,t),yo(r,e,t,n,i,s,2)):l===2&&Yw(r,e,t,n,i,s):yo(us(r),e,t,n,i,s,1);break}}}function Ww(r){const e=r.prev,t=r,n=r.next;if(kt(e,t,n)>=0)return!1;const i=e.x,s=t.x,l=n.x,c=e.y,u=t.y,h=n.y,d=i<s?i<l?i:l:s<l?s:l,p=c<u?c<h?c:h:u<h?u:h,m=i>s?i>l?i:l:s>l?s:l,_=c>u?c>h?c:h:u>h?u:h;let y=n.next;for(;y!==e;){if(y.x>=d&&y.x<=m&&y.y>=p&&y.y<=_&&ra(i,c,s,u,l,h,y.x,y.y)&&kt(y.prev,y,y.next)>=0)return!1;y=y.next}return!0}function Xw(r,e,t,n){const i=r.prev,s=r,l=r.next;if(kt(i,s,l)>=0)return!1;const c=i.x,u=s.x,h=l.x,d=i.y,p=s.y,m=l.y,_=c<u?c<h?c:h:u<h?u:h,y=d<p?d<m?d:m:p<m?p:m,E=c>u?c>h?c:h:u>h?u:h,x=d>p?d>m?d:m:p>m?p:m,v=jf(_,y,e,t,n),w=jf(E,x,e,t,n);let M=r.prevZ,A=r.nextZ;for(;M&&M.z>=v&&A&&A.z<=w;){if(M.x>=_&&M.x<=E&&M.y>=y&&M.y<=x&&M!==i&&M!==l&&ra(c,d,u,p,h,m,M.x,M.y)&&kt(M.prev,M,M.next)>=0||(M=M.prevZ,A.x>=_&&A.x<=E&&A.y>=y&&A.y<=x&&A!==i&&A!==l&&ra(c,d,u,p,h,m,A.x,A.y)&&kt(A.prev,A,A.next)>=0))return!1;A=A.nextZ}for(;M&&M.z>=v;){if(M.x>=_&&M.x<=E&&M.y>=y&&M.y<=x&&M!==i&&M!==l&&ra(c,d,u,p,h,m,M.x,M.y)&&kt(M.prev,M,M.next)>=0)return!1;M=M.prevZ}for(;A&&A.z<=w;){if(A.x>=_&&A.x<=E&&A.y>=y&&A.y<=x&&A!==i&&A!==l&&ra(c,d,u,p,h,m,A.x,A.y)&&kt(A.prev,A,A.next)>=0)return!1;A=A.nextZ}return!0}function qw(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!ru(i,s)&&W_(i,n,n.next,s)&&xo(i,s)&&xo(s,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),So(n),So(n.next),n=r=s),n=n.next}while(n!==r);return us(n)}function Yw(r,e,t,n,i,s){let l=r;do{let c=l.next.next;for(;c!==l.prev;){if(l.i!==c.i&&nT(l,c)){let u=X_(l,c);l=us(l,l.next),u=us(u,u.next),yo(l,e,t,n,i,s,0),yo(u,e,t,n,i,s,0);return}c=c.next}l=l.next}while(l!==r)}function Zw(r,e,t,n){const i=[];let s,l,c,u,h;for(s=0,l=e.length;s<l;s++)c=e[s]*n,u=s<l-1?e[s+1]*n:r.length,h=G_(r,c,u,n,!1),h===h.next&&(h.steiner=!0),i.push(tT(h));for(i.sort(Jw),s=0;s<i.length;s++)t=Kw(i[s],t);return t}function Jw(r,e){return r.x-e.x}function Kw(r,e){const t=jw(r,e);if(!t)return e;const n=X_(t,r);return us(n,n.next),us(t,t.next)}function jw(r,e){let t=e,n=-1/0,i;const s=r.x,l=r.y;do{if(l<=t.y&&l>=t.next.y&&t.next.y!==t.y){const m=t.x+(l-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(m<=s&&m>n&&(n=m,i=t.x<t.next.x?t:t.next,m===s))return i}t=t.next}while(t!==e);if(!i)return null;const c=i,u=i.x,h=i.y;let d=1/0,p;t=i;do s>=t.x&&t.x>=u&&s!==t.x&&ra(l<h?s:n,l,u,h,l<h?n:s,l,t.x,t.y)&&(p=Math.abs(l-t.y)/(s-t.x),xo(t,r)&&(p<d||p===d&&(t.x>i.x||t.x===i.x&&Qw(i,t)))&&(i=t,d=p)),t=t.next;while(t!==c);return i}function Qw(r,e){return kt(r.prev,r,e.prev)<0&&kt(e.next,r,r.next)<0}function $w(r,e,t,n){let i=r;do i.z===0&&(i.z=jf(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,eT(i)}function eT(r){let e,t,n,i,s,l,c,u,h=1;do{for(t=r,r=null,s=null,l=0;t;){for(l++,n=t,c=0,e=0;e<h&&(c++,n=n.nextZ,!!n);e++);for(u=h;c>0||u>0&&n;)c!==0&&(u===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,c--):(i=n,n=n.nextZ,u--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,h*=2}while(l>1);return r}function jf(r,e,t,n,i){return r=(r-t)*i|0,e=(e-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function tT(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function ra(r,e,t,n,i,s,l,c){return(i-l)*(e-c)>=(r-l)*(s-c)&&(r-l)*(n-c)>=(t-l)*(e-c)&&(t-l)*(s-c)>=(i-l)*(n-c)}function nT(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!iT(r,e)&&(xo(r,e)&&xo(e,r)&&rT(r,e)&&(kt(r.prev,r,e.prev)||kt(r,e.prev,e))||ru(r,e)&&kt(r.prev,r,r.next)>0&&kt(e.prev,e,e.next)>0)}function kt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function ru(r,e){return r.x===e.x&&r.y===e.y}function W_(r,e,t,n){const i=pc(kt(r,e,t)),s=pc(kt(r,e,n)),l=pc(kt(t,n,r)),c=pc(kt(t,n,e));return!!(i!==s&&l!==c||i===0&&dc(r,t,e)||s===0&&dc(r,n,e)||l===0&&dc(t,r,n)||c===0&&dc(t,e,n))}function dc(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function pc(r){return r>0?1:r<0?-1:0}function iT(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&W_(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function xo(r,e){return kt(r.prev,r,r.next)<0?kt(r,e,r.next)>=0&&kt(r,r.prev,e)>=0:kt(r,e,r.prev)<0||kt(r,r.next,e)<0}function rT(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function X_(r,e){const t=new Qf(r.i,r.x,r.y),n=new Qf(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function bg(r,e,t,n){const i=new Qf(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function So(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Qf(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function sT(r,e,t,n){let i=0;for(let s=e,l=t-n;s<t;s+=n)i+=(r[l]-r[s])*(r[s+1]+r[l+1]),l=s;return i}class Ui{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return Ui.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];Rg(e),Cg(n,e);let l=e.length;t.forEach(Rg);for(let u=0;u<t.length;u++)i.push(l),l+=t[u].length,Cg(n,t[u]);const c=Gw.triangulate(n,i);for(let u=0;u<c.length;u+=3)s.push(c.slice(u,u+3));return s}}function Rg(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function Cg(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class su extends mt{constructor(e=new os([new ce(.5,.5),new ce(-.5,.5),new ce(-.5,-.5),new ce(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];l(h)}this.setAttribute("position",new Fe(i,3)),this.setAttribute("uv",new Fe(s,2)),this.computeVertexNormals();function l(c){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,d=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let m=t.bevelEnabled!==void 0?t.bevelEnabled:!0,_=t.bevelThickness!==void 0?t.bevelThickness:.2,y=t.bevelSize!==void 0?t.bevelSize:_-.1,E=t.bevelOffset!==void 0?t.bevelOffset:0,x=t.bevelSegments!==void 0?t.bevelSegments:3;const v=t.extrudePath,w=t.UVGenerator!==void 0?t.UVGenerator:aT;let M,A=!1,R,P,I,F;v&&(M=v.getSpacedPoints(d),A=!0,m=!1,R=v.computeFrenetFrames(d,!1),P=new D,I=new D,F=new D),m||(x=0,_=0,y=0,E=0);const b=c.extractPoints(h);let L=b.shape;const H=b.holes;if(!Ui.isClockWise(L)){L=L.reverse();for(let z=0,pe=H.length;z<pe;z++){const le=H[z];Ui.isClockWise(le)&&(H[z]=le.reverse())}}const oe=Ui.triangulateShape(L,H),V=L;for(let z=0,pe=H.length;z<pe;z++){const le=H[z];L=L.concat(le)}function $(z,pe,le){return pe||console.error("THREE.ExtrudeGeometry: vec does not exist"),z.clone().addScaledVector(pe,le)}const ae=L.length,se=oe.length;function q(z,pe,le){let ve,ue,We;const Pe=z.x-pe.x,Ne=z.y-pe.y,Ke=le.x-z.x,gt=le.y-z.y,Ft=Pe*Pe+Ne*Ne,O=Pe*gt-Ne*Ke;if(Math.abs(O)>Number.EPSILON){const C=Math.sqrt(Ft),j=Math.sqrt(Ke*Ke+gt*gt),me=pe.x-Ne/C,de=pe.y+Pe/C,ge=le.x-gt/j,ke=le.y+Ke/j,xe=((ge-me)*gt-(ke-de)*Ke)/(Pe*gt-Ne*Ke);ve=me+Pe*xe-z.x,ue=de+Ne*xe-z.y;const Re=ve*ve+ue*ue;if(Re<=2)return new ce(ve,ue);We=Math.sqrt(Re/2)}else{let C=!1;Pe>Number.EPSILON?Ke>Number.EPSILON&&(C=!0):Pe<-Number.EPSILON?Ke<-Number.EPSILON&&(C=!0):Math.sign(Ne)===Math.sign(gt)&&(C=!0),C?(ve=-Ne,ue=Pe,We=Math.sqrt(Ft)):(ve=Pe,ue=Ne,We=Math.sqrt(Ft/2))}return new ce(ve/We,ue/We)}const X=[];for(let z=0,pe=V.length,le=pe-1,ve=z+1;z<pe;z++,le++,ve++)le===pe&&(le=0),ve===pe&&(ve=0),X[z]=q(V[z],V[le],V[ve]);const Y=[];let k,Q=X.concat();for(let z=0,pe=H.length;z<pe;z++){const le=H[z];k=[];for(let ve=0,ue=le.length,We=ue-1,Pe=ve+1;ve<ue;ve++,We++,Pe++)We===ue&&(We=0),Pe===ue&&(Pe=0),k[ve]=q(le[ve],le[We],le[Pe]);Y.push(k),Q=Q.concat(k)}for(let z=0;z<x;z++){const pe=z/x,le=_*Math.cos(pe*Math.PI/2),ve=y*Math.sin(pe*Math.PI/2)+E;for(let ue=0,We=V.length;ue<We;ue++){const Pe=$(V[ue],X[ue],ve);Be(Pe.x,Pe.y,-le)}for(let ue=0,We=H.length;ue<We;ue++){const Pe=H[ue];k=Y[ue];for(let Ne=0,Ke=Pe.length;Ne<Ke;Ne++){const gt=$(Pe[Ne],k[Ne],ve);Be(gt.x,gt.y,-le)}}}const fe=y+E;for(let z=0;z<ae;z++){const pe=m?$(L[z],Q[z],fe):L[z];A?(I.copy(R.normals[0]).multiplyScalar(pe.x),P.copy(R.binormals[0]).multiplyScalar(pe.y),F.copy(M[0]).add(I).add(P),Be(F.x,F.y,F.z)):Be(pe.x,pe.y,0)}for(let z=1;z<=d;z++)for(let pe=0;pe<ae;pe++){const le=m?$(L[pe],Q[pe],fe):L[pe];A?(I.copy(R.normals[z]).multiplyScalar(le.x),P.copy(R.binormals[z]).multiplyScalar(le.y),F.copy(M[z]).add(I).add(P),Be(F.x,F.y,F.z)):Be(le.x,le.y,p/d*z)}for(let z=x-1;z>=0;z--){const pe=z/x,le=_*Math.cos(pe*Math.PI/2),ve=y*Math.sin(pe*Math.PI/2)+E;for(let ue=0,We=V.length;ue<We;ue++){const Pe=$(V[ue],X[ue],ve);Be(Pe.x,Pe.y,p+le)}for(let ue=0,We=H.length;ue<We;ue++){const Pe=H[ue];k=Y[ue];for(let Ne=0,Ke=Pe.length;Ne<Ke;Ne++){const gt=$(Pe[Ne],k[Ne],ve);A?Be(gt.x,gt.y+M[d-1].y,M[d-1].x+le):Be(gt.x,gt.y,p+le)}}}Me(),Te();function Me(){const z=i.length/3;if(m){let pe=0,le=ae*pe;for(let ve=0;ve<se;ve++){const ue=oe[ve];Xe(ue[2]+le,ue[1]+le,ue[0]+le)}pe=d+x*2,le=ae*pe;for(let ve=0;ve<se;ve++){const ue=oe[ve];Xe(ue[0]+le,ue[1]+le,ue[2]+le)}}else{for(let pe=0;pe<se;pe++){const le=oe[pe];Xe(le[2],le[1],le[0])}for(let pe=0;pe<se;pe++){const le=oe[pe];Xe(le[0]+ae*d,le[1]+ae*d,le[2]+ae*d)}}n.addGroup(z,i.length/3-z,0)}function Te(){const z=i.length/3;let pe=0;Oe(V,pe),pe+=V.length;for(let le=0,ve=H.length;le<ve;le++){const ue=H[le];Oe(ue,pe),pe+=ue.length}n.addGroup(z,i.length/3-z,1)}function Oe(z,pe){let le=z.length;for(;--le>=0;){const ve=le;let ue=le-1;ue<0&&(ue=z.length-1);for(let We=0,Pe=d+x*2;We<Pe;We++){const Ne=ae*We,Ke=ae*(We+1),gt=pe+ve+Ne,Ft=pe+ue+Ne,O=pe+ue+Ke,C=pe+ve+Ke;_t(gt,Ft,O,C)}}}function Be(z,pe,le){u.push(z),u.push(pe),u.push(le)}function Xe(z,pe,le){Tt(z),Tt(pe),Tt(le);const ve=i.length/3,ue=w.generateTopUV(n,i,ve-3,ve-2,ve-1);ze(ue[0]),ze(ue[1]),ze(ue[2])}function _t(z,pe,le,ve){Tt(z),Tt(pe),Tt(ve),Tt(pe),Tt(le),Tt(ve);const ue=i.length/3,We=w.generateSideWallUV(n,i,ue-6,ue-3,ue-2,ue-1);ze(We[0]),ze(We[1]),ze(We[3]),ze(We[1]),ze(We[2]),ze(We[3])}function Tt(z){i.push(u[z*3+0]),i.push(u[z*3+1]),i.push(u[z*3+2])}function ze(z){s.push(z.x),s.push(z.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return oT(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,l=e.shapes.length;s<l;s++){const c=t[e.shapes[s]];n.push(c)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Fc[i.type]().fromJSON(i)),new su(n,e.options)}}const aT={generateTopUV:function(r,e,t,n,i){const s=e[t*3],l=e[t*3+1],c=e[n*3],u=e[n*3+1],h=e[i*3],d=e[i*3+1];return[new ce(s,l),new ce(c,u),new ce(h,d)]},generateSideWallUV:function(r,e,t,n,i,s){const l=e[t*3],c=e[t*3+1],u=e[t*3+2],h=e[n*3],d=e[n*3+1],p=e[n*3+2],m=e[i*3],_=e[i*3+1],y=e[i*3+2],E=e[s*3],x=e[s*3+1],v=e[s*3+2];return Math.abs(c-d)<Math.abs(l-h)?[new ce(l,1-u),new ce(h,1-p),new ce(m,1-y),new ce(E,1-v)]:[new ce(c,1-u),new ce(d,1-p),new ce(_,1-y),new ce(x,1-v)]}};function oT(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class au extends Pr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new au(e.radius,e.detail)}}class Do extends Pr{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Do(e.radius,e.detail)}}class ou extends mt{constructor(e=.5,t=1,n=32,i=1,s=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:l},n=Math.max(3,n),i=Math.max(1,i);const c=[],u=[],h=[],d=[];let p=e;const m=(t-e)/i,_=new D,y=new ce;for(let E=0;E<=i;E++){for(let x=0;x<=n;x++){const v=s+x/n*l;_.x=p*Math.cos(v),_.y=p*Math.sin(v),u.push(_.x,_.y,_.z),h.push(0,0,1),y.x=(_.x/t+1)/2,y.y=(_.y/t+1)/2,d.push(y.x,y.y)}p+=m}for(let E=0;E<i;E++){const x=E*(n+1);for(let v=0;v<n;v++){const w=v+x,M=w,A=w+n+1,R=w+n+2,P=w+1;c.push(M,A,P),c.push(A,R,P)}}this.setIndex(c),this.setAttribute("position",new Fe(u,3)),this.setAttribute("normal",new Fe(h,3)),this.setAttribute("uv",new Fe(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ou(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class lu extends mt{constructor(e=new os([new ce(0,.5),new ce(-.5,-.5),new ce(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],l=[];let c=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let d=0;d<e.length;d++)h(e[d]),this.addGroup(c,u,d),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new Fe(i,3)),this.setAttribute("normal",new Fe(s,3)),this.setAttribute("uv",new Fe(l,2));function h(d){const p=i.length/3,m=d.extractPoints(t);let _=m.shape;const y=m.holes;Ui.isClockWise(_)===!1&&(_=_.reverse());for(let x=0,v=y.length;x<v;x++){const w=y[x];Ui.isClockWise(w)===!0&&(y[x]=w.reverse())}const E=Ui.triangulateShape(_,y);for(let x=0,v=y.length;x<v;x++){const w=y[x];_=_.concat(w)}for(let x=0,v=_.length;x<v;x++){const w=_[x];i.push(w.x,w.y,0),s.push(0,0,1),l.push(w.x,w.y)}for(let x=0,v=E.length;x<v;x++){const w=E[x],M=w[0]+p,A=w[1]+p,R=w[2]+p;n.push(M,A,R),u+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return lT(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const l=t[e.shapes[i]];n.push(l)}return new lu(n,e.curveSegments)}}function lT(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class No extends mt{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:l,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(l+c,Math.PI);let h=0;const d=[],p=new D,m=new D,_=[],y=[],E=[],x=[];for(let v=0;v<=n;v++){const w=[],M=v/n;let A=0;v===0&&l===0?A=.5/t:v===n&&u===Math.PI&&(A=-.5/t);for(let R=0;R<=t;R++){const P=R/t;p.x=-e*Math.cos(i+P*s)*Math.sin(l+M*c),p.y=e*Math.cos(l+M*c),p.z=e*Math.sin(i+P*s)*Math.sin(l+M*c),y.push(p.x,p.y,p.z),m.copy(p).normalize(),E.push(m.x,m.y,m.z),x.push(P+A,1-M),w.push(h++)}d.push(w)}for(let v=0;v<n;v++)for(let w=0;w<t;w++){const M=d[v][w+1],A=d[v][w],R=d[v+1][w],P=d[v+1][w+1];(v!==0||l>0)&&_.push(M,A,P),(v!==n-1||u<Math.PI)&&_.push(A,R,P)}this.setIndex(_),this.setAttribute("position",new Fe(y,3)),this.setAttribute("normal",new Fe(E,3)),this.setAttribute("uv",new Fe(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new No(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class cu extends Pr{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new cu(e.radius,e.detail)}}class uu extends mt{constructor(e=1,t=.4,n=12,i=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const l=[],c=[],u=[],h=[],d=new D,p=new D,m=new D;for(let _=0;_<=n;_++)for(let y=0;y<=i;y++){const E=y/i*s,x=_/n*Math.PI*2;p.x=(e+t*Math.cos(x))*Math.cos(E),p.y=(e+t*Math.cos(x))*Math.sin(E),p.z=t*Math.sin(x),c.push(p.x,p.y,p.z),d.x=e*Math.cos(E),d.y=e*Math.sin(E),m.subVectors(p,d).normalize(),u.push(m.x,m.y,m.z),h.push(y/i),h.push(_/n)}for(let _=1;_<=n;_++)for(let y=1;y<=i;y++){const E=(i+1)*_+y-1,x=(i+1)*(_-1)+y-1,v=(i+1)*(_-1)+y,w=(i+1)*_+y;l.push(E,x,w),l.push(x,v,w)}this.setIndex(l),this.setAttribute("position",new Fe(c,3)),this.setAttribute("normal",new Fe(u,3)),this.setAttribute("uv",new Fe(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new uu(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class hu extends mt{constructor(e=1,t=.4,n=64,i=8,s=2,l=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:l},n=Math.floor(n),i=Math.floor(i);const c=[],u=[],h=[],d=[],p=new D,m=new D,_=new D,y=new D,E=new D,x=new D,v=new D;for(let M=0;M<=n;++M){const A=M/n*s*Math.PI*2;w(A,s,l,e,_),w(A+.01,s,l,e,y),x.subVectors(y,_),v.addVectors(y,_),E.crossVectors(x,v),v.crossVectors(E,x),E.normalize(),v.normalize();for(let R=0;R<=i;++R){const P=R/i*Math.PI*2,I=-t*Math.cos(P),F=t*Math.sin(P);p.x=_.x+(I*v.x+F*E.x),p.y=_.y+(I*v.y+F*E.y),p.z=_.z+(I*v.z+F*E.z),u.push(p.x,p.y,p.z),m.subVectors(p,_).normalize(),h.push(m.x,m.y,m.z),d.push(M/n),d.push(R/i)}}for(let M=1;M<=n;M++)for(let A=1;A<=i;A++){const R=(i+1)*(M-1)+(A-1),P=(i+1)*M+(A-1),I=(i+1)*M+A,F=(i+1)*(M-1)+A;c.push(R,P,F),c.push(P,I,F)}this.setIndex(c),this.setAttribute("position",new Fe(u,3)),this.setAttribute("normal",new Fe(h,3)),this.setAttribute("uv",new Fe(d,2));function w(M,A,R,P,I){const F=Math.cos(M),b=Math.sin(M),L=R/A*M,H=Math.cos(L);I.x=P*(2+H)*.5*F,I.y=P*(2+H)*b*.5,I.z=P*Math.sin(L)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new hu(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class fu extends mt{constructor(e=new Ud(new D(-1,-1,0),new D(-1,1,0),new D(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const l=e.computeFrenetFrames(t,s);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const c=new D,u=new D,h=new ce;let d=new D;const p=[],m=[],_=[],y=[];E(),this.setIndex(y),this.setAttribute("position",new Fe(p,3)),this.setAttribute("normal",new Fe(m,3)),this.setAttribute("uv",new Fe(_,2));function E(){for(let M=0;M<t;M++)x(M);x(s===!1?t:0),w(),v()}function x(M){d=e.getPointAt(M/t,d);const A=l.normals[M],R=l.binormals[M];for(let P=0;P<=i;P++){const I=P/i*Math.PI*2,F=Math.sin(I),b=-Math.cos(I);u.x=b*A.x+F*R.x,u.y=b*A.y+F*R.y,u.z=b*A.z+F*R.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=d.x+n*u.x,c.y=d.y+n*u.y,c.z=d.z+n*u.z,p.push(c.x,c.y,c.z)}}function v(){for(let M=1;M<=t;M++)for(let A=1;A<=i;A++){const R=(i+1)*(M-1)+(A-1),P=(i+1)*M+(A-1),I=(i+1)*M+A,F=(i+1)*(M-1)+A;y.push(R,P,F),y.push(P,I,F)}}function w(){for(let M=0;M<=t;M++)for(let A=0;A<=i;A++)h.x=M/t,h.y=A/i,_.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new fu(new Fc[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class q_ extends mt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new D,s=new D;if(e.index!==null){const l=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,d=u.length;h<d;++h){const p=u[h],m=p.start,_=p.count;for(let y=m,E=m+_;y<E;y+=3)for(let x=0;x<3;x++){const v=c.getX(y+x),w=c.getX(y+(x+1)%3);i.fromBufferAttribute(l,v),s.fromBufferAttribute(l,w),Pg(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const l=e.attributes.position;for(let c=0,u=l.count/3;c<u;c++)for(let h=0;h<3;h++){const d=3*c+h,p=3*c+(h+1)%3;i.fromBufferAttribute(l,d),s.fromBufferAttribute(l,p),Pg(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new Fe(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function Pg(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var Lg=Object.freeze({__proto__:null,BoxGeometry:fs,CapsuleGeometry:eu,CircleGeometry:tu,ConeGeometry:nu,CylinderGeometry:ga,DodecahedronGeometry:iu,EdgesGeometry:V_,ExtrudeGeometry:su,IcosahedronGeometry:au,LatheGeometry:Uo,OctahedronGeometry:Do,PlaneGeometry:Lo,PolyhedronGeometry:Pr,RingGeometry:ou,ShapeGeometry:lu,SphereGeometry:No,TetrahedronGeometry:cu,TorusGeometry:uu,TorusKnotGeometry:hu,TubeGeometry:fu,WireframeGeometry:q_});class Y_ extends An{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new De(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Z_ extends Ni{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Nd extends An{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new De(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new De(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Rr,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class J_ extends Nd{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ce(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Xt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new De(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new De(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new De(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class K_ extends An{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new De(16777215),this.specular=new De(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new De(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Rr,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ao,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class j_ extends An{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new De(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new De(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Rr,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class Q_ extends An{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Rr,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class $_ extends An{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new De(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new De(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Rr,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ao,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class ev extends An{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new De(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Rr,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class tv extends In{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function ns(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function nv(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function iv(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function $f(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,l=0;l!==n;++s){const c=t[s]*e;for(let u=0;u!==e;++u)i[l++]=r[c+u]}return i}function Od(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let l=s[n];if(l!==void 0)if(Array.isArray(l))do l=s[n],l!==void 0&&(e.push(s.time),t.push.apply(t,l)),s=r[i++];while(s!==void 0);else if(l.toArray!==void 0)do l=s[n],l!==void 0&&(e.push(s.time),l.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do l=s[n],l!==void 0&&(e.push(s.time),t.push(l)),s=r[i++];while(s!==void 0)}function cT(r,e,t,n,i=30){const s=r.clone();s.name=e;const l=[];for(let u=0;u<s.tracks.length;++u){const h=s.tracks[u],d=h.getValueSize(),p=[],m=[];for(let _=0;_<h.times.length;++_){const y=h.times[_]*i;if(!(y<t||y>=n)){p.push(h.times[_]);for(let E=0;E<d;++E)m.push(h.values[_*d+E])}}p.length!==0&&(h.times=ns(p,h.times.constructor),h.values=ns(m,h.values.constructor),l.push(h))}s.tracks=l;let c=1/0;for(let u=0;u<s.tracks.length;++u)c>s.tracks[u].times[0]&&(c=s.tracks[u].times[0]);for(let u=0;u<s.tracks.length;++u)s.tracks[u].shift(-1*c);return s.resetDuration(),s}function uT(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let l=0;l<i;++l){const c=t.tracks[l],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const h=r.tracks.find(function(v){return v.name===c.name&&v.ValueTypeName===u});if(h===void 0)continue;let d=0;const p=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=p/3);let m=0;const _=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=_/3);const y=c.times.length-1;let E;if(s<=c.times[0]){const v=d,w=p-d;E=c.values.slice(v,w)}else if(s>=c.times[y]){const v=y*p+d,w=v+p-d;E=c.values.slice(v,w)}else{const v=c.createInterpolant(),w=d,M=p-d;v.evaluate(s),E=v.resultBuffer.slice(w,M)}u==="quaternion"&&new Hn().fromArray(E).normalize().conjugate().toArray(E);const x=h.times.length;for(let v=0;v<x;++v){const w=v*_+m;if(u==="quaternion")Hn.multiplyQuaternionsFlat(h.values,w,E,0,h.values,w);else{const M=_-m*2;for(let A=0;A<M;++A)h.values[w+A]-=E[A]}}}return r.blendMode=pd,r}const hT={convertArray:ns,isTypedArray:nv,getKeyframeOrder:iv,sortedArray:$f,flattenJSON:Od,subclip:cT,makeClipAdditive:uT};class Oo{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let l;n:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(s=i,i=t[++n],e<i)break t}l=t.length;break n}if(!(e>=s)){const c=t[1];e<c&&(n=2,s=c);for(let u=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=s,s=t[--n-1],e>=s)break t}l=n,n=0;break n}break e}for(;n<l;){const c=n+l>>>1;e<t[c]?l=c:n=c+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let l=0;l!==i;++l)t[l]=n[s+l];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class rv extends Oo{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:$r,endingEnd:$r}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,l=e+1,c=i[s],u=i[l];if(c===void 0)switch(this.getSettings_().endingStart){case es:s=e,c=2*t-n;break;case uo:s=i.length-2,c=t+i[s]-i[s+1];break;default:s=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case es:l=e,u=2*n-t;break;case uo:l=1,u=n+i[1]-i[0];break;default:l=e-1,u=t}const h=(n-t)*.5,d=this.valueSize;this._weightPrev=h/(t-c),this._weightNext=h/(u-n),this._offsetPrev=s*d,this._offsetNext=l*d}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,d=this._offsetPrev,p=this._offsetNext,m=this._weightPrev,_=this._weightNext,y=(n-t)/(i-t),E=y*y,x=E*y,v=-m*x+2*m*E-m*y,w=(1+m)*x+(-1.5-2*m)*E+(-.5+m)*y+1,M=(-1-_)*x+(1.5+_)*E+.5*y,A=_*x-_*E;for(let R=0;R!==c;++R)s[R]=v*l[d+R]+w*l[h+R]+M*l[u+R]+A*l[p+R];return s}}class Fd extends Oo{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,d=(n-t)/(i-t),p=1-d;for(let m=0;m!==c;++m)s[m]=l[h+m]*p+l[u+m]*d;return s}}class sv extends Oo{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class yi{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=ns(t,this.TimeBufferType),this.values=ns(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:ns(e.times,Array),values:ns(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new sv(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Fd(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new rv(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case lo:t=this.InterpolantFactoryMethodDiscrete;break;case co:t=this.InterpolantFactoryMethodLinear;break;case Cc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return lo;case this.InterpolantFactoryMethodLinear:return co;case this.InterpolantFactoryMethodSmooth:return Cc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,l=i-1;for(;s!==i&&n[s]<e;)++s;for(;l!==-1&&n[l]>t;)--l;if(++l,s!==0||l!==i){s>=l&&(l=Math.max(l,1),s=l-1);const c=this.getValueSize();this.times=n.slice(s,l),this.values=this.values.slice(s*c,l*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let l=null;for(let c=0;c!==s;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(l!==null&&l>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,l),e=!1;break}l=u}if(i!==void 0&&nv(i))for(let c=0,u=i.length;c!==u;++c){const h=i[c];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,h),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Cc,s=e.length-1;let l=1;for(let c=1;c<s;++c){let u=!1;const h=e[c],d=e[c+1];if(h!==d&&(c!==1||h!==e[0]))if(i)u=!0;else{const p=c*n,m=p-n,_=p+n;for(let y=0;y!==n;++y){const E=t[p+y];if(E!==t[m+y]||E!==t[_+y]){u=!0;break}}}if(u){if(c!==l){e[l]=e[c];const p=c*n,m=l*n;for(let _=0;_!==n;++_)t[m+_]=t[p+_]}++l}}if(s>0){e[l]=e[s];for(let c=s*n,u=l*n,h=0;h!==n;++h)t[u+h]=t[c+h];++l}return l!==e.length?(this.times=e.slice(0,l),this.values=t.slice(0,l*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}yi.prototype.TimeBufferType=Float32Array;yi.prototype.ValueBufferType=Float32Array;yi.prototype.DefaultInterpolation=co;class ds extends yi{}ds.prototype.ValueTypeName="bool";ds.prototype.ValueBufferType=Array;ds.prototype.DefaultInterpolation=lo;ds.prototype.InterpolantFactoryMethodLinear=void 0;ds.prototype.InterpolantFactoryMethodSmooth=void 0;class Bd extends yi{}Bd.prototype.ValueTypeName="color";class Mo extends yi{}Mo.prototype.ValueTypeName="number";class av extends Oo{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=(n-t)/(i-t);let h=e*c;for(let d=h+c;h!==d;h+=4)Hn.slerpFlat(s,0,l,h-c,l,h,u);return s}}class _a extends yi{InterpolantFactoryMethodLinear(e){return new av(this.times,this.values,this.getValueSize(),e)}}_a.prototype.ValueTypeName="quaternion";_a.prototype.DefaultInterpolation=co;_a.prototype.InterpolantFactoryMethodSmooth=void 0;class ps extends yi{}ps.prototype.ValueTypeName="string";ps.prototype.ValueBufferType=Array;ps.prototype.DefaultInterpolation=lo;ps.prototype.InterpolantFactoryMethodLinear=void 0;ps.prototype.InterpolantFactoryMethodSmooth=void 0;class Eo extends yi{}Eo.prototype.ValueTypeName="vector";class wo{constructor(e,t=-1,n,i=Gc){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=Qn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let l=0,c=n.length;l!==c;++l)t.push(dT(n[l]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,l=n.length;s!==l;++s)t.push(yi.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,l=[];for(let c=0;c<s;c++){let u=[],h=[];u.push((c+s-1)%s,c,(c+1)%s),h.push(0,1,0);const d=iv(u);u=$f(u,1,d),h=$f(h,1,d),!i&&u[0]===0&&(u.push(s),h.push(h[0])),l.push(new Mo(".morphTargetInfluences["+t[c].name+"]",u,h).scale(1/n))}return new this(e,-1,l)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const h=e[c],d=h.name.match(s);if(d&&d.length>1){const p=d[1];let m=i[p];m||(i[p]=m=[]),m.push(h)}}const l=[];for(const c in i)l.push(this.CreateFromMorphTargetSequence(c,i[c],t,n));return l}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(p,m,_,y,E){if(_.length!==0){const x=[],v=[];Od(_,x,v,y),x.length!==0&&E.push(new p(m,x,v))}},i=[],s=e.name||"default",l=e.fps||30,c=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let p=0;p<h.length;p++){const m=h[p].keys;if(!(!m||m.length===0))if(m[0].morphTargets){const _={};let y;for(y=0;y<m.length;y++)if(m[y].morphTargets)for(let E=0;E<m[y].morphTargets.length;E++)_[m[y].morphTargets[E]]=-1;for(const E in _){const x=[],v=[];for(let w=0;w!==m[y].morphTargets.length;++w){const M=m[y];x.push(M.time),v.push(M.morphTarget===E?1:0)}i.push(new Mo(".morphTargetInfluence["+E+"]",x,v))}u=_.length*l}else{const _=".bones["+t[p].name+"]";n(Eo,_+".position",m,"pos",i),n(_a,_+".quaternion",m,"rot",i),n(Eo,_+".scale",m,"scl",i)}}return i.length===0?null:new this(s,u,i,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function fT(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Mo;case"vector":case"vector2":case"vector3":case"vector4":return Eo;case"color":return Bd;case"quaternion":return _a;case"bool":case"boolean":return ds;case"string":return ps}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function dT(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=fT(r.type);if(r.times===void 0){const t=[],n=[];Od(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const hs={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class zd{constructor(e,t,n){const i=this;let s=!1,l=0,c=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(d){c++,s===!1&&i.onStart!==void 0&&i.onStart(d,l,c),s=!0},this.itemEnd=function(d){l++,i.onProgress!==void 0&&i.onProgress(d,l,c),l===c&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(d){i.onError!==void 0&&i.onError(d)},this.resolveURL=function(d){return u?u(d):d},this.setURLModifier=function(d){return u=d,this},this.addHandler=function(d,p){return h.push(d,p),this},this.removeHandler=function(d){const p=h.indexOf(d);return p!==-1&&h.splice(p,2),this},this.getHandler=function(d){for(let p=0,m=h.length;p<m;p+=2){const _=h[p],y=h[p+1];if(_.global&&(_.lastIndex=0),_.test(d))return y}return null}}}const ov=new zd;class Vn{constructor(e){this.manager=e!==void 0?e:ov,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Vn.DEFAULT_MATERIAL_NAME="__DEFAULT";const Ki={};class pT extends Error{constructor(e,t){super(e),this.response=t}}class nr extends Vn{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=hs.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(Ki[e]!==void 0){Ki[e].push({onLoad:t,onProgress:n,onError:i});return}Ki[e]=[],Ki[e].push({onLoad:t,onProgress:n,onError:i});const l=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(l).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const d=Ki[e],p=h.body.getReader(),m=h.headers.get("Content-Length")||h.headers.get("X-File-Size"),_=m?parseInt(m):0,y=_!==0;let E=0;const x=new ReadableStream({start(v){w();function w(){p.read().then(({done:M,value:A})=>{if(M)v.close();else{E+=A.byteLength;const R=new ProgressEvent("progress",{lengthComputable:y,loaded:E,total:_});for(let P=0,I=d.length;P<I;P++){const F=d[P];F.onProgress&&F.onProgress(R)}v.enqueue(A),w()}})}}});return new Response(x)}else throw new pT(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(d=>new DOMParser().parseFromString(d,c));case"json":return h.json();default:if(c===void 0)return h.text();{const p=/charset="?([^;"\s]*)"?/i.exec(c),m=p&&p[1]?p[1].toLowerCase():void 0,_=new TextDecoder(m);return h.arrayBuffer().then(y=>_.decode(y))}}}).then(h=>{hs.add(e,h);const d=Ki[e];delete Ki[e];for(let p=0,m=d.length;p<m;p++){const _=d[p];_.onLoad&&_.onLoad(h)}}).catch(h=>{const d=Ki[e];if(d===void 0)throw this.manager.itemError(e),h;delete Ki[e];for(let p=0,m=d.length;p<m;p++){const _=d[p];_.onError&&_.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class mT extends Vn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new nr(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=wo.parse(e[n]);t.push(i)}return t}}class gT extends Vn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=[],c=new Qc,u=new nr(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(s.withCredentials);let h=0;function d(p){u.load(e[p],function(m){const _=s.parse(m,!0);l[p]={width:_.width,height:_.height,format:_.format,mipmaps:_.mipmaps},h+=1,h===6&&(_.mipmapCount===1&&(c.minFilter=Jt),c.image=l,c.format=_.format,c.needsUpdate=!0,t&&t(c))},n,i)}if(Array.isArray(e))for(let p=0,m=e.length;p<m;++p)d(p);else u.load(e,function(p){const m=s.parse(p,!0);if(m.isCubemap){const _=m.mipmaps.length/m.mipmapCount;for(let y=0;y<_;y++){l[y]={mipmaps:[]};for(let E=0;E<m.mipmapCount;E++)l[y].mipmaps.push(m.mipmaps[y*m.mipmapCount+E]),l[y].format=m.format,l[y].width=m.width,l[y].height=m.height}c.image=l}else c.image.width=m.width,c.image.height=m.height,c.mipmaps=m.mipmaps;m.mipmapCount===1&&(c.minFilter=Jt),c.format=m.format,c.needsUpdate=!0,t&&t(c)},n,i);return c}}class To extends Vn{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=hs.get(e);if(l!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l;const c=_o("img");function u(){d(),hs.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(p){d(),i&&i(p),s.manager.itemError(e),s.manager.itemEnd(e)}function d(){c.removeEventListener("load",u,!1),c.removeEventListener("error",h,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),s.manager.itemStart(e),c.src=e,c}}class _T extends Vn{constructor(e){super(e)}load(e,t,n,i){const s=new Po;s.colorSpace=rn;const l=new To(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function u(h){l.load(e[h],function(d){s.images[h]=d,c++,c===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let h=0;h<e.length;++h)u(h);return s}}class vT extends Vn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new oa,c=new nr(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(s.withCredentials),c.load(e,function(u){let h;try{h=s.parse(u)}catch(d){if(i!==void 0)i(d);else{console.error(d);return}}h.image!==void 0?l.image=h.image:h.data!==void 0&&(l.image.width=h.width,l.image.height=h.height,l.image.data=h.data),l.wrapS=h.wrapS!==void 0?h.wrapS:Tn,l.wrapT=h.wrapT!==void 0?h.wrapT:Tn,l.magFilter=h.magFilter!==void 0?h.magFilter:Jt,l.minFilter=h.minFilter!==void 0?h.minFilter:Jt,l.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0?l.colorSpace=h.colorSpace:h.encoding!==void 0&&(l.encoding=h.encoding),h.flipY!==void 0&&(l.flipY=h.flipY),h.format!==void 0&&(l.format=h.format),h.type!==void 0&&(l.type=h.type),h.mipmaps!==void 0&&(l.mipmaps=h.mipmaps,l.minFilter=Ar),h.mipmapCount===1&&(l.minFilter=Jt),h.generateMipmaps!==void 0&&(l.generateMipmaps=h.generateMipmaps),l.needsUpdate=!0,t&&t(l,h)},n,i),l}}class yT extends Vn{constructor(e){super(e)}load(e,t,n,i){const s=new Kt,l=new To(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(e,function(c){s.image=c,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class Lr extends Et{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new De(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class lv extends Lr{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Et.DEFAULT_UP),this.updateMatrix(),this.groundColor=new De(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const jh=new lt,Ig=new D,Ug=new D;class kd{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ce(512,512),this.map=null,this.mapPass=null,this.matrix=new lt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new qc,this._frameExtents=new ce(1,1),this._viewportCount=1,this._viewports=[new Rt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Ig.setFromMatrixPosition(e.matrixWorld),t.position.copy(Ig),Ug.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Ug),t.updateMatrixWorld(),jh.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(jh),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(jh)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class xT extends kd{constructor(){super(new dn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=ca*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class cv extends Lr{constructor(e,t,n=0,i=Math.PI/3,s=0,l=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Et.DEFAULT_UP),this.updateMatrix(),this.target=new Et,this.distance=n,this.angle=i,this.penumbra=s,this.decay=l,this.map=null,this.shadow=new xT}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const Dg=new lt,Ya=new D,Qh=new D;class ST extends kd{constructor(){super(new dn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ce(4,2),this._viewportCount=6,this._viewports=[new Rt(2,1,1,1),new Rt(0,1,1,1),new Rt(3,1,1,1),new Rt(1,1,1,1),new Rt(3,0,1,1),new Rt(1,0,1,1)],this._cubeDirections=[new D(1,0,0),new D(-1,0,0),new D(0,0,1),new D(0,0,-1),new D(0,1,0),new D(0,-1,0)],this._cubeUps=[new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,0,1),new D(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),Ya.setFromMatrixPosition(e.matrixWorld),n.position.copy(Ya),Qh.copy(n.position),Qh.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Qh),n.updateMatrixWorld(),i.makeTranslation(-Ya.x,-Ya.y,-Ya.z),Dg.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Dg)}}class uv extends Lr{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new ST}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class MT extends kd{constructor(){super(new Io(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class hv extends Lr{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Et.DEFAULT_UP),this.updateMatrix(),this.target=new Et,this.shadow=new MT}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class fv extends Lr{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class dv extends Lr{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class pv{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new D)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.282095),t.addScaledVector(l[1],.488603*i),t.addScaledVector(l[2],.488603*s),t.addScaledVector(l[3],.488603*n),t.addScaledVector(l[4],1.092548*(n*i)),t.addScaledVector(l[5],1.092548*(i*s)),t.addScaledVector(l[6],.315392*(3*s*s-1)),t.addScaledVector(l[7],1.092548*(n*s)),t.addScaledVector(l[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.886227),t.addScaledVector(l[1],2*.511664*i),t.addScaledVector(l[2],2*.511664*s),t.addScaledVector(l[3],2*.511664*n),t.addScaledVector(l[4],2*.429043*n*i),t.addScaledVector(l[5],2*.429043*i*s),t.addScaledVector(l[6],.743125*s*s-.247708),t.addScaledVector(l[7],2*.429043*n*s),t.addScaledVector(l[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class mv extends Lr{constructor(e=new pv,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class du extends Vn{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,l=new nr(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=du.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new De().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const l=e.uniforms[s];switch(i.uniforms[s]={},l.type){case"t":i.uniforms[s].value=n(l.value);break;case"c":i.uniforms[s].value=new De().setHex(l.value);break;case"v2":i.uniforms[s].value=new ce().fromArray(l.value);break;case"v3":i.uniforms[s].value=new D().fromArray(l.value);break;case"v4":i.uniforms[s].value=new Rt().fromArray(l.value);break;case"m3":i.uniforms[s].value=new ft().fromArray(l.value);break;case"m4":i.uniforms[s].value=new lt().fromArray(l.value);break;default:i.uniforms[s].value=l.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new ce().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new ce().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:Y_,SpriteMaterial:Ad,RawShaderMaterial:Z_,ShaderMaterial:Ni,PointsMaterial:Rd,MeshPhysicalMaterial:J_,MeshStandardMaterial:Nd,MeshPhongMaterial:K_,MeshToonMaterial:j_,MeshNormalMaterial:Q_,MeshLambertMaterial:$_,MeshDepthMaterial:Md,MeshDistanceMaterial:Ed,MeshBasicMaterial:Cr,MeshMatcapMaterial:ev,LineDashedMaterial:tv,LineBasicMaterial:In,Material:An};return new t[e]}}class ed{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class gv extends mt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class _v extends Vn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new nr(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(_,y){if(t[y]!==void 0)return t[y];const x=_.interleavedBuffers[y],v=s(_,x.buffer),w=ta(x.type,v),M=new Kc(w,x.stride);return M.uuid=x.uuid,t[y]=M,M}function s(_,y){if(n[y]!==void 0)return n[y];const x=_.arrayBuffers[y],v=new Uint32Array(x).buffer;return n[y]=v,v}const l=e.isInstancedBufferGeometry?new gv:new mt,c=e.data.index;if(c!==void 0){const _=ta(c.type,c.array);l.setIndex(new It(_,1))}const u=e.data.attributes;for(const _ in u){const y=u[_];let E;if(y.isInterleavedBufferAttribute){const x=i(e.data,y.data);E=new cs(x,y.itemSize,y.offset,y.normalized)}else{const x=ta(y.type,y.array),v=y.isInstancedBufferAttribute?ha:It;E=new v(x,y.itemSize,y.normalized)}y.name!==void 0&&(E.name=y.name),y.usage!==void 0&&E.setUsage(y.usage),y.updateRange!==void 0&&(E.updateRange.offset=y.updateRange.offset,E.updateRange.count=y.updateRange.count),l.setAttribute(_,E)}const h=e.data.morphAttributes;if(h)for(const _ in h){const y=h[_],E=[];for(let x=0,v=y.length;x<v;x++){const w=y[x];let M;if(w.isInterleavedBufferAttribute){const A=i(e.data,w.data);M=new cs(A,w.itemSize,w.offset,w.normalized)}else{const A=ta(w.type,w.array);M=new It(A,w.itemSize,w.normalized)}w.name!==void 0&&(M.name=w.name),E.push(M)}l.morphAttributes[_]=E}e.data.morphTargetsRelative&&(l.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let _=0,y=p.length;_!==y;++_){const E=p[_];l.addGroup(E.start,E.count,E.materialIndex)}const m=e.data.boundingSphere;if(m!==void 0){const _=new D;m.center!==void 0&&_.fromArray(m.center),l.boundingSphere=new _i(_,m.radius)}return e.name&&(l.name=e.name),e.userData&&(l.userData=e.userData),l}}class ET extends Vn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=this.path===""?ed.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||l;const c=new nr(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(p){i!==void 0&&i(p),console.error("THREE:ObjectLoader: Can't parse "+e+".",p.message);return}const d=h.metadata;if(d===void 0||d.type===void 0||d.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?ed.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new nr(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const l=await s.loadAsync(e,t),c=JSON.parse(l),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),l=this.parseImages(e.images,function(){t!==void 0&&t(h)}),c=this.parseTextures(e.textures,l),u=this.parseMaterials(e.materials,c),h=this.parseObject(e.object,s,u,c,n),d=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,d),t!==void 0){let p=!1;for(const m in l)if(l[m].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),l=this.parseTextures(e.textures,s),c=this.parseMaterials(e.materials,l),u=this.parseObject(e.object,i,c,l,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new os().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=new jc().fromJSON(e[s],i);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new _v;for(let s=0,l=e.length;s<l;s++){let c;const u=e[s];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(u);break;default:u.type in Lg?c=Lg[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new du;s.setTextures(t);for(let l=0,c=e.length;l<c;l++){const u=e[l];n[u.uuid]===void 0&&(n[u.uuid]=s.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=wo.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function l(u){return n.manager.itemStart(u),s.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const h=u,d=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return l(d)}else return u.data?{data:ta(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new zd(t);s=new To(u),s.setCrossOrigin(this.crossOrigin);for(let h=0,d=e.length;h<d;h++){const p=e[h],m=p.url;if(Array.isArray(m)){const _=[];for(let y=0,E=m.length;y<E;y++){const x=m[y],v=c(x);v!==null&&(v instanceof HTMLImageElement?_.push(v):_.push(new oa(v.data,v.width,v.height)))}i[p.uuid]=new ts(_)}else{const _=c(p.url);i[p.uuid]=new ts(_)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await i.loadAsync(u)}else return l.data?{data:ta(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){i=new To(this.manager),i.setCrossOrigin(this.crossOrigin);for(let l=0,c=e.length;l<c;l++){const u=e[l],h=u.url;if(Array.isArray(h)){const d=[];for(let p=0,m=h.length;p<m;p++){const _=h[p],y=await s(_);y!==null&&(y instanceof HTMLImageElement?d.push(y):d.push(new oa(y.data,y.width,y.height)))}n[u.uuid]=new ts(d)}else{const d=await s(u.url);n[u.uuid]=new ts(d)}}}return n}parseTextures(e,t){function n(s,l){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),l[s])}const i={};if(e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=e[s];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=t[c.image],h=u.data;let d;Array.isArray(h)?(d=new Po,h.length===6&&(d.needsUpdate=!0)):(h&&h.data?d=new oa:d=new Kt,h&&(d.needsUpdate=!0)),d.source=u,d.uuid=c.uuid,c.name!==void 0&&(d.name=c.name),c.mapping!==void 0&&(d.mapping=n(c.mapping,wT)),c.channel!==void 0&&(d.channel=c.channel),c.offset!==void 0&&d.offset.fromArray(c.offset),c.repeat!==void 0&&d.repeat.fromArray(c.repeat),c.center!==void 0&&d.center.fromArray(c.center),c.rotation!==void 0&&(d.rotation=c.rotation),c.wrap!==void 0&&(d.wrapS=n(c.wrap[0],Ng),d.wrapT=n(c.wrap[1],Ng)),c.format!==void 0&&(d.format=c.format),c.internalFormat!==void 0&&(d.internalFormat=c.internalFormat),c.type!==void 0&&(d.type=c.type),c.colorSpace!==void 0&&(d.colorSpace=c.colorSpace),c.encoding!==void 0&&(d.encoding=c.encoding),c.minFilter!==void 0&&(d.minFilter=n(c.minFilter,Og)),c.magFilter!==void 0&&(d.magFilter=n(c.magFilter,Og)),c.anisotropy!==void 0&&(d.anisotropy=c.anisotropy),c.flipY!==void 0&&(d.flipY=c.flipY),c.generateMipmaps!==void 0&&(d.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(d.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(d.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(d.compareFunction=c.compareFunction),c.userData!==void 0&&(d.userData=c.userData),i[c.uuid]=d}return i}parseObject(e,t,n,i,s){let l;function c(m){return t[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),t[m]}function u(m){if(m!==void 0){if(Array.isArray(m)){const _=[];for(let y=0,E=m.length;y<E;y++){const x=m[y];n[x]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",x),_.push(n[x])}return _}return n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),n[m]}}function h(m){return i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",m),i[m]}let d,p;switch(e.type){case"Scene":l=new Td,e.background!==void 0&&(Number.isInteger(e.background)?l.background=new De(e.background):l.background=h(e.background)),e.environment!==void 0&&(l.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?l.fog=new Jc(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(l.fog=new Zc(e.fog.color,e.fog.density)),e.fog.name!==""&&(l.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(l.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(l.backgroundIntensity=e.backgroundIntensity);break;case"PerspectiveCamera":l=new dn(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(l.focus=e.focus),e.zoom!==void 0&&(l.zoom=e.zoom),e.filmGauge!==void 0&&(l.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(l.filmOffset=e.filmOffset),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"OrthographicCamera":l=new Io(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(l.zoom=e.zoom),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"AmbientLight":l=new fv(e.color,e.intensity);break;case"DirectionalLight":l=new hv(e.color,e.intensity);break;case"PointLight":l=new uv(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":l=new dv(e.color,e.intensity,e.width,e.height);break;case"SpotLight":l=new cv(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":l=new lv(e.color,e.groundColor,e.intensity);break;case"LightProbe":l=new mv().fromJSON(e);break;case"SkinnedMesh":d=c(e.geometry),p=u(e.material),l=new U_(d,p),e.bindMode!==void 0&&(l.bindMode=e.bindMode),e.bindMatrix!==void 0&&l.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(l.skeleton=e.skeleton);break;case"Mesh":d=c(e.geometry),p=u(e.material),l=new gn(d,p);break;case"InstancedMesh":d=c(e.geometry),p=u(e.material);const m=e.count,_=e.instanceMatrix,y=e.instanceColor;l=new D_(d,p,m),l.instanceMatrix=new ha(new Float32Array(_.array),16),y!==void 0&&(l.instanceColor=new ha(new Float32Array(y.array),y.itemSize));break;case"LOD":l=new I_;break;case"Line":l=new br(c(e.geometry),u(e.material));break;case"LineLoop":l=new N_(c(e.geometry),u(e.material));break;case"LineSegments":l=new Fi(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":l=new O_(c(e.geometry),u(e.material));break;case"Sprite":l=new L_(u(e.material));break;case"Group":l=new ia;break;case"Bone":l=new bd;break;default:l=new Et}if(l.uuid=e.uuid,e.name!==void 0&&(l.name=e.name),e.matrix!==void 0?(l.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(l.matrixAutoUpdate=e.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(e.position!==void 0&&l.position.fromArray(e.position),e.rotation!==void 0&&l.rotation.fromArray(e.rotation),e.quaternion!==void 0&&l.quaternion.fromArray(e.quaternion),e.scale!==void 0&&l.scale.fromArray(e.scale)),e.up!==void 0&&l.up.fromArray(e.up),e.castShadow!==void 0&&(l.castShadow=e.castShadow),e.receiveShadow!==void 0&&(l.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(l.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(l.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(l.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&l.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(l.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(l.visible=e.visible),e.frustumCulled!==void 0&&(l.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(l.renderOrder=e.renderOrder),e.userData!==void 0&&(l.userData=e.userData),e.layers!==void 0&&(l.layers.mask=e.layers),e.children!==void 0){const m=e.children;for(let _=0;_<m.length;_++)l.add(this.parseObject(m[_],t,n,i,s))}if(e.animations!==void 0){const m=e.animations;for(let _=0;_<m.length;_++){const y=m[_];l.animations.push(s[y])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(l.autoUpdate=e.autoUpdate);const m=e.levels;for(let _=0;_<m.length;_++){const y=m[_],E=l.getObjectByProperty("uuid",y.object);E!==void 0&&l.addLevel(E,y.distance,y.hysteresis)}}return l}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const wT={UVMapping:Hc,CubeReflectionMapping:tr,CubeRefractionMapping:Tr,EquirectangularReflectionMapping:ro,EquirectangularRefractionMapping:so,CubeUVReflectionMapping:da},Ng={RepeatWrapping:ao,ClampToEdgeWrapping:Tn,MirroredRepeatWrapping:oo},Og={NearestFilter:Zt,NearestMipmapNearestFilter:Dc,NearestMipmapLinearFilter:$a,LinearFilter:Jt,LinearMipmapNearestFilter:od,LinearMipmapLinearFilter:Ar};class TT extends Vn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=hs.get(e);if(l!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l;const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader,fetch(e,c).then(function(u){return u.blob()}).then(function(u){return createImageBitmap(u,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(u){hs.add(e,u),t&&t(u),s.manager.itemEnd(e)}).catch(function(u){i&&i(u),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}let mc;class Hd{static getContext(){return mc===void 0&&(mc=new(window.AudioContext||window.webkitAudioContext)),mc}static setContext(e){mc=e}}class AT extends Vn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new nr(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(u){try{const h=u.slice(0);Hd.getContext().decodeAudioData(h,function(p){t(p)},c)}catch(h){c(h)}},n,i);function c(u){i?i(u):console.error(u),s.manager.itemError(e)}}}const Fg=new lt,Bg=new lt,Xr=new lt;class bT{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new dn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new dn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Xr.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,l=t.near*Math.tan(ss*t.fov*.5)/t.zoom;let c,u;Bg.elements[12]=-i,Fg.elements[12]=i,c=-l*t.aspect+s,u=l*t.aspect+s,Xr.elements[0]=2*t.near/(u-c),Xr.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy(Xr),c=-l*t.aspect-s,u=l*t.aspect-s,Xr.elements[0]=2*t.near/(u-c),Xr.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy(Xr)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Bg),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Fg)}}class Vd{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=zg(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=zg();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function zg(){return(typeof performance>"u"?Date:performance).now()}const qr=new D,kg=new Hn,RT=new D,Yr=new D;class CT extends Et{constructor(){super(),this.type="AudioListener",this.context=Hd.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Vd}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(qr,kg,RT),Yr.set(0,0,-1).applyQuaternion(kg),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(qr.x,i),t.positionY.linearRampToValueAtTime(qr.y,i),t.positionZ.linearRampToValueAtTime(qr.z,i),t.forwardX.linearRampToValueAtTime(Yr.x,i),t.forwardY.linearRampToValueAtTime(Yr.y,i),t.forwardZ.linearRampToValueAtTime(Yr.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(qr.x,qr.y,qr.z),t.setOrientation(Yr.x,Yr.y,Yr.z,n.x,n.y,n.z)}}class vv extends Et{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Zr=new D,Hg=new Hn,PT=new D,Jr=new D;class LT extends vv{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Zr,Hg,PT),Jr.set(0,0,1).applyQuaternion(Hg);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Zr.x,n),t.positionY.linearRampToValueAtTime(Zr.y,n),t.positionZ.linearRampToValueAtTime(Zr.z,n),t.orientationX.linearRampToValueAtTime(Jr.x,n),t.orientationY.linearRampToValueAtTime(Jr.y,n),t.orientationZ.linearRampToValueAtTime(Jr.z,n)}else t.setPosition(Zr.x,Zr.y,Zr.z),t.setOrientation(Jr.x,Jr.y,Jr.z)}}class IT{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class yv{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,l;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let l=this.cumulativeWeight;if(l===0){for(let c=0;c!==i;++c)n[s+c]=n[c];l=t}else{l+=t;const c=t/l;this._mixBufferRegion(n,s,0,c,i)}this.cumulativeWeight=l}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-s,t)}l>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){c.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,l=i;s!==l;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let l=0;l!==s;++l)e[t+l]=e[n+l]}_slerp(e,t,n,i){Hn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const l=this._workIndex*s;Hn.multiplyQuaternionsFlat(e,l,e,t,e,n),Hn.slerpFlat(e,t,e,t,e,l,i)}_lerp(e,t,n,i,s){const l=1-i;for(let c=0;c!==s;++c){const u=t+c;e[u]=e[u]*l+e[n+c]*i}}_lerpAdditive(e,t,n,i,s){for(let l=0;l!==s;++l){const c=t+l;e[c]=e[c]+e[n+l]*i}}}const Gd="\\[\\]\\.:\\/",UT=new RegExp("["+Gd+"]","g"),Wd="[^"+Gd+"]",DT="[^"+Gd.replace("\\.","")+"]",NT=/((?:WC+[\/:])*)/.source.replace("WC",Wd),OT=/(WCOD+)?/.source.replace("WCOD",DT),FT=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Wd),BT=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Wd),zT=new RegExp("^"+NT+OT+FT+BT+"$"),kT=["material","materials","bones","map"];class HT{constructor(e,t,n){const i=n||yt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class yt{constructor(e,t,n){this.path=t,this.parsedPath=n||yt.parseTrackName(t),this.node=yt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new yt.Composite(e,t,n):new yt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(UT,"")}static parseTrackName(e){const t=zT.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);kT.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let l=0;l<s.length;l++){const c=s[l];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=yt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let d=0;d<e.length;d++)if(e[d].name===h){h=d;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const l=e[i];if(l===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}u=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=s}else l.fromArray!==void 0&&l.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(u=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}yt.Composite=HT;yt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};yt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};yt.prototype.GetterByBindingType=[yt.prototype._getValue_direct,yt.prototype._getValue_array,yt.prototype._getValue_arrayElement,yt.prototype._getValue_toArray];yt.prototype.SetterByBindingTypeAndVersioning=[[yt.prototype._setValue_direct,yt.prototype._setValue_direct_setNeedsUpdate,yt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[yt.prototype._setValue_array,yt.prototype._setValue_array_setNeedsUpdate,yt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[yt.prototype._setValue_arrayElement,yt.prototype._setValue_arrayElement_setNeedsUpdate,yt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[yt.prototype._setValue_fromArray,yt.prototype._setValue_fromArray_setNeedsUpdate,yt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class VT{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Qn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,l=s.length;let c,u=e.length,h=this.nCachedObjects_;for(let d=0,p=arguments.length;d!==p;++d){const m=arguments[d],_=m.uuid;let y=t[_];if(y===void 0){y=u++,t[_]=y,e.push(m);for(let E=0,x=l;E!==x;++E)s[E].push(new yt(m,n[E],i[E]))}else if(y<h){c=e[y];const E=--h,x=e[E];t[x.uuid]=y,e[y]=x,t[_]=E,e[E]=m;for(let v=0,w=l;v!==w;++v){const M=s[v],A=M[E];let R=M[y];M[y]=A,R===void 0&&(R=new yt(m,n[v],i[v])),M[E]=R}}else e[y]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const u=arguments[l],h=u.uuid,d=t[h];if(d!==void 0&&d>=s){const p=s++,m=e[p];t[m.uuid]=d,e[d]=m,t[h]=p,e[p]=u;for(let _=0,y=i;_!==y;++_){const E=n[_],x=E[p],v=E[d];E[d]=x,E[p]=v}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,l=e.length;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],d=h.uuid,p=t[d];if(p!==void 0)if(delete t[d],p<s){const m=--s,_=e[m],y=--l,E=e[y];t[_.uuid]=p,e[p]=_,t[E.uuid]=m,e[m]=E,e.pop();for(let x=0,v=i;x!==v;++x){const w=n[x],M=w[m],A=w[y];w[p]=M,w[m]=A,w.pop()}}else{const m=--l,_=e[m];m>0&&(t[_.uuid]=p),e[p]=_,e.pop();for(let y=0,E=i;y!==E;++y){const x=n[y];x[p]=x[m],x.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const l=this._paths,c=this._parsedPaths,u=this._objects,h=u.length,d=this.nCachedObjects_,p=new Array(h);i=s.length,n[e]=i,l.push(e),c.push(t),s.push(p);for(let m=d,_=u.length;m!==_;++m){const y=u[m];p[m]=new yt(y,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,l=this._bindings,c=l.length-1,u=l[c],h=e[c];t[h]=n,l[n]=u,l.pop(),s[n]=s[c],s.pop(),i[n]=i[c],i.pop()}}}class xv{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,l=s.length,c=new Array(l),u={endingStart:$r,endingEnd:$r};for(let h=0;h!==l;++h){const d=s[h].createInterpolant(null);c[h]=d,d.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Q0,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,l=s/i,c=i/s;e.warp(1,l,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,l=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,h=c.sampleValues;return u[0]=s,u[1]=s+n,h[0]=e/l,h[1]=t/l,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const u=(e-s)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const l=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case pd:for(let d=0,p=u.length;d!==p;++d)u[d].evaluate(l),h[d].accumulateAdditive(c);break;case Gc:default:for(let d=0,p=u.length;d!==p;++d)u[d].evaluate(l),h[d].accumulate(i,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const l=n===$0;if(e===0)return s===-1?i:l&&(s&1)===1?t-i:i;if(n===j0){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,l)):this._setEndings(this.repetitions===0,!0,l)),i>=t||i<0){const c=Math.floor(i/t);i-=t*c,s+=Math.abs(c);const u=this.repetitions-s;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,l)}else this._setEndings(!1,!1,l);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(l&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=es,i.endingEnd=es):(e?i.endingStart=this.zeroSlopeAtStart?es:$r:i.endingStart=uo,t?i.endingEnd=this.zeroSlopeAtEnd?es:$r:i.endingEnd=uo)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let l=this._weightInterpolant;l===null&&(l=i._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,u=l.sampleValues;return c[0]=s,u[0]=t,c[1]=s+e,u[1]=n,this}}const GT=new Float32Array(1);class WT extends ir{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,l=e._propertyBindings,c=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let d=h[u];d===void 0&&(d={},h[u]=d);for(let p=0;p!==s;++p){const m=i[p],_=m.name;let y=d[_];if(y!==void 0)++y.referenceCount,l[p]=y;else{if(y=l[p],y!==void 0){y._cacheIndex===null&&(++y.referenceCount,this._addInactiveBinding(y,u,_));continue}const E=t&&t._propertyBindings[p].binding.parsedPath;y=new yv(yt.create(n,_,E),m.ValueTypeName,m.getValueSize()),++y.referenceCount,this._addInactiveBinding(y,u,_),l[p]=y}c[p].resultBuffer=y.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let l=s[t];if(l===void 0)l={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=l;else{const c=l.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=i.length,i.push(e),l.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,l=this._actionsByClip,c=l[s],u=c.knownActions,h=u[u.length-1],d=e._byClipCacheIndex;h._byClipCacheIndex=d,u[d]=h,u.pop(),e._byClipCacheIndex=null;const p=c.actionByRoot,m=(e._localRoot||this._root).uuid;delete p[m],u.length===0&&delete l[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let l=i[t];l===void 0&&(l={},i[t]=l),l[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,l=this._bindingsByRootAndName,c=l[i],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete c[s],Object.keys(c).length===0&&delete l[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Fd(new Float32Array(2),new Float32Array(2),1,GT),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let l=typeof e=="string"?wo.findByName(i,e):e;const c=l!==null?l.uuid:e,u=this._actionsByClip[c];let h=null;if(n===void 0&&(l!==null?n=l.blendMode:n=Gc),u!==void 0){const p=u.actionByRoot[s];if(p!==void 0&&p.blendMode===n)return p;h=u.knownActions[0],l===null&&(l=h._clip)}if(l===null)return null;const d=new xv(this,l,t,n);return this._bindAction(d,h),this._addInactiveAction(d,c,s),d}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?wo.findByName(n,e):e,l=s?s.uuid:e,c=this._actionsByClip[l];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),l=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,s,l);const c=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)c[h].apply(l);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const l=s.knownActions;for(let c=0,u=l.length;c!==u;++c){const h=l[c];this._deactivateAction(h);const d=h._cacheIndex,p=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,p._cacheIndex=d,t[d]=p,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const l in n){const c=n[l].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const l in s){const c=s[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class Xd{constructor(e){this.value=e}clone(){return new Xd(this.value.clone===void 0?this.value:this.value.clone())}}let XT=0;class qT extends ir{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:XT++}),this.name="",this.usage=mo,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++)this.uniforms.push(t[n].clone());return this}clone(){return new this.constructor().copy(this)}}class YT extends Kc{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class ZT{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class Sv{constructor(e,t,n=0,i=1/0){this.ray=new pa(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new as,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return td(e,this,n,t),n.sort(Vg),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)td(e[i],this,n,t);return n.sort(Vg),n}}function Vg(r,e){return r.distance-e.distance}function td(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,l=i.length;s<l;s++)td(i[s],e,t,!0)}}class JT{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Xt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class KT{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const Gg=new ce;class jT{constructor(e=new ce(1/0,1/0),t=new ce(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Gg.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Gg).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Wg=new D,gc=new D;class QT{constructor(e=new D,t=new D){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Wg.subVectors(e,this.start),gc.subVectors(this.end,this.start);const n=gc.dot(gc);let s=gc.dot(Wg)/n;return t&&(s=Xt(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const Xg=new D;class $T extends Et{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new mt,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let l=0,c=1,u=32;l<u;l++,c++){const h=l/u*Math.PI*2,d=c/u*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(d),Math.sin(d),1)}n.setAttribute("position",new Fe(i,3));const s=new In({fog:!1,toneMapped:!1});this.cone=new Fi(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Xg.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Xg),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const yr=new D,_c=new lt,$h=new lt;class eA extends Fi{constructor(e){const t=Mv(e),n=new mt,i=[],s=[],l=new De(0,0,1),c=new De(0,1,0);for(let h=0;h<t.length;h++){const d=t[h];d.parent&&d.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(l.r,l.g,l.b),s.push(c.r,c.g,c.b))}n.setAttribute("position",new Fe(i,3)),n.setAttribute("color",new Fe(s,3));const u=new In({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");$h.copy(this.root.matrixWorld).invert();for(let s=0,l=0;s<t.length;s++){const c=t[s];c.parent&&c.parent.isBone&&(_c.multiplyMatrices($h,c.matrixWorld),yr.setFromMatrixPosition(_c),i.setXYZ(l,yr.x,yr.y,yr.z),_c.multiplyMatrices($h,c.parent.matrixWorld),yr.setFromMatrixPosition(_c),i.setXYZ(l+1,yr.x,yr.y,yr.z),l+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function Mv(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,Mv(r.children[t]));return e}class tA extends gn{constructor(e,t,n){const i=new No(t,4,2),s=new Cr({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const nA=new D,qg=new De,Yg=new De;class iA extends Et{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new Do(t);i.rotateY(Math.PI*.5),this.material=new Cr({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),l=new Float32Array(s.count*3);i.setAttribute("color",new It(l,3)),this.add(new gn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");qg.copy(this.light.color),Yg.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?qg:Yg;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(nA.setFromMatrixPosition(this.light.matrixWorld).negate())}}class rA extends Fi{constructor(e=10,t=10,n=4473924,i=8947848){n=new De(n),i=new De(i);const s=t/2,l=e/t,c=e/2,u=[],h=[];for(let m=0,_=0,y=-c;m<=t;m++,y+=l){u.push(-c,0,y,c,0,y),u.push(y,0,-c,y,0,c);const E=m===s?n:i;E.toArray(h,_),_+=3,E.toArray(h,_),_+=3,E.toArray(h,_),_+=3,E.toArray(h,_),_+=3}const d=new mt;d.setAttribute("position",new Fe(u,3)),d.setAttribute("color",new Fe(h,3));const p=new In({vertexColors:!0,toneMapped:!1});super(d,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class sA extends Fi{constructor(e=10,t=16,n=8,i=64,s=4473924,l=8947848){s=new De(s),l=new De(l);const c=[],u=[];if(t>1)for(let p=0;p<t;p++){const m=p/t*(Math.PI*2),_=Math.sin(m)*e,y=Math.cos(m)*e;c.push(0,0,0),c.push(_,0,y);const E=p&1?s:l;u.push(E.r,E.g,E.b),u.push(E.r,E.g,E.b)}for(let p=0;p<n;p++){const m=p&1?s:l,_=e-e/n*p;for(let y=0;y<i;y++){let E=y/i*(Math.PI*2),x=Math.sin(E)*_,v=Math.cos(E)*_;c.push(x,0,v),u.push(m.r,m.g,m.b),E=(y+1)/i*(Math.PI*2),x=Math.sin(E)*_,v=Math.cos(E)*_,c.push(x,0,v),u.push(m.r,m.g,m.b)}}const h=new mt;h.setAttribute("position",new Fe(c,3)),h.setAttribute("color",new Fe(u,3));const d=new In({vertexColors:!0,toneMapped:!1});super(h,d),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Zg=new D,vc=new D,Jg=new D;class aA extends Et{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new mt;i.setAttribute("position",new Fe([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new In({fog:!1,toneMapped:!1});this.lightPlane=new br(i,s),this.add(this.lightPlane),i=new mt,i.setAttribute("position",new Fe([0,0,0,0,0,1],3)),this.targetLine=new br(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),Zg.setFromMatrixPosition(this.light.matrixWorld),vc.setFromMatrixPosition(this.light.target.matrixWorld),Jg.subVectors(vc,Zg),this.lightPlane.lookAt(vc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(vc),this.targetLine.scale.z=Jg.length()}}const yc=new D,Wt=new Co;class oA extends Fi{constructor(e){const t=new mt,n=new In({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],l={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(y,E){u(y),u(E)}function u(y){i.push(0,0,0),s.push(0,0,0),l[y]===void 0&&(l[y]=[]),l[y].push(i.length/3-1)}t.setAttribute("position",new Fe(i,3)),t.setAttribute("color",new Fe(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update();const h=new De(16755200),d=new De(16711680),p=new De(43775),m=new De(16777215),_=new De(3355443);this.setColors(h,d,p,m,_)}setColors(e,t,n,i,s){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,s.r,s.g,s.b),c.setXYZ(41,s.r,s.g,s.b),c.setXYZ(42,s.r,s.g,s.b),c.setXYZ(43,s.r,s.g,s.b),c.setXYZ(44,s.r,s.g,s.b),c.setXYZ(45,s.r,s.g,s.b),c.setXYZ(46,s.r,s.g,s.b),c.setXYZ(47,s.r,s.g,s.b),c.setXYZ(48,s.r,s.g,s.b),c.setXYZ(49,s.r,s.g,s.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;Wt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Yt("c",t,e,Wt,0,0,-1),Yt("t",t,e,Wt,0,0,1),Yt("n1",t,e,Wt,-1,-1,-1),Yt("n2",t,e,Wt,n,-1,-1),Yt("n3",t,e,Wt,-1,i,-1),Yt("n4",t,e,Wt,n,i,-1),Yt("f1",t,e,Wt,-1,-1,1),Yt("f2",t,e,Wt,n,-1,1),Yt("f3",t,e,Wt,-1,i,1),Yt("f4",t,e,Wt,n,i,1),Yt("u1",t,e,Wt,n*.7,i*1.1,-1),Yt("u2",t,e,Wt,-1*.7,i*1.1,-1),Yt("u3",t,e,Wt,0,i*2,-1),Yt("cf1",t,e,Wt,-1,0,1),Yt("cf2",t,e,Wt,n,0,1),Yt("cf3",t,e,Wt,0,-1,1),Yt("cf4",t,e,Wt,0,i,1),Yt("cn1",t,e,Wt,-1,0,-1),Yt("cn2",t,e,Wt,n,0,-1),Yt("cn3",t,e,Wt,0,-1,-1),Yt("cn4",t,e,Wt,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Yt(r,e,t,n,i,s,l){yc.set(i,s,l).unproject(n);const c=e[r];if(c!==void 0){const u=t.getAttribute("position");for(let h=0,d=c.length;h<d;h++)u.setXYZ(c[h],yc.x,yc.y,yc.z)}}const xc=new Oi;class lA extends Fi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new mt;s.setIndex(new It(n,1)),s.setAttribute("position",new It(i,3)),super(s,new In({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&xc.setFromObject(this.object),xc.isEmpty())return;const t=xc.min,n=xc.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class cA extends Fi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new mt;s.setIndex(new It(n,1)),s.setAttribute("position",new Fe(i,3)),super(s,new In({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class uA extends br{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],l=new mt;l.setAttribute("position",new Fe(s,3)),l.computeBoundingSphere(),super(l,new In({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new mt;u.setAttribute("position",new Fe(c,3)),u.computeBoundingSphere(),this.add(new gn(u,new Cr({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const Kg=new D;let Sc,ef;class hA extends Et{constructor(e=new D(0,0,1),t=new D(0,0,0),n=1,i=16776960,s=n*.2,l=s*.2){super(),this.type="ArrowHelper",Sc===void 0&&(Sc=new mt,Sc.setAttribute("position",new Fe([0,0,0,0,1,0],3)),ef=new ga(0,.5,1,5,1),ef.translate(0,-.5,0)),this.position.copy(t),this.line=new br(Sc,new In({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new gn(ef,new Cr({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,l)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Kg.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(Kg,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class fA extends Fi{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new mt;i.setAttribute("position",new Fe(t,3)),i.setAttribute("color",new Fe(n,3));const s=new In({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new De,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class dA{constructor(){this.type="ShapePath",this.color=new De,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new vo,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,l){return this.currentPath.bezierCurveTo(e,t,n,i,s,l),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(v){const w=[];for(let M=0,A=v.length;M<A;M++){const R=v[M],P=new os;P.curves=R.curves,w.push(P)}return w}function n(v,w){const M=w.length;let A=!1;for(let R=M-1,P=0;P<M;R=P++){let I=w[R],F=w[P],b=F.x-I.x,L=F.y-I.y;if(Math.abs(L)>Number.EPSILON){if(L<0&&(I=w[P],b=-b,F=w[R],L=-L),v.y<I.y||v.y>F.y)continue;if(v.y===I.y){if(v.x===I.x)return!0}else{const H=L*(v.x-I.x)-b*(v.y-I.y);if(H===0)return!0;if(H<0)continue;A=!A}}else{if(v.y!==I.y)continue;if(F.x<=v.x&&v.x<=I.x||I.x<=v.x&&v.x<=F.x)return!0}}return A}const i=Ui.isClockWise,s=this.subPaths;if(s.length===0)return[];let l,c,u;const h=[];if(s.length===1)return c=s[0],u=new os,u.curves=c.curves,h.push(u),h;let d=!i(s[0].getPoints());d=e?!d:d;const p=[],m=[];let _=[],y=0,E;m[y]=void 0,_[y]=[];for(let v=0,w=s.length;v<w;v++)c=s[v],E=c.getPoints(),l=i(E),l=e?!l:l,l?(!d&&m[y]&&y++,m[y]={s:new os,p:E},m[y].s.curves=c.curves,d&&y++,_[y]=[]):_[y].push({h:c,p:E[0]});if(!m[0])return t(s);if(m.length>1){let v=!1,w=0;for(let M=0,A=m.length;M<A;M++)p[M]=[];for(let M=0,A=m.length;M<A;M++){const R=_[M];for(let P=0;P<R.length;P++){const I=R[P];let F=!0;for(let b=0;b<m.length;b++)n(I.p,m[b].p)&&(M!==b&&w++,F?(F=!1,p[b].push(I)):v=!0);F&&p[M].push(I)}}w>0&&v===!1&&(_=p)}let x;for(let v=0,w=m.length;v<w;v++){u=m[v].s,h.push(u),x=_[v];for(let M=0,A=x.length;M<A;M++)u.holes.push(x[M].h)}return h}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:zc}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=zc);const ZA=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:ad,AddEquation:jr,AddOperation:F0,AdditiveAnimationBlendMode:pd,AdditiveBlending:gf,AlphaFormat:W0,AlwaysCompare:h_,AlwaysDepth:P0,AlwaysStencilFunc:i_,AmbientLight:fv,AnimationAction:xv,AnimationClip:wo,AnimationLoader:mT,AnimationMixer:WT,AnimationObjectGroup:VT,AnimationUtils:hT,ArcCurve:F_,ArrayCamera:b_,ArrowHelper:hA,Audio:vv,AudioAnalyser:IT,AudioContext:Hd,AudioListener:CT,AudioLoader:AT,AxesHelper:fA,BackSide:Ln,BasicDepthPacking:e_,BasicShadowMap:g0,Bone:bd,BooleanKeyframeTrack:ds,Box2:jT,Box3:Oi,Box3Helper:cA,BoxGeometry:fs,BoxHelper:lA,BufferAttribute:It,BufferGeometry:mt,BufferGeometryLoader:_v,ByteType:V0,Cache:hs,Camera:Co,CameraHelper:oA,CanvasTexture:Nw,CapsuleGeometry:eu,CatmullRomCurve3:B_,CineonToneMapping:k0,CircleGeometry:tu,ClampToEdgeWrapping:Tn,Clock:Vd,Color:De,ColorKeyframeTrack:Bd,ColorManagement:bt,CompressedArrayTexture:Uw,CompressedCubeTexture:Dw,CompressedTexture:Qc,CompressedTextureLoader:gT,ConeGeometry:nu,CubeCamera:y_,CubeReflectionMapping:tr,CubeRefractionMapping:Tr,CubeTexture:Po,CubeTextureLoader:_T,CubeUVReflectionMapping:da,CubicBezierCurve:Pd,CubicBezierCurve3:z_,CubicInterpolant:rv,CullFaceBack:mf,CullFaceFront:m0,CullFaceFrontBack:Iy,CullFaceNone:p0,Curve:vi,CurvePath:H_,CustomBlending:_0,CustomToneMapping:H0,CylinderGeometry:ga,Cylindrical:KT,Data3DTexture:vd,DataArrayTexture:Xc,DataTexture:oa,DataTextureLoader:vT,DataUtils:Hx,DecrementStencilOp:Wy,DecrementWrapStencilOp:qy,DefaultLoadingManager:ov,DepthFormat:Er,DepthStencilFormat:ls,DepthTexture:R_,DirectionalLight:hv,DirectionalLightHelper:aA,DiscreteInterpolant:sv,DisplayP3ColorSpace:Wc,DodecahedronGeometry:iu,DoubleSide:Ri,DstAlphaFactor:w0,DstColorFactor:A0,DynamicCopyUsage:ox,DynamicDrawUsage:tx,DynamicReadUsage:rx,EdgesGeometry:V_,EllipseCurve:$c,EqualCompare:a_,EqualDepth:I0,EqualStencilFunc:Ky,EquirectangularReflectionMapping:ro,EquirectangularRefractionMapping:so,Euler:Ro,EventDispatcher:ir,ExtrudeGeometry:su,FileLoader:nr,Float16BufferAttribute:Yx,Float32BufferAttribute:Fe,Float64BufferAttribute:Zx,FloatType:Ci,Fog:Jc,FogExp2:Zc,FramebufferTexture:Iw,FrontSide:er,Frustum:qc,GLBufferAttribute:ZT,GLSL1:cx,GLSL3:qf,GreaterCompare:l_,GreaterDepth:D0,GreaterEqualCompare:u_,GreaterEqualDepth:U0,GreaterEqualStencilFunc:ex,GreaterStencilFunc:Qy,GridHelper:rA,Group:ia,HalfFloatType:la,HemisphereLight:lv,HemisphereLightHelper:iA,IcosahedronGeometry:au,ImageBitmapLoader:TT,ImageLoader:To,ImageUtils:_d,IncrementStencilOp:Gy,IncrementWrapStencilOp:Xy,InstancedBufferAttribute:ha,InstancedBufferGeometry:gv,InstancedInterleavedBuffer:YT,InstancedMesh:D_,Int16BufferAttribute:Xx,Int32BufferAttribute:qx,Int8BufferAttribute:Vx,IntType:ld,InterleavedBuffer:Kc,InterleavedBufferAttribute:cs,Interpolant:Oo,InterpolateDiscrete:lo,InterpolateLinear:co,InterpolateSmooth:Cc,InvertStencilOp:Yy,KeepStencilOp:Pc,KeyframeTrack:yi,LOD:I_,LatheGeometry:Uo,Layers:as,LessCompare:s_,LessDepth:L0,LessEqualCompare:o_,LessEqualDepth:Uc,LessEqualStencilFunc:jy,LessStencilFunc:Jy,Light:Lr,LightProbe:mv,Line:br,Line3:QT,LineBasicMaterial:In,LineCurve:Ld,LineCurve3:k_,LineDashedMaterial:tv,LineLoop:N_,LineSegments:Fi,LinearDisplayP3ColorSpace:bo,LinearEncoding:md,LinearFilter:Jt,LinearInterpolant:Fd,LinearMipMapLinearFilter:Fy,LinearMipMapNearestFilter:Oy,LinearMipmapLinearFilter:Ar,LinearMipmapNearestFilter:od,LinearSRGBColorSpace:Di,LinearToneMapping:B0,LinearTransfer:ho,Loader:Vn,LoaderUtils:ed,LoadingManager:zd,LoopOnce:j0,LoopPingPong:$0,LoopRepeat:Q0,LuminanceAlphaFormat:q0,LuminanceFormat:X0,MOUSE:Py,Material:An,MaterialLoader:du,MathUtils:Ex,Matrix3:ft,Matrix4:lt,MaxEquation:xf,Mesh:gn,MeshBasicMaterial:Cr,MeshDepthMaterial:Md,MeshDistanceMaterial:Ed,MeshLambertMaterial:$_,MeshMatcapMaterial:ev,MeshNormalMaterial:Q_,MeshPhongMaterial:K_,MeshPhysicalMaterial:J_,MeshStandardMaterial:Nd,MeshToonMaterial:j_,MinEquation:yf,MirroredRepeatWrapping:oo,MixOperation:O0,MultiplyBlending:vf,MultiplyOperation:Ao,NearestFilter:Zt,NearestMipMapLinearFilter:Ny,NearestMipMapNearestFilter:Dy,NearestMipmapLinearFilter:$a,NearestMipmapNearestFilter:Dc,NeverCompare:r_,NeverDepth:C0,NeverStencilFunc:Zy,NoBlending:$i,NoColorSpace:jn,NoToneMapping:Li,NormalAnimationBlendMode:Gc,NormalBlending:rs,NotEqualCompare:c_,NotEqualDepth:N0,NotEqualStencilFunc:$y,NumberKeyframeTrack:Mo,Object3D:Et,ObjectLoader:ET,ObjectSpaceNormalMap:n_,OctahedronGeometry:Do,OneFactor:S0,OneMinusDstAlphaFactor:T0,OneMinusDstColorFactor:b0,OneMinusSrcAlphaFactor:sd,OneMinusSrcColorFactor:E0,OrthographicCamera:Io,P3Primaries:po,PCFShadowMap:kc,PCFSoftShadowMap:Qa,PMREMGenerator:Zf,Path:vo,PerspectiveCamera:dn,Plane:Sr,PlaneGeometry:Lo,PlaneHelper:uA,PointLight:uv,PointLightHelper:tA,Points:O_,PointsMaterial:Rd,PolarGridHelper:sA,PolyhedronGeometry:Pr,PositionalAudio:LT,PropertyBinding:yt,PropertyMixer:yv,QuadraticBezierCurve:Id,QuadraticBezierCurve3:Ud,Quaternion:Hn,QuaternionKeyframeTrack:_a,QuaternionLinearInterpolant:av,RED_GREEN_RGTC2_Format:Wf,RED_RGTC1_Format:K0,REVISION:zc,RGBADepthPacking:t_,RGBAFormat:zn,RGBAIntegerFormat:dd,RGBA_ASTC_10x10_Format:Bf,RGBA_ASTC_10x5_Format:Nf,RGBA_ASTC_10x6_Format:Of,RGBA_ASTC_10x8_Format:Ff,RGBA_ASTC_12x10_Format:zf,RGBA_ASTC_12x12_Format:kf,RGBA_ASTC_4x4_Format:bf,RGBA_ASTC_5x4_Format:Rf,RGBA_ASTC_5x5_Format:Cf,RGBA_ASTC_6x5_Format:Pf,RGBA_ASTC_6x6_Format:Lf,RGBA_ASTC_8x5_Format:If,RGBA_ASTC_8x6_Format:Uf,RGBA_ASTC_8x8_Format:Df,RGBA_BPTC_Format:Rc,RGBA_ETC2_EAC_Format:Af,RGBA_PVRTC_2BPPV1_Format:wf,RGBA_PVRTC_4BPPV1_Format:Ef,RGBA_S3TC_DXT1_Format:Tc,RGBA_S3TC_DXT3_Format:Ac,RGBA_S3TC_DXT5_Format:bc,RGB_BPTC_SIGNED_Format:Hf,RGB_BPTC_UNSIGNED_Format:Vf,RGB_ETC1_Format:J0,RGB_ETC2_Format:Tf,RGB_PVRTC_2BPPV1_Format:Mf,RGB_PVRTC_4BPPV1_Format:Sf,RGB_S3TC_DXT1_Format:wc,RGFormat:Z0,RGIntegerFormat:fd,RawShaderMaterial:Z_,Ray:pa,Raycaster:Sv,Rec709Primaries:fo,RectAreaLight:dv,RedFormat:Y0,RedIntegerFormat:hd,ReinhardToneMapping:z0,RenderTarget:m_,RepeatWrapping:ao,ReplaceStencilOp:Vy,ReverseSubtractEquation:y0,RingGeometry:ou,SIGNED_RED_GREEN_RGTC2_Format:Xf,SIGNED_RED_RGTC1_Format:Gf,SRGBColorSpace:rn,SRGBTransfer:Dt,Scene:Td,ShaderChunk:ct,ShaderLib:mi,ShaderMaterial:Ni,ShadowMaterial:Y_,Shape:os,ShapeGeometry:lu,ShapePath:dA,ShapeUtils:Ui,ShortType:G0,Skeleton:jc,SkeletonHelper:eA,SkinnedMesh:U_,Source:ts,Sphere:_i,SphereGeometry:No,Spherical:JT,SphericalHarmonics3:pv,SplineCurve:Dd,SpotLight:cv,SpotLightHelper:$T,Sprite:L_,SpriteMaterial:Ad,SrcAlphaFactor:rd,SrcAlphaSaturateFactor:R0,SrcColorFactor:M0,StaticCopyUsage:ax,StaticDrawUsage:mo,StaticReadUsage:ix,StereoCamera:bT,StreamCopyUsage:lx,StreamDrawUsage:nx,StreamReadUsage:sx,StringKeyframeTrack:ps,SubtractEquation:v0,SubtractiveBlending:_f,TOUCH:Ly,TangentSpaceNormalMap:Rr,TetrahedronGeometry:cu,Texture:Kt,TextureLoader:yT,TorusGeometry:uu,TorusKnotGeometry:hu,Triangle:Bn,TriangleFanDrawMode:ky,TriangleStripDrawMode:zy,TrianglesDrawMode:By,TubeGeometry:fu,TwoPassDoubleSide:Uy,UVMapping:Hc,Uint16BufferAttribute:yd,Uint32BufferAttribute:xd,Uint8BufferAttribute:Gx,Uint8ClampedBufferAttribute:Wx,Uniform:Xd,UniformsGroup:qT,UniformsLib:we,UniformsUtils:v_,UnsignedByteType:Ii,UnsignedInt248Type:Mr,UnsignedIntType:Qi,UnsignedShort4444Type:cd,UnsignedShort5551Type:ud,UnsignedShortType:Vc,VSMShadowMap:pi,Vector2:ce,Vector3:D,Vector4:Rt,VectorKeyframeTrack:Eo,VideoTexture:Lw,WebGL1Renderer:C_,WebGL3DRenderTarget:Cx,WebGLArrayRenderTarget:Rx,WebGLCoordinateSystem:Pi,WebGLCubeRenderTarget:x_,WebGLMultipleRenderTargets:Px,WebGLRenderTarget:gi,WebGLRenderer:wd,WebGLUtils:A_,WebGPUCoordinateSystem:go,WireframeGeometry:q_,WrapAroundEnding:uo,ZeroCurvatureEnding:$r,ZeroFactor:x0,ZeroSlopeEnding:es,ZeroStencilOp:Hy,_SRGBAFormat:Nc,createCanvasElement:p_,sRGBEncoding:wr},Symbol.toStringTag,{value:"Module"}));var tf={exports:{}},xr={};/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var jg;function pA(){return jg||(jg=1,xr.ConcurrentRoot=1,xr.ContinuousEventPriority=4,xr.DefaultEventPriority=16,xr.DiscreteEventPriority=1,xr.IdleEventPriority=536870912,xr.LegacyRoot=0),xr}var Qg;function mA(){return Qg||(Qg=1,tf.exports=pA()),tf.exports}var sa=mA();function gA(r){let e;const t=new Set,n=(h,d)=>{const p=typeof h=="function"?h(e):h;if(p!==e){const m=e;e=d?p:Object.assign({},e,p),t.forEach(_=>_(e,m))}},i=()=>e,s=(h,d=i,p=Object.is)=>{console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let m=d(e);function _(){const y=d(e);if(!p(m,y)){const E=m;h(m=y,E)}}return t.add(_),()=>t.delete(_)},u={setState:n,getState:i,subscribe:(h,d,p)=>d||p?s(h,d,p):(t.add(h),()=>t.delete(h)),destroy:()=>t.clear()};return e=r(n,i,u),u}const _A=typeof window>"u"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),$g=_A?fn.useEffect:fn.useLayoutEffect;function vA(r){const e=typeof r=="function"?gA(r):r,t=(n=e.getState,i=Object.is)=>{const[,s]=fn.useReducer(x=>x+1,0),l=e.getState(),c=fn.useRef(l),u=fn.useRef(n),h=fn.useRef(i),d=fn.useRef(!1),p=fn.useRef();p.current===void 0&&(p.current=n(l));let m,_=!1;(c.current!==l||u.current!==n||h.current!==i||d.current)&&(m=n(l),_=!i(p.current,m)),$g(()=>{_&&(p.current=m),c.current=l,u.current=n,h.current=i,d.current=!1});const y=fn.useRef(l);$g(()=>{const x=()=>{try{const w=e.getState(),M=u.current(w);h.current(p.current,M)||(c.current=w,p.current=M,s())}catch{d.current=!0,s()}},v=e.subscribe(x);return e.getState()!==y.current&&x(),v},[]);const E=_?m:p.current;return fn.useDebugValue(E),E};return Object.assign(t,e),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const n=[t,e];return{next(){const i=n.length<=0;return{value:n.shift(),done:i}}}},t}const yA=r=>typeof r=="object"&&typeof r.then=="function",is=[];function Ev(r,e,t=(n,i)=>n===i){if(r===e)return!0;if(!r||!e)return!1;const n=r.length;if(e.length!==n)return!1;for(let i=0;i<n;i++)if(!t(r[i],e[i]))return!1;return!0}function wv(r,e=null,t=!1,n={}){e===null&&(e=[r]);for(const s of is)if(Ev(e,s.keys,s.equal)){if(t)return;if(Object.prototype.hasOwnProperty.call(s,"error"))throw s.error;if(Object.prototype.hasOwnProperty.call(s,"response"))return n.lifespan&&n.lifespan>0&&(s.timeout&&clearTimeout(s.timeout),s.timeout=setTimeout(s.remove,n.lifespan)),s.response;if(!t)throw s.promise}const i={keys:e,equal:n.equal,remove:()=>{const s=is.indexOf(i);s!==-1&&is.splice(s,1)},promise:(yA(r)?r:r(...e)).then(s=>{i.response=s,n.lifespan&&n.lifespan>0&&(i.timeout=setTimeout(i.remove,n.lifespan))}).catch(s=>i.error=s)};if(is.push(i),!t)throw i.promise}const xA=(r,e,t)=>wv(r,e,!1,t),SA=(r,e,t)=>void wv(r,e,!0,t),MA=r=>{if(r===void 0||r.length===0)is.splice(0,is.length);else{const e=is.find(t=>Ev(r,t.keys,t.equal));e&&e.remove()}};var nf={exports:{}},rf={exports:{}},sf={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var e0;function EA(){return e0||(e0=1,function(r){function e(q,X){var Y=q.length;q.push(X);e:for(;0<Y;){var k=Y-1>>>1,Q=q[k];if(0<i(Q,X))q[k]=X,q[Y]=Q,Y=k;else break e}}function t(q){return q.length===0?null:q[0]}function n(q){if(q.length===0)return null;var X=q[0],Y=q.pop();if(Y!==X){q[0]=Y;e:for(var k=0,Q=q.length,fe=Q>>>1;k<fe;){var Me=2*(k+1)-1,Te=q[Me],Oe=Me+1,Be=q[Oe];if(0>i(Te,Y))Oe<Q&&0>i(Be,Te)?(q[k]=Be,q[Oe]=Y,k=Oe):(q[k]=Te,q[Me]=Y,k=Me);else if(Oe<Q&&0>i(Be,Y))q[k]=Be,q[Oe]=Y,k=Oe;else break e}}return X}function i(q,X){var Y=q.sortIndex-X.sortIndex;return Y!==0?Y:q.id-X.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;r.unstable_now=function(){return s.now()}}else{var l=Date,c=l.now();r.unstable_now=function(){return l.now()-c}}var u=[],h=[],d=1,p=null,m=3,_=!1,y=!1,E=!1,x=typeof setTimeout=="function"?setTimeout:null,v=typeof clearTimeout=="function"?clearTimeout:null,w=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function M(q){for(var X=t(h);X!==null;){if(X.callback===null)n(h);else if(X.startTime<=q)n(h),X.sortIndex=X.expirationTime,e(u,X);else break;X=t(h)}}function A(q){if(E=!1,M(q),!y)if(t(u)!==null)y=!0,ae(R);else{var X=t(h);X!==null&&se(A,X.startTime-q)}}function R(q,X){y=!1,E&&(E=!1,v(F),F=-1),_=!0;var Y=m;try{for(M(X),p=t(u);p!==null&&(!(p.expirationTime>X)||q&&!H());){var k=p.callback;if(typeof k=="function"){p.callback=null,m=p.priorityLevel;var Q=k(p.expirationTime<=X);X=r.unstable_now(),typeof Q=="function"?p.callback=Q:p===t(u)&&n(u),M(X)}else n(u);p=t(u)}if(p!==null)var fe=!0;else{var Me=t(h);Me!==null&&se(A,Me.startTime-X),fe=!1}return fe}finally{p=null,m=Y,_=!1}}var P=!1,I=null,F=-1,b=5,L=-1;function H(){return!(r.unstable_now()-L<b)}function ee(){if(I!==null){var q=r.unstable_now();L=q;var X=!0;try{X=I(!0,q)}finally{X?oe():(P=!1,I=null)}}else P=!1}var oe;if(typeof w=="function")oe=function(){w(ee)};else if(typeof MessageChannel<"u"){var V=new MessageChannel,$=V.port2;V.port1.onmessage=ee,oe=function(){$.postMessage(null)}}else oe=function(){x(ee,0)};function ae(q){I=q,P||(P=!0,oe())}function se(q,X){F=x(function(){q(r.unstable_now())},X)}r.unstable_IdlePriority=5,r.unstable_ImmediatePriority=1,r.unstable_LowPriority=4,r.unstable_NormalPriority=3,r.unstable_Profiling=null,r.unstable_UserBlockingPriority=2,r.unstable_cancelCallback=function(q){q.callback=null},r.unstable_continueExecution=function(){y||_||(y=!0,ae(R))},r.unstable_forceFrameRate=function(q){0>q||125<q?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):b=0<q?Math.floor(1e3/q):5},r.unstable_getCurrentPriorityLevel=function(){return m},r.unstable_getFirstCallbackNode=function(){return t(u)},r.unstable_next=function(q){switch(m){case 1:case 2:case 3:var X=3;break;default:X=m}var Y=m;m=X;try{return q()}finally{m=Y}},r.unstable_pauseExecution=function(){},r.unstable_requestPaint=function(){},r.unstable_runWithPriority=function(q,X){switch(q){case 1:case 2:case 3:case 4:case 5:break;default:q=3}var Y=m;m=q;try{return X()}finally{m=Y}},r.unstable_scheduleCallback=function(q,X,Y){var k=r.unstable_now();switch(typeof Y=="object"&&Y!==null?(Y=Y.delay,Y=typeof Y=="number"&&0<Y?k+Y:k):Y=k,q){case 1:var Q=-1;break;case 2:Q=250;break;case 5:Q=1073741823;break;case 4:Q=1e4;break;default:Q=5e3}return Q=Y+Q,q={id:d++,callback:X,priorityLevel:q,startTime:Y,expirationTime:Q,sortIndex:-1},Y>k?(q.sortIndex=Y,e(h,q),t(u)===null&&q===t(h)&&(E?(v(F),F=-1):E=!0,se(A,Y-k))):(q.sortIndex=Q,e(u,q),y||_||(y=!0,ae(R))),q},r.unstable_shouldYield=H,r.unstable_wrapCallback=function(q){var X=m;return function(){var Y=m;m=X;try{return q.apply(this,arguments)}finally{m=Y}}}}(sf)),sf}var t0;function Tv(){return t0||(t0=1,rf.exports=EA()),rf.exports}/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var af,n0;function wA(){return n0||(n0=1,af=function(e){var t={},n=Ry(),i=Tv(),s=Object.assign;function l(a){for(var o="https://reactjs.org/docs/error-decoder.html?invariant="+a,f=1;f<arguments.length;f++)o+="&args[]="+encodeURIComponent(arguments[f]);return"Minified React error #"+a+"; visit "+o+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var c=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,u=Symbol.for("react.element"),h=Symbol.for("react.portal"),d=Symbol.for("react.fragment"),p=Symbol.for("react.strict_mode"),m=Symbol.for("react.profiler"),_=Symbol.for("react.provider"),y=Symbol.for("react.context"),E=Symbol.for("react.forward_ref"),x=Symbol.for("react.suspense"),v=Symbol.for("react.suspense_list"),w=Symbol.for("react.memo"),M=Symbol.for("react.lazy"),A=Symbol.for("react.offscreen"),R=Symbol.iterator;function P(a){return a===null||typeof a!="object"?null:(a=R&&a[R]||a["@@iterator"],typeof a=="function"?a:null)}function I(a){if(a==null)return null;if(typeof a=="function")return a.displayName||a.name||null;if(typeof a=="string")return a;switch(a){case d:return"Fragment";case h:return"Portal";case m:return"Profiler";case p:return"StrictMode";case x:return"Suspense";case v:return"SuspenseList"}if(typeof a=="object")switch(a.$$typeof){case y:return(a.displayName||"Context")+".Consumer";case _:return(a._context.displayName||"Context")+".Provider";case E:var o=a.render;return a=a.displayName,a||(a=o.displayName||o.name||"",a=a!==""?"ForwardRef("+a+")":"ForwardRef"),a;case w:return o=a.displayName||null,o!==null?o:I(a.type)||"Memo";case M:o=a._payload,a=a._init;try{return I(a(o))}catch{}}return null}function F(a){var o=a.type;switch(a.tag){case 24:return"Cache";case 9:return(o.displayName||"Context")+".Consumer";case 10:return(o._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return a=o.render,a=a.displayName||a.name||"",o.displayName||(a!==""?"ForwardRef("+a+")":"ForwardRef");case 7:return"Fragment";case 5:return o;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return I(o);case 8:return o===p?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o}return null}function b(a){var o=a,f=a;if(a.alternate)for(;o.return;)o=o.return;else{a=o;do o=a,(o.flags&4098)!==0&&(f=o.return),a=o.return;while(a)}return o.tag===3?f:null}function L(a){if(b(a)!==a)throw Error(l(188))}function H(a){var o=a.alternate;if(!o){if(o=b(a),o===null)throw Error(l(188));return o!==a?null:a}for(var f=a,g=o;;){var S=f.return;if(S===null)break;var T=S.alternate;if(T===null){if(g=S.return,g!==null){f=g;continue}break}if(S.child===T.child){for(T=S.child;T;){if(T===f)return L(S),a;if(T===g)return L(S),o;T=T.sibling}throw Error(l(188))}if(f.return!==g.return)f=S,g=T;else{for(var N=!1,G=S.child;G;){if(G===f){N=!0,f=S,g=T;break}if(G===g){N=!0,g=S,f=T;break}G=G.sibling}if(!N){for(G=T.child;G;){if(G===f){N=!0,f=T,g=S;break}if(G===g){N=!0,g=T,f=S;break}G=G.sibling}if(!N)throw Error(l(189))}}if(f.alternate!==g)throw Error(l(190))}if(f.tag!==3)throw Error(l(188));return f.stateNode.current===f?a:o}function ee(a){return a=H(a),a!==null?oe(a):null}function oe(a){if(a.tag===5||a.tag===6)return a;for(a=a.child;a!==null;){var o=oe(a);if(o!==null)return o;a=a.sibling}return null}function V(a){if(a.tag===5||a.tag===6)return a;for(a=a.child;a!==null;){if(a.tag!==4){var o=V(a);if(o!==null)return o}a=a.sibling}return null}var $=Array.isArray,ae=e.getPublicInstance,se=e.getRootHostContext,q=e.getChildHostContext,X=e.prepareForCommit,Y=e.resetAfterCommit,k=e.createInstance,Q=e.appendInitialChild,fe=e.finalizeInitialChildren,Me=e.prepareUpdate,Te=e.shouldSetTextContent,Oe=e.createTextInstance,Be=e.scheduleTimeout,Xe=e.cancelTimeout,_t=e.noTimeout,Tt=e.isPrimaryRenderer,ze=e.supportsMutation,z=e.supportsPersistence,pe=e.supportsHydration,le=e.getInstanceFromNode,ve=e.preparePortalMount,ue=e.getCurrentEventPriority,We=e.detachDeletedInstance,Pe=e.supportsMicrotasks,Ne=e.scheduleMicrotask,Ke=e.supportsTestSelectors,gt=e.findFiberRoot,Ft=e.getBoundingRect,O=e.getTextContent,C=e.isHiddenSubtree,j=e.matchAccessibilityRole,me=e.setFocusIfFocusable,de=e.setupIntersectionObserver,ge=e.appendChild,ke=e.appendChildToContainer,xe=e.commitTextUpdate,Re=e.commitMount,Qe=e.commitUpdate,vt=e.insertBefore,ye=e.insertInContainerBefore,wt=e.removeChild,rt=e.removeChildFromContainer,je=e.resetTextContent,Ze=e.hideInstance,B=e.hideTextInstance,Ee=e.unhideInstance,Se=e.unhideTextInstance,Le=e.clearContainer,be=e.cloneInstance,he=e.createContainerChildSet,Ve=e.appendChildToContainerChildSet,st=e.finalizeContainerChildren,on=e.replaceContainerChildren,Ct=e.cloneHiddenInstance,Gn=e.cloneHiddenTextInstance,pn=e.canHydrateInstance,Fo=e.canHydrateTextInstance,Bo=e.canHydrateSuspenseInstance,zo=e.isSuspenseInstancePending,rr=e.isSuspenseInstanceFallback,ko=e.registerSuspenseInstanceRetry,xi=e.getNextHydratableSibling,Ho=e.getFirstHydratableChild,mu=e.getFirstHydratableChildWithinContainer,gu=e.getFirstHydratableChildWithinSuspenseInstance,_u=e.hydrateInstance,U=e.hydrateTextInstance,Z=e.hydrateSuspenseInstance,ie=e.getNextHydratableInstanceAfterSuspenseInstance,K=e.commitHydratedContainer,re=e.commitHydratedSuspenseInstance,Ie=e.clearSuspenseBoundary,qe=e.clearSuspenseBoundaryFromContainer,$e=e.shouldDeleteUnhydratedTailInstances,et=e.didNotMatchHydratedContainerTextInstance,dt=e.didNotMatchHydratedTextInstance,Je;function nt(a){if(Je===void 0)try{throw Error()}catch(f){var o=f.stack.trim().match(/\n( *(at )?)/);Je=o&&o[1]||""}return`
`+Je+a}var Ut=!1;function Ot(a,o){if(!a||Ut)return"";Ut=!0;var f=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(o)if(o=function(){throw Error()},Object.defineProperty(o.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(o,[])}catch(_e){var g=_e}Reflect.construct(a,[],o)}else{try{o.call()}catch(_e){g=_e}a.call(o.prototype)}else{try{throw Error()}catch(_e){g=_e}a()}}catch(_e){if(_e&&g&&typeof _e.stack=="string"){for(var S=_e.stack.split(`
`),T=g.stack.split(`
`),N=S.length-1,G=T.length-1;1<=N&&0<=G&&S[N]!==T[G];)G--;for(;1<=N&&0<=G;N--,G--)if(S[N]!==T[G]){if(N!==1||G!==1)do if(N--,G--,0>G||S[N]!==T[G]){var ne=`
`+S[N].replace(" at new "," at ");return a.displayName&&ne.includes("<anonymous>")&&(ne=ne.replace("<anonymous>",a.displayName)),ne}while(1<=N&&0<=G);break}}}finally{Ut=!1,Error.prepareStackTrace=f}return(a=a?a.displayName||a.name:"")?nt(a):""}var Un=Object.prototype.hasOwnProperty,Wn=[],Pt=-1;function it(a){return{current:a}}function At(a){0>Pt||(a.current=Wn[Pt],Wn[Pt]=null,Pt--)}function tt(a,o){Pt++,Wn[Pt]=a.current,a.current=o}var _n={},tn=it(_n),jt=it(!1),li=_n;function Ht(a,o){var f=a.type.contextTypes;if(!f)return _n;var g=a.stateNode;if(g&&g.__reactInternalMemoizedUnmaskedChildContext===o)return g.__reactInternalMemoizedMaskedChildContext;var S={},T;for(T in f)S[T]=o[T];return g&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=o,a.__reactInternalMemoizedMaskedChildContext=S),S}function Vt(a){return a=a.childContextTypes,a!=null}function sr(){At(jt),At(tn)}function vn(a,o,f){if(tn.current!==_n)throw Error(l(168));tt(tn,o),tt(jt,f)}function ms(a,o,f){var g=a.stateNode;if(o=o.childContextTypes,typeof g.getChildContext!="function")return f;g=g.getChildContext();for(var S in g)if(!(S in o))throw Error(l(108,F(a)||"Unknown",S));return s({},f,g)}function gs(a){return a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||_n,li=tn.current,tt(tn,a),tt(jt,jt.current),!0}function va(a,o,f){var g=a.stateNode;if(!g)throw Error(l(169));f?(a=ms(a,o,li),g.__reactInternalMemoizedMergedChildContext=a,At(jt),At(tn),tt(tn,a)):At(jt),tt(jt,f)}var ci=Math.clz32?Math.clz32:zv,Fv=Math.log,Bv=Math.LN2;function zv(a){return a>>>=0,a===0?32:31-(Fv(a)/Bv|0)|0}var Vo=64,Go=4194304;function ya(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return a}}function Wo(a,o){var f=a.pendingLanes;if(f===0)return 0;var g=0,S=a.suspendedLanes,T=a.pingedLanes,N=f&268435455;if(N!==0){var G=N&~S;G!==0?g=ya(G):(T&=N,T!==0&&(g=ya(T)))}else N=f&~S,N!==0?g=ya(N):T!==0&&(g=ya(T));if(g===0)return 0;if(o!==0&&o!==g&&(o&S)===0&&(S=g&-g,T=o&-o,S>=T||S===16&&(T&4194240)!==0))return o;if((g&4)!==0&&(g|=f&16),o=a.entangledLanes,o!==0)for(a=a.entanglements,o&=g;0<o;)f=31-ci(o),S=1<<f,g|=a[f],o&=~S;return g}function kv(a,o){switch(a){case 1:case 2:case 4:return o+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function Hv(a,o){for(var f=a.suspendedLanes,g=a.pingedLanes,S=a.expirationTimes,T=a.pendingLanes;0<T;){var N=31-ci(T),G=1<<N,ne=S[N];ne===-1?((G&f)===0||(G&g)!==0)&&(S[N]=kv(G,o)):ne<=o&&(a.expiredLanes|=G),T&=~G}}function vu(a){return a=a.pendingLanes&-1073741825,a!==0?a:a&1073741824?1073741824:0}function yu(a){for(var o=[],f=0;31>f;f++)o.push(a);return o}function xa(a,o,f){a.pendingLanes|=o,o!==536870912&&(a.suspendedLanes=0,a.pingedLanes=0),a=a.eventTimes,o=31-ci(o),a[o]=f}function Vv(a,o){var f=a.pendingLanes&~o;a.pendingLanes=o,a.suspendedLanes=0,a.pingedLanes=0,a.expiredLanes&=o,a.mutableReadLanes&=o,a.entangledLanes&=o,o=a.entanglements;var g=a.eventTimes;for(a=a.expirationTimes;0<f;){var S=31-ci(f),T=1<<S;o[S]=0,g[S]=-1,a[S]=-1,f&=~T}}function xu(a,o){var f=a.entangledLanes|=o;for(a=a.entanglements;f;){var g=31-ci(f),S=1<<g;S&o|a[g]&o&&(a[g]|=o),f&=~S}}var xt=0;function Yd(a){return a&=-a,1<a?4<a?(a&268435455)!==0?16:536870912:4:1}var Su=i.unstable_scheduleCallback,Zd=i.unstable_cancelCallback,Gv=i.unstable_shouldYield,Wv=i.unstable_requestPaint,ln=i.unstable_now,Mu=i.unstable_ImmediatePriority,Xv=i.unstable_UserBlockingPriority,Eu=i.unstable_NormalPriority,qv=i.unstable_IdlePriority,Xo=null,Si=null;function Yv(a){if(Si&&typeof Si.onCommitFiberRoot=="function")try{Si.onCommitFiberRoot(Xo,a,void 0,(a.current.flags&128)===128)}catch{}}function Zv(a,o){return a===o&&(a!==0||1/a===1/o)||a!==a&&o!==o}var Mi=typeof Object.is=="function"?Object.is:Zv,Bi=null,qo=!1,wu=!1;function Jd(a){Bi===null?Bi=[a]:Bi.push(a)}function Jv(a){qo=!0,Jd(a)}function Ei(){if(!wu&&Bi!==null){wu=!0;var a=0,o=xt;try{var f=Bi;for(xt=1;a<f.length;a++){var g=f[a];do g=g(!0);while(g!==null)}Bi=null,qo=!1}catch(S){throw Bi!==null&&(Bi=Bi.slice(a+1)),Su(Mu,Ei),S}finally{xt=o,wu=!1}}return null}var Kv=c.ReactCurrentBatchConfig;function Yo(a,o){if(Mi(a,o))return!0;if(typeof a!="object"||a===null||typeof o!="object"||o===null)return!1;var f=Object.keys(a),g=Object.keys(o);if(f.length!==g.length)return!1;for(g=0;g<f.length;g++){var S=f[g];if(!Un.call(o,S)||!Mi(a[S],o[S]))return!1}return!0}function jv(a){switch(a.tag){case 5:return nt(a.type);case 16:return nt("Lazy");case 13:return nt("Suspense");case 19:return nt("SuspenseList");case 0:case 2:case 15:return a=Ot(a.type,!1),a;case 11:return a=Ot(a.type.render,!1),a;case 1:return a=Ot(a.type,!0),a;default:return""}}function ui(a,o){if(a&&a.defaultProps){o=s({},o),a=a.defaultProps;for(var f in a)o[f]===void 0&&(o[f]=a[f]);return o}return o}var Zo=it(null),Jo=null,_s=null,Tu=null;function Au(){Tu=_s=Jo=null}function Kd(a,o,f){Tt?(tt(Zo,o._currentValue),o._currentValue=f):(tt(Zo,o._currentValue2),o._currentValue2=f)}function bu(a){var o=Zo.current;At(Zo),Tt?a._currentValue=o:a._currentValue2=o}function Ru(a,o,f){for(;a!==null;){var g=a.alternate;if((a.childLanes&o)!==o?(a.childLanes|=o,g!==null&&(g.childLanes|=o)):g!==null&&(g.childLanes&o)!==o&&(g.childLanes|=o),a===f)break;a=a.return}}function vs(a,o){Jo=a,Tu=_s=null,a=a.dependencies,a!==null&&a.firstContext!==null&&((a.lanes&o)!==0&&(Yn=!0),a.firstContext=null)}function $n(a){var o=Tt?a._currentValue:a._currentValue2;if(Tu!==a)if(a={context:a,memoizedValue:o,next:null},_s===null){if(Jo===null)throw Error(l(308));_s=a,Jo.dependencies={lanes:0,firstContext:a}}else _s=_s.next=a;return o}var wi=null,ar=!1;function Cu(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function jd(a,o){a=a.updateQueue,o.updateQueue===a&&(o.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function zi(a,o){return{eventTime:a,lane:o,tag:0,payload:null,callback:null,next:null}}function or(a,o){var f=a.updateQueue;f!==null&&(f=f.shared,Qt!==null&&(a.mode&1)!==0&&(pt&2)===0?(a=f.interleaved,a===null?(o.next=o,wi===null?wi=[f]:wi.push(f)):(o.next=a.next,a.next=o),f.interleaved=o):(a=f.pending,a===null?o.next=o:(o.next=a.next,a.next=o),f.pending=o))}function Ko(a,o,f){if(o=o.updateQueue,o!==null&&(o=o.shared,(f&4194240)!==0)){var g=o.lanes;g&=a.pendingLanes,f|=g,o.lanes=f,xu(a,f)}}function Qd(a,o){var f=a.updateQueue,g=a.alternate;if(g!==null&&(g=g.updateQueue,f===g)){var S=null,T=null;if(f=f.firstBaseUpdate,f!==null){do{var N={eventTime:f.eventTime,lane:f.lane,tag:f.tag,payload:f.payload,callback:f.callback,next:null};T===null?S=T=N:T=T.next=N,f=f.next}while(f!==null);T===null?S=T=o:T=T.next=o}else S=T=o;f={baseState:g.baseState,firstBaseUpdate:S,lastBaseUpdate:T,shared:g.shared,effects:g.effects},a.updateQueue=f;return}a=f.lastBaseUpdate,a===null?f.firstBaseUpdate=o:a.next=o,f.lastBaseUpdate=o}function jo(a,o,f,g){var S=a.updateQueue;ar=!1;var T=S.firstBaseUpdate,N=S.lastBaseUpdate,G=S.shared.pending;if(G!==null){S.shared.pending=null;var ne=G,_e=ne.next;ne.next=null,N===null?T=_e:N.next=_e,N=ne;var Ue=a.alternate;Ue!==null&&(Ue=Ue.updateQueue,G=Ue.lastBaseUpdate,G!==N&&(G===null?Ue.firstBaseUpdate=_e:G.next=_e,Ue.lastBaseUpdate=ne))}if(T!==null){var at=S.baseState;N=0,Ue=_e=ne=null,G=T;do{var Ye=G.lane,Lt=G.eventTime;if((g&Ye)===Ye){Ue!==null&&(Ue=Ue.next={eventTime:Lt,lane:0,tag:G.tag,payload:G.payload,callback:G.callback,next:null});e:{var Ge=a,Mn=G;switch(Ye=o,Lt=f,Mn.tag){case 1:if(Ge=Mn.payload,typeof Ge=="function"){at=Ge.call(Lt,at,Ye);break e}at=Ge;break e;case 3:Ge.flags=Ge.flags&-65537|128;case 0:if(Ge=Mn.payload,Ye=typeof Ge=="function"?Ge.call(Lt,at,Ye):Ge,Ye==null)break e;at=s({},at,Ye);break e;case 2:ar=!0}}G.callback!==null&&G.lane!==0&&(a.flags|=64,Ye=S.effects,Ye===null?S.effects=[G]:Ye.push(G))}else Lt={eventTime:Lt,lane:Ye,tag:G.tag,payload:G.payload,callback:G.callback,next:null},Ue===null?(_e=Ue=Lt,ne=at):Ue=Ue.next=Lt,N|=Ye;if(G=G.next,G===null){if(G=S.shared.pending,G===null)break;Ye=G,G=Ye.next,Ye.next=null,S.lastBaseUpdate=Ye,S.shared.pending=null}}while(!0);if(Ue===null&&(ne=at),S.baseState=ne,S.firstBaseUpdate=_e,S.lastBaseUpdate=Ue,o=S.shared.interleaved,o!==null){S=o;do N|=S.lane,S=S.next;while(S!==o)}else T===null&&(S.shared.lanes=0);bs|=N,a.lanes=N,a.memoizedState=at}}function $d(a,o,f){if(a=o.effects,o.effects=null,a!==null)for(o=0;o<a.length;o++){var g=a[o],S=g.callback;if(S!==null){if(g.callback=null,g=f,typeof S!="function")throw Error(l(191,S));S.call(g)}}}var ep=new n.Component().refs;function Pu(a,o,f,g){o=a.memoizedState,f=f(g,o),f=f==null?o:s({},o,f),a.memoizedState=f,a.lanes===0&&(a.updateQueue.baseState=f)}var Qo={isMounted:function(a){return(a=a._reactInternals)?b(a)===a:!1},enqueueSetState:function(a,o,f){a=a._reactInternals;var g=Rn(),S=ur(a),T=zi(g,S);T.payload=o,f!=null&&(T.callback=f),or(a,T),o=ri(a,S,g),o!==null&&Ko(o,a,S)},enqueueReplaceState:function(a,o,f){a=a._reactInternals;var g=Rn(),S=ur(a),T=zi(g,S);T.tag=1,T.payload=o,f!=null&&(T.callback=f),or(a,T),o=ri(a,S,g),o!==null&&Ko(o,a,S)},enqueueForceUpdate:function(a,o){a=a._reactInternals;var f=Rn(),g=ur(a),S=zi(f,g);S.tag=2,o!=null&&(S.callback=o),or(a,S),o=ri(a,g,f),o!==null&&Ko(o,a,g)}};function tp(a,o,f,g,S,T,N){return a=a.stateNode,typeof a.shouldComponentUpdate=="function"?a.shouldComponentUpdate(g,T,N):o.prototype&&o.prototype.isPureReactComponent?!Yo(f,g)||!Yo(S,T):!0}function np(a,o,f){var g=!1,S=_n,T=o.contextType;return typeof T=="object"&&T!==null?T=$n(T):(S=Vt(o)?li:tn.current,g=o.contextTypes,T=(g=g!=null)?Ht(a,S):_n),o=new o(f,T),a.memoizedState=o.state!==null&&o.state!==void 0?o.state:null,o.updater=Qo,a.stateNode=o,o._reactInternals=a,g&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=S,a.__reactInternalMemoizedMaskedChildContext=T),o}function ip(a,o,f,g){a=o.state,typeof o.componentWillReceiveProps=="function"&&o.componentWillReceiveProps(f,g),typeof o.UNSAFE_componentWillReceiveProps=="function"&&o.UNSAFE_componentWillReceiveProps(f,g),o.state!==a&&Qo.enqueueReplaceState(o,o.state,null)}function Lu(a,o,f,g){var S=a.stateNode;S.props=f,S.state=a.memoizedState,S.refs=ep,Cu(a);var T=o.contextType;typeof T=="object"&&T!==null?S.context=$n(T):(T=Vt(o)?li:tn.current,S.context=Ht(a,T)),S.state=a.memoizedState,T=o.getDerivedStateFromProps,typeof T=="function"&&(Pu(a,o,T,f),S.state=a.memoizedState),typeof o.getDerivedStateFromProps=="function"||typeof S.getSnapshotBeforeUpdate=="function"||typeof S.UNSAFE_componentWillMount!="function"&&typeof S.componentWillMount!="function"||(o=S.state,typeof S.componentWillMount=="function"&&S.componentWillMount(),typeof S.UNSAFE_componentWillMount=="function"&&S.UNSAFE_componentWillMount(),o!==S.state&&Qo.enqueueReplaceState(S,S.state,null),jo(a,f,S,g),S.state=a.memoizedState),typeof S.componentDidMount=="function"&&(a.flags|=4194308)}var ys=[],xs=0,$o=null,el=0,ei=[],ti=0,Ir=null,ki=1,Hi="";function Ur(a,o){ys[xs++]=el,ys[xs++]=$o,$o=a,el=o}function rp(a,o,f){ei[ti++]=ki,ei[ti++]=Hi,ei[ti++]=Ir,Ir=a;var g=ki;a=Hi;var S=32-ci(g)-1;g&=~(1<<S),f+=1;var T=32-ci(o)+S;if(30<T){var N=S-S%5;T=(g&(1<<N)-1).toString(32),g>>=N,S-=N,ki=1<<32-ci(o)+S|f<<S|g,Hi=T+a}else ki=1<<T|f<<S|g,Hi=a}function Iu(a){a.return!==null&&(Ur(a,1),rp(a,1,0))}function Uu(a){for(;a===$o;)$o=ys[--xs],ys[xs]=null,el=ys[--xs],ys[xs]=null;for(;a===Ir;)Ir=ei[--ti],ei[ti]=null,Hi=ei[--ti],ei[ti]=null,ki=ei[--ti],ei[ti]=null}var Xn=null,qn=null,Bt=!1,Sa=!1,hi=null;function sp(a,o){var f=si(5,null,null,0);f.elementType="DELETED",f.stateNode=o,f.return=a,o=a.deletions,o===null?(a.deletions=[f],a.flags|=16):o.push(f)}function ap(a,o){switch(a.tag){case 5:return o=pn(o,a.type,a.pendingProps),o!==null?(a.stateNode=o,Xn=a,qn=Ho(o),!0):!1;case 6:return o=Fo(o,a.pendingProps),o!==null?(a.stateNode=o,Xn=a,qn=null,!0):!1;case 13:if(o=Bo(o),o!==null){var f=Ir!==null?{id:ki,overflow:Hi}:null;return a.memoizedState={dehydrated:o,treeContext:f,retryLane:1073741824},f=si(18,null,null,0),f.stateNode=o,f.return=a,a.child=f,Xn=a,qn=null,!0}return!1;default:return!1}}function Du(a){return(a.mode&1)!==0&&(a.flags&128)===0}function Nu(a){if(Bt){var o=qn;if(o){var f=o;if(!ap(a,o)){if(Du(a))throw Error(l(418));o=xi(f);var g=Xn;o&&ap(a,o)?sp(g,f):(a.flags=a.flags&-4097|2,Bt=!1,Xn=a)}}else{if(Du(a))throw Error(l(418));a.flags=a.flags&-4097|2,Bt=!1,Xn=a}}}function op(a){for(a=a.return;a!==null&&a.tag!==5&&a.tag!==3&&a.tag!==13;)a=a.return;Xn=a}function Ma(a){if(!pe||a!==Xn)return!1;if(!Bt)return op(a),Bt=!0,!1;if(a.tag!==3&&(a.tag!==5||$e(a.type)&&!Te(a.type,a.memoizedProps))){var o=qn;if(o){if(Du(a)){for(a=qn;a;)a=xi(a);throw Error(l(418))}for(;o;)sp(a,o),o=xi(o)}}if(op(a),a.tag===13){if(!pe)throw Error(l(316));if(a=a.memoizedState,a=a!==null?a.dehydrated:null,!a)throw Error(l(317));qn=ie(a)}else qn=Xn?xi(a.stateNode):null;return!0}function Ss(){pe&&(qn=Xn=null,Sa=Bt=!1)}function Ou(a){hi===null?hi=[a]:hi.push(a)}function Ea(a,o,f){if(a=f.ref,a!==null&&typeof a!="function"&&typeof a!="object"){if(f._owner){if(f=f._owner,f){if(f.tag!==1)throw Error(l(309));var g=f.stateNode}if(!g)throw Error(l(147,a));var S=g,T=""+a;return o!==null&&o.ref!==null&&typeof o.ref=="function"&&o.ref._stringRef===T?o.ref:(o=function(N){var G=S.refs;G===ep&&(G=S.refs={}),N===null?delete G[T]:G[T]=N},o._stringRef=T,o)}if(typeof a!="string")throw Error(l(284));if(!f._owner)throw Error(l(290,a))}return a}function tl(a,o){throw a=Object.prototype.toString.call(o),Error(l(31,a==="[object Object]"?"object with keys {"+Object.keys(o).join(", ")+"}":a))}function lp(a){var o=a._init;return o(a._payload)}function cp(a){function o(J,W){if(a){var te=J.deletions;te===null?(J.deletions=[W],J.flags|=16):te.push(W)}}function f(J,W){if(!a)return null;for(;W!==null;)o(J,W),W=W.sibling;return null}function g(J,W){for(J=new Map;W!==null;)W.key!==null?J.set(W.key,W):J.set(W.index,W),W=W.sibling;return J}function S(J,W){return J=fr(J,W),J.index=0,J.sibling=null,J}function T(J,W,te){return J.index=te,a?(te=J.alternate,te!==null?(te=te.index,te<W?(J.flags|=2,W):te):(J.flags|=2,W)):(J.flags|=1048576,W)}function N(J){return a&&J.alternate===null&&(J.flags|=2),J}function G(J,W,te,Ce){return W===null||W.tag!==6?(W=yh(te,J.mode,Ce),W.return=J,W):(W=S(W,te),W.return=J,W)}function ne(J,W,te,Ce){var He=te.type;return He===d?Ue(J,W,te.props.children,Ce,te.key):W!==null&&(W.elementType===He||typeof He=="object"&&He!==null&&He.$$typeof===M&&lp(He)===W.type)?(Ce=S(W,te.props),Ce.ref=Ea(J,W,te),Ce.return=J,Ce):(Ce=Il(te.type,te.key,te.props,null,J.mode,Ce),Ce.ref=Ea(J,W,te),Ce.return=J,Ce)}function _e(J,W,te,Ce){return W===null||W.tag!==4||W.stateNode.containerInfo!==te.containerInfo||W.stateNode.implementation!==te.implementation?(W=xh(te,J.mode,Ce),W.return=J,W):(W=S(W,te.children||[]),W.return=J,W)}function Ue(J,W,te,Ce,He){return W===null||W.tag!==7?(W=kr(te,J.mode,Ce,He),W.return=J,W):(W=S(W,te),W.return=J,W)}function at(J,W,te){if(typeof W=="string"&&W!==""||typeof W=="number")return W=yh(""+W,J.mode,te),W.return=J,W;if(typeof W=="object"&&W!==null){switch(W.$$typeof){case u:return te=Il(W.type,W.key,W.props,null,J.mode,te),te.ref=Ea(J,null,W),te.return=J,te;case h:return W=xh(W,J.mode,te),W.return=J,W;case M:var Ce=W._init;return at(J,Ce(W._payload),te)}if($(W)||P(W))return W=kr(W,J.mode,te,null),W.return=J,W;tl(J,W)}return null}function Ye(J,W,te,Ce){var He=W!==null?W.key:null;if(typeof te=="string"&&te!==""||typeof te=="number")return He!==null?null:G(J,W,""+te,Ce);if(typeof te=="object"&&te!==null){switch(te.$$typeof){case u:return te.key===He?ne(J,W,te,Ce):null;case h:return te.key===He?_e(J,W,te,Ce):null;case M:return He=te._init,Ye(J,W,He(te._payload),Ce)}if($(te)||P(te))return He!==null?null:Ue(J,W,te,Ce,null);tl(J,te)}return null}function Lt(J,W,te,Ce,He){if(typeof Ce=="string"&&Ce!==""||typeof Ce=="number")return J=J.get(te)||null,G(W,J,""+Ce,He);if(typeof Ce=="object"&&Ce!==null){switch(Ce.$$typeof){case u:return J=J.get(Ce.key===null?te:Ce.key)||null,ne(W,J,Ce,He);case h:return J=J.get(Ce.key===null?te:Ce.key)||null,_e(W,J,Ce,He);case M:var ht=Ce._init;return Lt(J,W,te,ht(Ce._payload),He)}if($(Ce)||P(Ce))return J=J.get(te)||null,Ue(W,J,Ce,He,null);tl(W,Ce)}return null}function Ge(J,W,te,Ce){for(var He=null,ht=null,ot=W,St=W=0,un=null;ot!==null&&St<te.length;St++){ot.index>St?(un=ot,ot=null):un=ot.sibling;var Mt=Ye(J,ot,te[St],Ce);if(Mt===null){ot===null&&(ot=un);break}a&&ot&&Mt.alternate===null&&o(J,ot),W=T(Mt,W,St),ht===null?He=Mt:ht.sibling=Mt,ht=Mt,ot=un}if(St===te.length)return f(J,ot),Bt&&Ur(J,St),He;if(ot===null){for(;St<te.length;St++)ot=at(J,te[St],Ce),ot!==null&&(W=T(ot,W,St),ht===null?He=ot:ht.sibling=ot,ht=ot);return Bt&&Ur(J,St),He}for(ot=g(J,ot);St<te.length;St++)un=Lt(ot,J,St,te[St],Ce),un!==null&&(a&&un.alternate!==null&&ot.delete(un.key===null?St:un.key),W=T(un,W,St),ht===null?He=un:ht.sibling=un,ht=un);return a&&ot.forEach(function(dr){return o(J,dr)}),Bt&&Ur(J,St),He}function Mn(J,W,te,Ce){var He=P(te);if(typeof He!="function")throw Error(l(150));if(te=He.call(te),te==null)throw Error(l(151));for(var ht=He=null,ot=W,St=W=0,un=null,Mt=te.next();ot!==null&&!Mt.done;St++,Mt=te.next()){ot.index>St?(un=ot,ot=null):un=ot.sibling;var dr=Ye(J,ot,Mt.value,Ce);if(dr===null){ot===null&&(ot=un);break}a&&ot&&dr.alternate===null&&o(J,ot),W=T(dr,W,St),ht===null?He=dr:ht.sibling=dr,ht=dr,ot=un}if(Mt.done)return f(J,ot),Bt&&Ur(J,St),He;if(ot===null){for(;!Mt.done;St++,Mt=te.next())Mt=at(J,Mt.value,Ce),Mt!==null&&(W=T(Mt,W,St),ht===null?He=Mt:ht.sibling=Mt,ht=Mt);return Bt&&Ur(J,St),He}for(ot=g(J,ot);!Mt.done;St++,Mt=te.next())Mt=Lt(ot,J,St,Mt.value,Ce),Mt!==null&&(a&&Mt.alternate!==null&&ot.delete(Mt.key===null?St:Mt.key),W=T(Mt,W,St),ht===null?He=Mt:ht.sibling=Mt,ht=Mt);return a&&ot.forEach(function(by){return o(J,by)}),Bt&&Ur(J,St),He}function ai(J,W,te,Ce){if(typeof te=="object"&&te!==null&&te.type===d&&te.key===null&&(te=te.props.children),typeof te=="object"&&te!==null){switch(te.$$typeof){case u:e:{for(var He=te.key,ht=W;ht!==null;){if(ht.key===He){if(He=te.type,He===d){if(ht.tag===7){f(J,ht.sibling),W=S(ht,te.props.children),W.return=J,J=W;break e}}else if(ht.elementType===He||typeof He=="object"&&He!==null&&He.$$typeof===M&&lp(He)===ht.type){f(J,ht.sibling),W=S(ht,te.props),W.ref=Ea(J,ht,te),W.return=J,J=W;break e}f(J,ht);break}else o(J,ht);ht=ht.sibling}te.type===d?(W=kr(te.props.children,J.mode,Ce,te.key),W.return=J,J=W):(Ce=Il(te.type,te.key,te.props,null,J.mode,Ce),Ce.ref=Ea(J,W,te),Ce.return=J,J=Ce)}return N(J);case h:e:{for(ht=te.key;W!==null;){if(W.key===ht)if(W.tag===4&&W.stateNode.containerInfo===te.containerInfo&&W.stateNode.implementation===te.implementation){f(J,W.sibling),W=S(W,te.children||[]),W.return=J,J=W;break e}else{f(J,W);break}else o(J,W);W=W.sibling}W=xh(te,J.mode,Ce),W.return=J,J=W}return N(J);case M:return ht=te._init,ai(J,W,ht(te._payload),Ce)}if($(te))return Ge(J,W,te,Ce);if(P(te))return Mn(J,W,te,Ce);tl(J,te)}return typeof te=="string"&&te!==""||typeof te=="number"?(te=""+te,W!==null&&W.tag===6?(f(J,W.sibling),W=S(W,te),W.return=J,J=W):(f(J,W),W=yh(te,J.mode,Ce),W.return=J,J=W),N(J)):f(J,W)}return ai}var Ms=cp(!0),up=cp(!1),wa={},ni=it(wa),Ta=it(wa),Es=it(wa);function Ti(a){if(a===wa)throw Error(l(174));return a}function Fu(a,o){tt(Es,o),tt(Ta,a),tt(ni,wa),a=se(o),At(ni),tt(ni,a)}function ws(){At(ni),At(Ta),At(Es)}function hp(a){var o=Ti(Es.current),f=Ti(ni.current);o=q(f,a.type,o),f!==o&&(tt(Ta,a),tt(ni,o))}function Bu(a){Ta.current===a&&(At(ni),At(Ta))}var zt=it(0);function nl(a){for(var o=a;o!==null;){if(o.tag===13){var f=o.memoizedState;if(f!==null&&(f=f.dehydrated,f===null||zo(f)||rr(f)))return o}else if(o.tag===19&&o.memoizedProps.revealOrder!==void 0){if((o.flags&128)!==0)return o}else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===a)break;for(;o.sibling===null;){if(o.return===null||o.return===a)return null;o=o.return}o.sibling.return=o.return,o=o.sibling}return null}var zu=[];function ku(){for(var a=0;a<zu.length;a++){var o=zu[a];Tt?o._workInProgressVersionPrimary=null:o._workInProgressVersionSecondary=null}zu.length=0}var il=c.ReactCurrentDispatcher,ii=c.ReactCurrentBatchConfig,Ts=0,Gt=null,yn=null,cn=null,rl=!1,Aa=!1,ba=0,Qv=0;function xn(){throw Error(l(321))}function Hu(a,o){if(o===null)return!1;for(var f=0;f<o.length&&f<a.length;f++)if(!Mi(a[f],o[f]))return!1;return!0}function Vu(a,o,f,g,S,T){if(Ts=T,Gt=o,o.memoizedState=null,o.updateQueue=null,o.lanes=0,il.current=a===null||a.memoizedState===null?ny:iy,a=f(g,S),Aa){T=0;do{if(Aa=!1,ba=0,25<=T)throw Error(l(301));T+=1,cn=yn=null,o.updateQueue=null,il.current=ry,a=f(g,S)}while(Aa)}if(il.current=cl,o=yn!==null&&yn.next!==null,Ts=0,cn=yn=Gt=null,rl=!1,o)throw Error(l(300));return a}function Gu(){var a=ba!==0;return ba=0,a}function Vi(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return cn===null?Gt.memoizedState=cn=a:cn=cn.next=a,cn}function Ai(){if(yn===null){var a=Gt.alternate;a=a!==null?a.memoizedState:null}else a=yn.next;var o=cn===null?Gt.memoizedState:cn.next;if(o!==null)cn=o,yn=a;else{if(a===null)throw Error(l(310));yn=a,a={memoizedState:yn.memoizedState,baseState:yn.baseState,baseQueue:yn.baseQueue,queue:yn.queue,next:null},cn===null?Gt.memoizedState=cn=a:cn=cn.next=a}return cn}function Dr(a,o){return typeof o=="function"?o(a):o}function sl(a){var o=Ai(),f=o.queue;if(f===null)throw Error(l(311));f.lastRenderedReducer=a;var g=yn,S=g.baseQueue,T=f.pending;if(T!==null){if(S!==null){var N=S.next;S.next=T.next,T.next=N}g.baseQueue=S=T,f.pending=null}if(S!==null){T=S.next,g=g.baseState;var G=N=null,ne=null,_e=T;do{var Ue=_e.lane;if((Ts&Ue)===Ue)ne!==null&&(ne=ne.next={lane:0,action:_e.action,hasEagerState:_e.hasEagerState,eagerState:_e.eagerState,next:null}),g=_e.hasEagerState?_e.eagerState:a(g,_e.action);else{var at={lane:Ue,action:_e.action,hasEagerState:_e.hasEagerState,eagerState:_e.eagerState,next:null};ne===null?(G=ne=at,N=g):ne=ne.next=at,Gt.lanes|=Ue,bs|=Ue}_e=_e.next}while(_e!==null&&_e!==T);ne===null?N=g:ne.next=G,Mi(g,o.memoizedState)||(Yn=!0),o.memoizedState=g,o.baseState=N,o.baseQueue=ne,f.lastRenderedState=g}if(a=f.interleaved,a!==null){S=a;do T=S.lane,Gt.lanes|=T,bs|=T,S=S.next;while(S!==a)}else S===null&&(f.lanes=0);return[o.memoizedState,f.dispatch]}function al(a){var o=Ai(),f=o.queue;if(f===null)throw Error(l(311));f.lastRenderedReducer=a;var g=f.dispatch,S=f.pending,T=o.memoizedState;if(S!==null){f.pending=null;var N=S=S.next;do T=a(T,N.action),N=N.next;while(N!==S);Mi(T,o.memoizedState)||(Yn=!0),o.memoizedState=T,o.baseQueue===null&&(o.baseState=T),f.lastRenderedState=T}return[T,g]}function fp(){}function dp(a,o){var f=Gt,g=Ai(),S=o(),T=!Mi(g.memoizedState,S);if(T&&(g.memoizedState=S,Yn=!0),g=g.queue,Ca(gp.bind(null,f,g,a),[a]),g.getSnapshot!==o||T||cn!==null&&cn.memoizedState.tag&1){if(f.flags|=2048,Ra(9,mp.bind(null,f,g,S,o),void 0,null),Qt===null)throw Error(l(349));(Ts&30)!==0||pp(f,o,S)}return S}function pp(a,o,f){a.flags|=16384,a={getSnapshot:o,value:f},o=Gt.updateQueue,o===null?(o={lastEffect:null,stores:null},Gt.updateQueue=o,o.stores=[a]):(f=o.stores,f===null?o.stores=[a]:f.push(a))}function mp(a,o,f,g){o.value=f,o.getSnapshot=g,_p(o)&&ri(a,1,-1)}function gp(a,o,f){return f(function(){_p(o)&&ri(a,1,-1)})}function _p(a){var o=a.getSnapshot;a=a.value;try{var f=o();return!Mi(a,f)}catch{return!0}}function Wu(a){var o=Vi();return typeof a=="function"&&(a=a()),o.memoizedState=o.baseState=a,a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Dr,lastRenderedState:a},o.queue=a,a=a.dispatch=ty.bind(null,Gt,a),[o.memoizedState,a]}function Ra(a,o,f,g){return a={tag:a,create:o,destroy:f,deps:g,next:null},o=Gt.updateQueue,o===null?(o={lastEffect:null,stores:null},Gt.updateQueue=o,o.lastEffect=a.next=a):(f=o.lastEffect,f===null?o.lastEffect=a.next=a:(g=f.next,f.next=a,a.next=g,o.lastEffect=a)),a}function vp(){return Ai().memoizedState}function ol(a,o,f,g){var S=Vi();Gt.flags|=a,S.memoizedState=Ra(1|o,f,void 0,g===void 0?null:g)}function ll(a,o,f,g){var S=Ai();g=g===void 0?null:g;var T=void 0;if(yn!==null){var N=yn.memoizedState;if(T=N.destroy,g!==null&&Hu(g,N.deps)){S.memoizedState=Ra(o,f,T,g);return}}Gt.flags|=a,S.memoizedState=Ra(1|o,f,T,g)}function Xu(a,o){return ol(8390656,8,a,o)}function Ca(a,o){return ll(2048,8,a,o)}function yp(a,o){return ll(4,2,a,o)}function xp(a,o){return ll(4,4,a,o)}function Sp(a,o){if(typeof o=="function")return a=a(),o(a),function(){o(null)};if(o!=null)return a=a(),o.current=a,function(){o.current=null}}function Mp(a,o,f){return f=f!=null?f.concat([a]):null,ll(4,4,Sp.bind(null,o,a),f)}function qu(){}function Ep(a,o){var f=Ai();o=o===void 0?null:o;var g=f.memoizedState;return g!==null&&o!==null&&Hu(o,g[1])?g[0]:(f.memoizedState=[a,o],a)}function wp(a,o){var f=Ai();o=o===void 0?null:o;var g=f.memoizedState;return g!==null&&o!==null&&Hu(o,g[1])?g[0]:(a=a(),f.memoizedState=[a,o],a)}function $v(a,o){var f=xt;xt=f!==0&&4>f?f:4,a(!0);var g=ii.transition;ii.transition={};try{a(!1),o()}finally{xt=f,ii.transition=g}}function Tp(){return Ai().memoizedState}function ey(a,o,f){var g=ur(a);f={lane:g,action:f,hasEagerState:!1,eagerState:null,next:null},Ap(a)?bp(o,f):(Rp(a,o,f),f=Rn(),a=ri(a,g,f),a!==null&&Cp(a,o,g))}function ty(a,o,f){var g=ur(a),S={lane:g,action:f,hasEagerState:!1,eagerState:null,next:null};if(Ap(a))bp(o,S);else{Rp(a,o,S);var T=a.alternate;if(a.lanes===0&&(T===null||T.lanes===0)&&(T=o.lastRenderedReducer,T!==null))try{var N=o.lastRenderedState,G=T(N,f);if(S.hasEagerState=!0,S.eagerState=G,Mi(G,N))return}catch{}finally{}f=Rn(),a=ri(a,g,f),a!==null&&Cp(a,o,g)}}function Ap(a){var o=a.alternate;return a===Gt||o!==null&&o===Gt}function bp(a,o){Aa=rl=!0;var f=a.pending;f===null?o.next=o:(o.next=f.next,f.next=o),a.pending=o}function Rp(a,o,f){Qt!==null&&(a.mode&1)!==0&&(pt&2)===0?(a=o.interleaved,a===null?(f.next=f,wi===null?wi=[o]:wi.push(o)):(f.next=a.next,a.next=f),o.interleaved=f):(a=o.pending,a===null?f.next=f:(f.next=a.next,a.next=f),o.pending=f)}function Cp(a,o,f){if((f&4194240)!==0){var g=o.lanes;g&=a.pendingLanes,f|=g,o.lanes=f,xu(a,f)}}var cl={readContext:$n,useCallback:xn,useContext:xn,useEffect:xn,useImperativeHandle:xn,useInsertionEffect:xn,useLayoutEffect:xn,useMemo:xn,useReducer:xn,useRef:xn,useState:xn,useDebugValue:xn,useDeferredValue:xn,useTransition:xn,useMutableSource:xn,useSyncExternalStore:xn,useId:xn,unstable_isNewReconciler:!1},ny={readContext:$n,useCallback:function(a,o){return Vi().memoizedState=[a,o===void 0?null:o],a},useContext:$n,useEffect:Xu,useImperativeHandle:function(a,o,f){return f=f!=null?f.concat([a]):null,ol(4194308,4,Sp.bind(null,o,a),f)},useLayoutEffect:function(a,o){return ol(4194308,4,a,o)},useInsertionEffect:function(a,o){return ol(4,2,a,o)},useMemo:function(a,o){var f=Vi();return o=o===void 0?null:o,a=a(),f.memoizedState=[a,o],a},useReducer:function(a,o,f){var g=Vi();return o=f!==void 0?f(o):o,g.memoizedState=g.baseState=o,a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:o},g.queue=a,a=a.dispatch=ey.bind(null,Gt,a),[g.memoizedState,a]},useRef:function(a){var o=Vi();return a={current:a},o.memoizedState=a},useState:Wu,useDebugValue:qu,useDeferredValue:function(a){var o=Wu(a),f=o[0],g=o[1];return Xu(function(){var S=ii.transition;ii.transition={};try{g(a)}finally{ii.transition=S}},[a]),f},useTransition:function(){var a=Wu(!1),o=a[0];return a=$v.bind(null,a[1]),Vi().memoizedState=a,[o,a]},useMutableSource:function(){},useSyncExternalStore:function(a,o,f){var g=Gt,S=Vi();if(Bt){if(f===void 0)throw Error(l(407));f=f()}else{if(f=o(),Qt===null)throw Error(l(349));(Ts&30)!==0||pp(g,o,f)}S.memoizedState=f;var T={value:f,getSnapshot:o};return S.queue=T,Xu(gp.bind(null,g,T,a),[a]),g.flags|=2048,Ra(9,mp.bind(null,g,T,f,o),void 0,null),f},useId:function(){var a=Vi(),o=Qt.identifierPrefix;if(Bt){var f=Hi,g=ki;f=(g&~(1<<32-ci(g)-1)).toString(32)+f,o=":"+o+"R"+f,f=ba++,0<f&&(o+="H"+f.toString(32)),o+=":"}else f=Qv++,o=":"+o+"r"+f.toString(32)+":";return a.memoizedState=o},unstable_isNewReconciler:!1},iy={readContext:$n,useCallback:Ep,useContext:$n,useEffect:Ca,useImperativeHandle:Mp,useInsertionEffect:yp,useLayoutEffect:xp,useMemo:wp,useReducer:sl,useRef:vp,useState:function(){return sl(Dr)},useDebugValue:qu,useDeferredValue:function(a){var o=sl(Dr),f=o[0],g=o[1];return Ca(function(){var S=ii.transition;ii.transition={};try{g(a)}finally{ii.transition=S}},[a]),f},useTransition:function(){var a=sl(Dr)[0],o=Ai().memoizedState;return[a,o]},useMutableSource:fp,useSyncExternalStore:dp,useId:Tp,unstable_isNewReconciler:!1},ry={readContext:$n,useCallback:Ep,useContext:$n,useEffect:Ca,useImperativeHandle:Mp,useInsertionEffect:yp,useLayoutEffect:xp,useMemo:wp,useReducer:al,useRef:vp,useState:function(){return al(Dr)},useDebugValue:qu,useDeferredValue:function(a){var o=al(Dr),f=o[0],g=o[1];return Ca(function(){var S=ii.transition;ii.transition={};try{g(a)}finally{ii.transition=S}},[a]),f},useTransition:function(){var a=al(Dr)[0],o=Ai().memoizedState;return[a,o]},useMutableSource:fp,useSyncExternalStore:dp,useId:Tp,unstable_isNewReconciler:!1};function Yu(a,o){try{var f="",g=o;do f+=jv(g),g=g.return;while(g);var S=f}catch(T){S=`
Error generating stack: `+T.message+`
`+T.stack}return{value:a,source:o,stack:S}}function Zu(a,o){try{console.error(o.value)}catch(f){setTimeout(function(){throw f})}}var sy=typeof WeakMap=="function"?WeakMap:Map;function Pp(a,o,f){f=zi(-1,f),f.tag=3,f.payload={element:null};var g=o.value;return f.callback=function(){Tl||(Tl=!0,fh=g),Zu(a,o)},f}function Lp(a,o,f){f=zi(-1,f),f.tag=3;var g=a.type.getDerivedStateFromError;if(typeof g=="function"){var S=o.value;f.payload=function(){return g(S)},f.callback=function(){Zu(a,o)}}var T=a.stateNode;return T!==null&&typeof T.componentDidCatch=="function"&&(f.callback=function(){Zu(a,o),typeof g!="function"&&(lr===null?lr=new Set([this]):lr.add(this));var N=o.stack;this.componentDidCatch(o.value,{componentStack:N!==null?N:""})}),f}function Ip(a,o,f){var g=a.pingCache;if(g===null){g=a.pingCache=new sy;var S=new Set;g.set(o,S)}else S=g.get(o),S===void 0&&(S=new Set,g.set(o,S));S.has(f)||(S.add(f),a=yy.bind(null,a,o,f),o.then(a,a))}function Up(a){do{var o;if((o=a.tag===13)&&(o=a.memoizedState,o=o!==null?o.dehydrated!==null:!0),o)return a;a=a.return}while(a!==null);return null}function Dp(a,o,f,g,S){return(a.mode&1)===0?(a===o?a.flags|=65536:(a.flags|=128,f.flags|=131072,f.flags&=-52805,f.tag===1&&(f.alternate===null?f.tag=17:(o=zi(-1,1),o.tag=2,or(f,o))),f.lanes|=1),a):(a.flags|=65536,a.lanes=S,a)}function bi(a){a.flags|=4}function Np(a,o){if(a!==null&&a.child===o.child)return!0;if((o.flags&16)!==0)return!1;for(a=o.child;a!==null;){if((a.flags&12854)!==0||(a.subtreeFlags&12854)!==0)return!1;a=a.sibling}return!0}var Pa,La,ul,hl;if(ze)Pa=function(a,o){for(var f=o.child;f!==null;){if(f.tag===5||f.tag===6)Q(a,f.stateNode);else if(f.tag!==4&&f.child!==null){f.child.return=f,f=f.child;continue}if(f===o)break;for(;f.sibling===null;){if(f.return===null||f.return===o)return;f=f.return}f.sibling.return=f.return,f=f.sibling}},La=function(){},ul=function(a,o,f,g,S){if(a=a.memoizedProps,a!==g){var T=o.stateNode,N=Ti(ni.current);f=Me(T,f,a,g,S,N),(o.updateQueue=f)&&bi(o)}},hl=function(a,o,f,g){f!==g&&bi(o)};else if(z){Pa=function(a,o,f,g){for(var S=o.child;S!==null;){if(S.tag===5){var T=S.stateNode;f&&g&&(T=Ct(T,S.type,S.memoizedProps,S)),Q(a,T)}else if(S.tag===6)T=S.stateNode,f&&g&&(T=Gn(T,S.memoizedProps,S)),Q(a,T);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)T=S.child,T!==null&&(T.return=S),Pa(a,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===o)break;for(;S.sibling===null;){if(S.return===null||S.return===o)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};var Op=function(a,o,f,g){for(var S=o.child;S!==null;){if(S.tag===5){var T=S.stateNode;f&&g&&(T=Ct(T,S.type,S.memoizedProps,S)),Ve(a,T)}else if(S.tag===6)T=S.stateNode,f&&g&&(T=Gn(T,S.memoizedProps,S)),Ve(a,T);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)T=S.child,T!==null&&(T.return=S),Op(a,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===o)break;for(;S.sibling===null;){if(S.return===null||S.return===o)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};La=function(a,o){var f=o.stateNode;if(!Np(a,o)){a=f.containerInfo;var g=he(a);Op(g,o,!1,!1),f.pendingChildren=g,bi(o),st(a,g)}},ul=function(a,o,f,g,S){var T=a.stateNode,N=a.memoizedProps;if((a=Np(a,o))&&N===g)o.stateNode=T;else{var G=o.stateNode,ne=Ti(ni.current),_e=null;N!==g&&(_e=Me(G,f,N,g,S,ne)),a&&_e===null?o.stateNode=T:(T=be(T,_e,f,N,g,o,a,G),fe(T,f,g,S,ne)&&bi(o),o.stateNode=T,a?bi(o):Pa(T,o,!1,!1))}},hl=function(a,o,f,g){f!==g?(a=Ti(Es.current),f=Ti(ni.current),o.stateNode=Oe(g,a,f,o),bi(o)):o.stateNode=a.stateNode}}else La=function(){},ul=function(){},hl=function(){};function Ia(a,o){if(!Bt)switch(a.tailMode){case"hidden":o=a.tail;for(var f=null;o!==null;)o.alternate!==null&&(f=o),o=o.sibling;f===null?a.tail=null:f.sibling=null;break;case"collapsed":f=a.tail;for(var g=null;f!==null;)f.alternate!==null&&(g=f),f=f.sibling;g===null?o||a.tail===null?a.tail=null:a.tail.sibling=null:g.sibling=null}}function Sn(a){var o=a.alternate!==null&&a.alternate.child===a.child,f=0,g=0;if(o)for(var S=a.child;S!==null;)f|=S.lanes|S.childLanes,g|=S.subtreeFlags&14680064,g|=S.flags&14680064,S.return=a,S=S.sibling;else for(S=a.child;S!==null;)f|=S.lanes|S.childLanes,g|=S.subtreeFlags,g|=S.flags,S.return=a,S=S.sibling;return a.subtreeFlags|=g,a.childLanes=f,o}function ay(a,o,f){var g=o.pendingProps;switch(Uu(o),o.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Sn(o),null;case 1:return Vt(o.type)&&sr(),Sn(o),null;case 3:return g=o.stateNode,ws(),At(jt),At(tn),ku(),g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null),(a===null||a.child===null)&&(Ma(o)?bi(o):a===null||a.memoizedState.isDehydrated&&(o.flags&256)===0||(o.flags|=1024,hi!==null&&(mh(hi),hi=null))),La(a,o),Sn(o),null;case 5:Bu(o),f=Ti(Es.current);var S=o.type;if(a!==null&&o.stateNode!=null)ul(a,o,S,g,f),a.ref!==o.ref&&(o.flags|=512,o.flags|=2097152);else{if(!g){if(o.stateNode===null)throw Error(l(166));return Sn(o),null}if(a=Ti(ni.current),Ma(o)){if(!pe)throw Error(l(175));a=_u(o.stateNode,o.type,o.memoizedProps,f,a,o,!Sa),o.updateQueue=a,a!==null&&bi(o)}else{var T=k(S,g,f,a,o);Pa(T,o,!1,!1),o.stateNode=T,fe(T,S,g,f,a)&&bi(o)}o.ref!==null&&(o.flags|=512,o.flags|=2097152)}return Sn(o),null;case 6:if(a&&o.stateNode!=null)hl(a,o,a.memoizedProps,g);else{if(typeof g!="string"&&o.stateNode===null)throw Error(l(166));if(a=Ti(Es.current),f=Ti(ni.current),Ma(o)){if(!pe)throw Error(l(176));if(a=o.stateNode,g=o.memoizedProps,(f=U(a,g,o,!Sa))&&(S=Xn,S!==null))switch(T=(S.mode&1)!==0,S.tag){case 3:et(S.stateNode.containerInfo,a,g,T);break;case 5:dt(S.type,S.memoizedProps,S.stateNode,a,g,T)}f&&bi(o)}else o.stateNode=Oe(g,a,f,o)}return Sn(o),null;case 13:if(At(zt),g=o.memoizedState,Bt&&qn!==null&&(o.mode&1)!==0&&(o.flags&128)===0){for(a=qn;a;)a=xi(a);return Ss(),o.flags|=98560,o}if(g!==null&&g.dehydrated!==null){if(g=Ma(o),a===null){if(!g)throw Error(l(318));if(!pe)throw Error(l(344));if(a=o.memoizedState,a=a!==null?a.dehydrated:null,!a)throw Error(l(317));Z(a,o)}else Ss(),(o.flags&128)===0&&(o.memoizedState=null),o.flags|=4;return Sn(o),null}return hi!==null&&(mh(hi),hi=null),(o.flags&128)!==0?(o.lanes=f,o):(g=g!==null,f=!1,a===null?Ma(o):f=a.memoizedState!==null,g&&!f&&(o.child.flags|=8192,(o.mode&1)!==0&&(a===null||(zt.current&1)!==0?nn===0&&(nn=3):_h())),o.updateQueue!==null&&(o.flags|=4),Sn(o),null);case 4:return ws(),La(a,o),a===null&&ve(o.stateNode.containerInfo),Sn(o),null;case 10:return bu(o.type._context),Sn(o),null;case 17:return Vt(o.type)&&sr(),Sn(o),null;case 19:if(At(zt),S=o.memoizedState,S===null)return Sn(o),null;if(g=(o.flags&128)!==0,T=S.rendering,T===null)if(g)Ia(S,!1);else{if(nn!==0||a!==null&&(a.flags&128)!==0)for(a=o.child;a!==null;){if(T=nl(a),T!==null){for(o.flags|=128,Ia(S,!1),a=T.updateQueue,a!==null&&(o.updateQueue=a,o.flags|=4),o.subtreeFlags=0,a=f,g=o.child;g!==null;)f=g,S=a,f.flags&=14680066,T=f.alternate,T===null?(f.childLanes=0,f.lanes=S,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=T.childLanes,f.lanes=T.lanes,f.child=T.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=T.memoizedProps,f.memoizedState=T.memoizedState,f.updateQueue=T.updateQueue,f.type=T.type,S=T.dependencies,f.dependencies=S===null?null:{lanes:S.lanes,firstContext:S.firstContext}),g=g.sibling;return tt(zt,zt.current&1|2),o.child}a=a.sibling}S.tail!==null&&ln()>hh&&(o.flags|=128,g=!0,Ia(S,!1),o.lanes=4194304)}else{if(!g)if(a=nl(T),a!==null){if(o.flags|=128,g=!0,a=a.updateQueue,a!==null&&(o.updateQueue=a,o.flags|=4),Ia(S,!0),S.tail===null&&S.tailMode==="hidden"&&!T.alternate&&!Bt)return Sn(o),null}else 2*ln()-S.renderingStartTime>hh&&f!==1073741824&&(o.flags|=128,g=!0,Ia(S,!1),o.lanes=4194304);S.isBackwards?(T.sibling=o.child,o.child=T):(a=S.last,a!==null?a.sibling=T:o.child=T,S.last=T)}return S.tail!==null?(o=S.tail,S.rendering=o,S.tail=o.sibling,S.renderingStartTime=ln(),o.sibling=null,a=zt.current,tt(zt,g?a&1|2:a&1),o):(Sn(o),null);case 22:case 23:return gh(),g=o.memoizedState!==null,a!==null&&a.memoizedState!==null!==g&&(o.flags|=8192),g&&(o.mode&1)!==0?(Zn&1073741824)!==0&&(Sn(o),ze&&o.subtreeFlags&6&&(o.flags|=8192)):Sn(o),null;case 24:return null;case 25:return null}throw Error(l(156,o.tag))}var oy=c.ReactCurrentOwner,Yn=!1;function bn(a,o,f,g){o.child=a===null?up(o,null,f,g):Ms(o,a.child,f,g)}function Fp(a,o,f,g,S){f=f.render;var T=o.ref;return vs(o,S),g=Vu(a,o,f,g,T,S),f=Gu(),a!==null&&!Yn?(o.updateQueue=a.updateQueue,o.flags&=-2053,a.lanes&=~S,Gi(a,o,S)):(Bt&&f&&Iu(o),o.flags|=1,bn(a,o,g,S),o.child)}function Bp(a,o,f,g,S){if(a===null){var T=f.type;return typeof T=="function"&&!vh(T)&&T.defaultProps===void 0&&f.compare===null&&f.defaultProps===void 0?(o.tag=15,o.type=T,zp(a,o,T,g,S)):(a=Il(f.type,null,g,o,o.mode,S),a.ref=o.ref,a.return=o,o.child=a)}if(T=a.child,(a.lanes&S)===0){var N=T.memoizedProps;if(f=f.compare,f=f!==null?f:Yo,f(N,g)&&a.ref===o.ref)return Gi(a,o,S)}return o.flags|=1,a=fr(T,g),a.ref=o.ref,a.return=o,o.child=a}function zp(a,o,f,g,S){if(a!==null&&Yo(a.memoizedProps,g)&&a.ref===o.ref)if(Yn=!1,(a.lanes&S)!==0)(a.flags&131072)!==0&&(Yn=!0);else return o.lanes=a.lanes,Gi(a,o,S);return Ju(a,o,f,g,S)}function kp(a,o,f){var g=o.pendingProps,S=g.children,T=a!==null?a.memoizedState:null;if(g.mode==="hidden")if((o.mode&1)===0)o.memoizedState={baseLanes:0,cachePool:null},tt(As,Zn),Zn|=f;else if((f&1073741824)!==0)o.memoizedState={baseLanes:0,cachePool:null},g=T!==null?T.baseLanes:f,tt(As,Zn),Zn|=g;else return a=T!==null?T.baseLanes|f:f,o.lanes=o.childLanes=1073741824,o.memoizedState={baseLanes:a,cachePool:null},o.updateQueue=null,tt(As,Zn),Zn|=a,null;else T!==null?(g=T.baseLanes|f,o.memoizedState=null):g=f,tt(As,Zn),Zn|=g;return bn(a,o,S,f),o.child}function Hp(a,o){var f=o.ref;(a===null&&f!==null||a!==null&&a.ref!==f)&&(o.flags|=512,o.flags|=2097152)}function Ju(a,o,f,g,S){var T=Vt(f)?li:tn.current;return T=Ht(o,T),vs(o,S),f=Vu(a,o,f,g,T,S),g=Gu(),a!==null&&!Yn?(o.updateQueue=a.updateQueue,o.flags&=-2053,a.lanes&=~S,Gi(a,o,S)):(Bt&&g&&Iu(o),o.flags|=1,bn(a,o,f,S),o.child)}function Vp(a,o,f,g,S){if(Vt(f)){var T=!0;gs(o)}else T=!1;if(vs(o,S),o.stateNode===null)a!==null&&(a.alternate=null,o.alternate=null,o.flags|=2),np(o,f,g),Lu(o,f,g,S),g=!0;else if(a===null){var N=o.stateNode,G=o.memoizedProps;N.props=G;var ne=N.context,_e=f.contextType;typeof _e=="object"&&_e!==null?_e=$n(_e):(_e=Vt(f)?li:tn.current,_e=Ht(o,_e));var Ue=f.getDerivedStateFromProps,at=typeof Ue=="function"||typeof N.getSnapshotBeforeUpdate=="function";at||typeof N.UNSAFE_componentWillReceiveProps!="function"&&typeof N.componentWillReceiveProps!="function"||(G!==g||ne!==_e)&&ip(o,N,g,_e),ar=!1;var Ye=o.memoizedState;N.state=Ye,jo(o,g,N,S),ne=o.memoizedState,G!==g||Ye!==ne||jt.current||ar?(typeof Ue=="function"&&(Pu(o,f,Ue,g),ne=o.memoizedState),(G=ar||tp(o,f,G,g,Ye,ne,_e))?(at||typeof N.UNSAFE_componentWillMount!="function"&&typeof N.componentWillMount!="function"||(typeof N.componentWillMount=="function"&&N.componentWillMount(),typeof N.UNSAFE_componentWillMount=="function"&&N.UNSAFE_componentWillMount()),typeof N.componentDidMount=="function"&&(o.flags|=4194308)):(typeof N.componentDidMount=="function"&&(o.flags|=4194308),o.memoizedProps=g,o.memoizedState=ne),N.props=g,N.state=ne,N.context=_e,g=G):(typeof N.componentDidMount=="function"&&(o.flags|=4194308),g=!1)}else{N=o.stateNode,jd(a,o),G=o.memoizedProps,_e=o.type===o.elementType?G:ui(o.type,G),N.props=_e,at=o.pendingProps,Ye=N.context,ne=f.contextType,typeof ne=="object"&&ne!==null?ne=$n(ne):(ne=Vt(f)?li:tn.current,ne=Ht(o,ne));var Lt=f.getDerivedStateFromProps;(Ue=typeof Lt=="function"||typeof N.getSnapshotBeforeUpdate=="function")||typeof N.UNSAFE_componentWillReceiveProps!="function"&&typeof N.componentWillReceiveProps!="function"||(G!==at||Ye!==ne)&&ip(o,N,g,ne),ar=!1,Ye=o.memoizedState,N.state=Ye,jo(o,g,N,S);var Ge=o.memoizedState;G!==at||Ye!==Ge||jt.current||ar?(typeof Lt=="function"&&(Pu(o,f,Lt,g),Ge=o.memoizedState),(_e=ar||tp(o,f,_e,g,Ye,Ge,ne)||!1)?(Ue||typeof N.UNSAFE_componentWillUpdate!="function"&&typeof N.componentWillUpdate!="function"||(typeof N.componentWillUpdate=="function"&&N.componentWillUpdate(g,Ge,ne),typeof N.UNSAFE_componentWillUpdate=="function"&&N.UNSAFE_componentWillUpdate(g,Ge,ne)),typeof N.componentDidUpdate=="function"&&(o.flags|=4),typeof N.getSnapshotBeforeUpdate=="function"&&(o.flags|=1024)):(typeof N.componentDidUpdate!="function"||G===a.memoizedProps&&Ye===a.memoizedState||(o.flags|=4),typeof N.getSnapshotBeforeUpdate!="function"||G===a.memoizedProps&&Ye===a.memoizedState||(o.flags|=1024),o.memoizedProps=g,o.memoizedState=Ge),N.props=g,N.state=Ge,N.context=ne,g=_e):(typeof N.componentDidUpdate!="function"||G===a.memoizedProps&&Ye===a.memoizedState||(o.flags|=4),typeof N.getSnapshotBeforeUpdate!="function"||G===a.memoizedProps&&Ye===a.memoizedState||(o.flags|=1024),g=!1)}return Ku(a,o,f,g,T,S)}function Ku(a,o,f,g,S,T){Hp(a,o);var N=(o.flags&128)!==0;if(!g&&!N)return S&&va(o,f,!1),Gi(a,o,T);g=o.stateNode,oy.current=o;var G=N&&typeof f.getDerivedStateFromError!="function"?null:g.render();return o.flags|=1,a!==null&&N?(o.child=Ms(o,a.child,null,T),o.child=Ms(o,null,G,T)):bn(a,o,G,T),o.memoizedState=g.state,S&&va(o,f,!0),o.child}function Gp(a){var o=a.stateNode;o.pendingContext?vn(a,o.pendingContext,o.pendingContext!==o.context):o.context&&vn(a,o.context,!1),Fu(a,o.containerInfo)}function Wp(a,o,f,g,S){return Ss(),Ou(S),o.flags|=256,bn(a,o,f,g),o.child}var fl={dehydrated:null,treeContext:null,retryLane:0};function dl(a){return{baseLanes:a,cachePool:null}}function Xp(a,o,f){var g=o.pendingProps,S=zt.current,T=!1,N=(o.flags&128)!==0,G;if((G=N)||(G=a!==null&&a.memoizedState===null?!1:(S&2)!==0),G?(T=!0,o.flags&=-129):(a===null||a.memoizedState!==null)&&(S|=1),tt(zt,S&1),a===null)return Nu(o),a=o.memoizedState,a!==null&&(a=a.dehydrated,a!==null)?((o.mode&1)===0?o.lanes=1:rr(a)?o.lanes=8:o.lanes=1073741824,null):(S=g.children,a=g.fallback,T?(g=o.mode,T=o.child,S={mode:"hidden",children:S},(g&1)===0&&T!==null?(T.childLanes=0,T.pendingProps=S):T=Ul(S,g,0,null),a=kr(a,g,f,null),T.return=o,a.return=o,T.sibling=a,o.child=T,o.child.memoizedState=dl(f),o.memoizedState=fl,a):ju(o,S));if(S=a.memoizedState,S!==null){if(G=S.dehydrated,G!==null){if(N)return o.flags&256?(o.flags&=-257,pl(a,o,f,Error(l(422)))):o.memoizedState!==null?(o.child=a.child,o.flags|=128,null):(T=g.fallback,S=o.mode,g=Ul({mode:"visible",children:g.children},S,0,null),T=kr(T,S,f,null),T.flags|=2,g.return=o,T.return=o,g.sibling=T,o.child=g,(o.mode&1)!==0&&Ms(o,a.child,null,f),o.child.memoizedState=dl(f),o.memoizedState=fl,T);if((o.mode&1)===0)o=pl(a,o,f,null);else if(rr(G))o=pl(a,o,f,Error(l(419)));else if(g=(f&a.childLanes)!==0,Yn||g){if(g=Qt,g!==null){switch(f&-f){case 4:T=2;break;case 16:T=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:T=32;break;case 536870912:T=268435456;break;default:T=0}g=(T&(g.suspendedLanes|f))!==0?0:T,g!==0&&g!==S.retryLane&&(S.retryLane=g,ri(a,g,-1))}_h(),o=pl(a,o,f,Error(l(421)))}else zo(G)?(o.flags|=128,o.child=a.child,o=xy.bind(null,a),ko(G,o),o=null):(f=S.treeContext,pe&&(qn=gu(G),Xn=o,Bt=!0,hi=null,Sa=!1,f!==null&&(ei[ti++]=ki,ei[ti++]=Hi,ei[ti++]=Ir,ki=f.id,Hi=f.overflow,Ir=o)),o=ju(o,o.pendingProps.children),o.flags|=4096);return o}return T?(g=Yp(a,o,g.children,g.fallback,f),T=o.child,S=a.child.memoizedState,T.memoizedState=S===null?dl(f):{baseLanes:S.baseLanes|f,cachePool:null},T.childLanes=a.childLanes&~f,o.memoizedState=fl,g):(f=qp(a,o,g.children,f),o.memoizedState=null,f)}return T?(g=Yp(a,o,g.children,g.fallback,f),T=o.child,S=a.child.memoizedState,T.memoizedState=S===null?dl(f):{baseLanes:S.baseLanes|f,cachePool:null},T.childLanes=a.childLanes&~f,o.memoizedState=fl,g):(f=qp(a,o,g.children,f),o.memoizedState=null,f)}function ju(a,o){return o=Ul({mode:"visible",children:o},a.mode,0,null),o.return=a,a.child=o}function qp(a,o,f,g){var S=a.child;return a=S.sibling,f=fr(S,{mode:"visible",children:f}),(o.mode&1)===0&&(f.lanes=g),f.return=o,f.sibling=null,a!==null&&(g=o.deletions,g===null?(o.deletions=[a],o.flags|=16):g.push(a)),o.child=f}function Yp(a,o,f,g,S){var T=o.mode;a=a.child;var N=a.sibling,G={mode:"hidden",children:f};return(T&1)===0&&o.child!==a?(f=o.child,f.childLanes=0,f.pendingProps=G,o.deletions=null):(f=fr(a,G),f.subtreeFlags=a.subtreeFlags&14680064),N!==null?g=fr(N,g):(g=kr(g,T,S,null),g.flags|=2),g.return=o,f.return=o,f.sibling=g,o.child=f,g}function pl(a,o,f,g){return g!==null&&Ou(g),Ms(o,a.child,null,f),a=ju(o,o.pendingProps.children),a.flags|=2,o.memoizedState=null,a}function Zp(a,o,f){a.lanes|=o;var g=a.alternate;g!==null&&(g.lanes|=o),Ru(a.return,o,f)}function Qu(a,o,f,g,S){var T=a.memoizedState;T===null?a.memoizedState={isBackwards:o,rendering:null,renderingStartTime:0,last:g,tail:f,tailMode:S}:(T.isBackwards=o,T.rendering=null,T.renderingStartTime=0,T.last=g,T.tail=f,T.tailMode=S)}function Jp(a,o,f){var g=o.pendingProps,S=g.revealOrder,T=g.tail;if(bn(a,o,g.children,f),g=zt.current,(g&2)!==0)g=g&1|2,o.flags|=128;else{if(a!==null&&(a.flags&128)!==0)e:for(a=o.child;a!==null;){if(a.tag===13)a.memoizedState!==null&&Zp(a,f,o);else if(a.tag===19)Zp(a,f,o);else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===o)break e;for(;a.sibling===null;){if(a.return===null||a.return===o)break e;a=a.return}a.sibling.return=a.return,a=a.sibling}g&=1}if(tt(zt,g),(o.mode&1)===0)o.memoizedState=null;else switch(S){case"forwards":for(f=o.child,S=null;f!==null;)a=f.alternate,a!==null&&nl(a)===null&&(S=f),f=f.sibling;f=S,f===null?(S=o.child,o.child=null):(S=f.sibling,f.sibling=null),Qu(o,!1,S,f,T);break;case"backwards":for(f=null,S=o.child,o.child=null;S!==null;){if(a=S.alternate,a!==null&&nl(a)===null){o.child=S;break}a=S.sibling,S.sibling=f,f=S,S=a}Qu(o,!0,f,null,T);break;case"together":Qu(o,!1,null,null,void 0);break;default:o.memoizedState=null}return o.child}function Gi(a,o,f){if(a!==null&&(o.dependencies=a.dependencies),bs|=o.lanes,(f&o.childLanes)===0)return null;if(a!==null&&o.child!==a.child)throw Error(l(153));if(o.child!==null){for(a=o.child,f=fr(a,a.pendingProps),o.child=f,f.return=o;a.sibling!==null;)a=a.sibling,f=f.sibling=fr(a,a.pendingProps),f.return=o;f.sibling=null}return o.child}function ly(a,o,f){switch(o.tag){case 3:Gp(o),Ss();break;case 5:hp(o);break;case 1:Vt(o.type)&&gs(o);break;case 4:Fu(o,o.stateNode.containerInfo);break;case 10:Kd(o,o.type._context,o.memoizedProps.value);break;case 13:var g=o.memoizedState;if(g!==null)return g.dehydrated!==null?(tt(zt,zt.current&1),o.flags|=128,null):(f&o.child.childLanes)!==0?Xp(a,o,f):(tt(zt,zt.current&1),a=Gi(a,o,f),a!==null?a.sibling:null);tt(zt,zt.current&1);break;case 19:if(g=(f&o.childLanes)!==0,(a.flags&128)!==0){if(g)return Jp(a,o,f);o.flags|=128}var S=o.memoizedState;if(S!==null&&(S.rendering=null,S.tail=null,S.lastEffect=null),tt(zt,zt.current),g)break;return null;case 22:case 23:return o.lanes=0,kp(a,o,f)}return Gi(a,o,f)}function cy(a,o){switch(Uu(o),o.tag){case 1:return Vt(o.type)&&sr(),a=o.flags,a&65536?(o.flags=a&-65537|128,o):null;case 3:return ws(),At(jt),At(tn),ku(),a=o.flags,(a&65536)!==0&&(a&128)===0?(o.flags=a&-65537|128,o):null;case 5:return Bu(o),null;case 13:if(At(zt),a=o.memoizedState,a!==null&&a.dehydrated!==null){if(o.alternate===null)throw Error(l(340));Ss()}return a=o.flags,a&65536?(o.flags=a&-65537|128,o):null;case 19:return At(zt),null;case 4:return ws(),null;case 10:return bu(o.type._context),null;case 22:case 23:return gh(),null;case 24:return null;default:return null}}var ml=!1,Nr=!1,uy=typeof WeakSet=="function"?WeakSet:Set,Ae=null;function gl(a,o){var f=a.ref;if(f!==null)if(typeof f=="function")try{f(null)}catch(g){On(a,o,g)}else f.current=null}function $u(a,o,f){try{f()}catch(g){On(a,o,g)}}var Kp=!1;function hy(a,o){for(X(a.containerInfo),Ae=o;Ae!==null;)if(a=Ae,o=a.child,(a.subtreeFlags&1028)!==0&&o!==null)o.return=a,Ae=o;else for(;Ae!==null;){a=Ae;try{var f=a.alternate;if((a.flags&1024)!==0)switch(a.tag){case 0:case 11:case 15:break;case 1:if(f!==null){var g=f.memoizedProps,S=f.memoizedState,T=a.stateNode,N=T.getSnapshotBeforeUpdate(a.elementType===a.type?g:ui(a.type,g),S);T.__reactInternalSnapshotBeforeUpdate=N}break;case 3:ze&&Le(a.stateNode.containerInfo);break;case 5:case 6:case 4:case 17:break;default:throw Error(l(163))}}catch(G){On(a,a.return,G)}if(o=a.sibling,o!==null){o.return=a.return,Ae=o;break}Ae=a.return}return f=Kp,Kp=!1,f}function Or(a,o,f){var g=o.updateQueue;if(g=g!==null?g.lastEffect:null,g!==null){var S=g=g.next;do{if((S.tag&a)===a){var T=S.destroy;S.destroy=void 0,T!==void 0&&$u(o,f,T)}S=S.next}while(S!==g)}}function Ua(a,o){if(o=o.updateQueue,o=o!==null?o.lastEffect:null,o!==null){var f=o=o.next;do{if((f.tag&a)===a){var g=f.create;f.destroy=g()}f=f.next}while(f!==o)}}function eh(a){var o=a.ref;if(o!==null){var f=a.stateNode;switch(a.tag){case 5:a=ae(f);break;default:a=f}typeof o=="function"?o(a):o.current=a}}function jp(a,o,f){if(Si&&typeof Si.onCommitFiberUnmount=="function")try{Si.onCommitFiberUnmount(Xo,o)}catch{}switch(o.tag){case 0:case 11:case 14:case 15:if(a=o.updateQueue,a!==null&&(a=a.lastEffect,a!==null)){var g=a=a.next;do{var S=g,T=S.destroy;S=S.tag,T!==void 0&&((S&2)!==0||(S&4)!==0)&&$u(o,f,T),g=g.next}while(g!==a)}break;case 1:if(gl(o,f),a=o.stateNode,typeof a.componentWillUnmount=="function")try{a.props=o.memoizedProps,a.state=o.memoizedState,a.componentWillUnmount()}catch(N){On(o,f,N)}break;case 5:gl(o,f);break;case 4:ze?im(a,o,f):z&&z&&(o=o.stateNode.containerInfo,f=he(o),on(o,f))}}function Qp(a,o,f){for(var g=o;;)if(jp(a,g,f),g.child===null||ze&&g.tag===4){if(g===o)break;for(;g.sibling===null;){if(g.return===null||g.return===o)return;g=g.return}g.sibling.return=g.return,g=g.sibling}else g.child.return=g,g=g.child}function $p(a){var o=a.alternate;o!==null&&(a.alternate=null,$p(o)),a.child=null,a.deletions=null,a.sibling=null,a.tag===5&&(o=a.stateNode,o!==null&&We(o)),a.stateNode=null,a.return=null,a.dependencies=null,a.memoizedProps=null,a.memoizedState=null,a.pendingProps=null,a.stateNode=null,a.updateQueue=null}function em(a){return a.tag===5||a.tag===3||a.tag===4}function tm(a){e:for(;;){for(;a.sibling===null;){if(a.return===null||em(a.return))return null;a=a.return}for(a.sibling.return=a.return,a=a.sibling;a.tag!==5&&a.tag!==6&&a.tag!==18;){if(a.flags&2||a.child===null||a.tag===4)continue e;a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}function nm(a){if(ze){e:{for(var o=a.return;o!==null;){if(em(o))break e;o=o.return}throw Error(l(160))}var f=o;switch(f.tag){case 5:o=f.stateNode,f.flags&32&&(je(o),f.flags&=-33),f=tm(a),nh(a,f,o);break;case 3:case 4:o=f.stateNode.containerInfo,f=tm(a),th(a,f,o);break;default:throw Error(l(161))}}}function th(a,o,f){var g=a.tag;if(g===5||g===6)a=a.stateNode,o?ye(f,a,o):ke(f,a);else if(g!==4&&(a=a.child,a!==null))for(th(a,o,f),a=a.sibling;a!==null;)th(a,o,f),a=a.sibling}function nh(a,o,f){var g=a.tag;if(g===5||g===6)a=a.stateNode,o?vt(f,a,o):ge(f,a);else if(g!==4&&(a=a.child,a!==null))for(nh(a,o,f),a=a.sibling;a!==null;)nh(a,o,f),a=a.sibling}function im(a,o,f){for(var g=o,S=!1,T,N;;){if(!S){S=g.return;e:for(;;){if(S===null)throw Error(l(160));switch(T=S.stateNode,S.tag){case 5:N=!1;break e;case 3:T=T.containerInfo,N=!0;break e;case 4:T=T.containerInfo,N=!0;break e}S=S.return}S=!0}if(g.tag===5||g.tag===6)Qp(a,g,f),N?rt(T,g.stateNode):wt(T,g.stateNode);else if(g.tag===18)N?qe(T,g.stateNode):Ie(T,g.stateNode);else if(g.tag===4){if(g.child!==null){T=g.stateNode.containerInfo,N=!0,g.child.return=g,g=g.child;continue}}else if(jp(a,g,f),g.child!==null){g.child.return=g,g=g.child;continue}if(g===o)break;for(;g.sibling===null;){if(g.return===null||g.return===o)return;g=g.return,g.tag===4&&(S=!1)}g.sibling.return=g.return,g=g.sibling}}function ih(a,o){if(ze){switch(o.tag){case 0:case 11:case 14:case 15:Or(3,o,o.return),Ua(3,o),Or(5,o,o.return);return;case 1:return;case 5:var f=o.stateNode;if(f!=null){var g=o.memoizedProps;a=a!==null?a.memoizedProps:g;var S=o.type,T=o.updateQueue;o.updateQueue=null,T!==null&&Qe(f,T,S,a,g,o)}return;case 6:if(o.stateNode===null)throw Error(l(162));f=o.memoizedProps,xe(o.stateNode,a!==null?a.memoizedProps:f,f);return;case 3:pe&&a!==null&&a.memoizedState.isDehydrated&&K(o.stateNode.containerInfo);return;case 12:return;case 13:_l(o);return;case 19:_l(o);return;case 17:return}throw Error(l(163))}switch(o.tag){case 0:case 11:case 14:case 15:Or(3,o,o.return),Ua(3,o),Or(5,o,o.return);return;case 12:return;case 13:_l(o);return;case 19:_l(o);return;case 3:pe&&a!==null&&a.memoizedState.isDehydrated&&K(o.stateNode.containerInfo);break;case 22:case 23:return}e:if(z){switch(o.tag){case 1:case 5:case 6:break e;case 3:case 4:o=o.stateNode,on(o.containerInfo,o.pendingChildren);break e}throw Error(l(163))}}function _l(a){var o=a.updateQueue;if(o!==null){a.updateQueue=null;var f=a.stateNode;f===null&&(f=a.stateNode=new uy),o.forEach(function(g){var S=Sy.bind(null,a,g);f.has(g)||(f.add(g),g.then(S,S))})}}function fy(a,o){for(Ae=o;Ae!==null;){o=Ae;var f=o.deletions;if(f!==null)for(var g=0;g<f.length;g++){var S=f[g];try{var T=a;ze?im(T,S,o):Qp(T,S,o);var N=S.alternate;N!==null&&(N.return=null),S.return=null}catch(He){On(S,o,He)}}if(f=o.child,(o.subtreeFlags&12854)!==0&&f!==null)f.return=o,Ae=f;else for(;Ae!==null;){o=Ae;try{var G=o.flags;if(G&32&&ze&&je(o.stateNode),G&512){var ne=o.alternate;if(ne!==null){var _e=ne.ref;_e!==null&&(typeof _e=="function"?_e(null):_e.current=null)}}if(G&8192)switch(o.tag){case 13:if(o.memoizedState!==null){var Ue=o.alternate;(Ue===null||Ue.memoizedState===null)&&(uh=ln())}break;case 22:var at=o.memoizedState!==null,Ye=o.alternate,Lt=Ye!==null&&Ye.memoizedState!==null;if(f=o,ze){e:if(g=f,S=at,T=null,ze)for(var Ge=g;;){if(Ge.tag===5){if(T===null){T=Ge;var Mn=Ge.stateNode;S?Ze(Mn):Ee(Ge.stateNode,Ge.memoizedProps)}}else if(Ge.tag===6){if(T===null){var ai=Ge.stateNode;S?B(ai):Se(ai,Ge.memoizedProps)}}else if((Ge.tag!==22&&Ge.tag!==23||Ge.memoizedState===null||Ge===g)&&Ge.child!==null){Ge.child.return=Ge,Ge=Ge.child;continue}if(Ge===g)break;for(;Ge.sibling===null;){if(Ge.return===null||Ge.return===g)break e;T===Ge&&(T=null),Ge=Ge.return}T===Ge&&(T=null),Ge.sibling.return=Ge.return,Ge=Ge.sibling}}if(at&&!Lt&&(f.mode&1)!==0){Ae=f;for(var J=f.child;J!==null;){for(f=Ae=J;Ae!==null;){g=Ae;var W=g.child;switch(g.tag){case 0:case 11:case 14:case 15:Or(4,g,g.return);break;case 1:gl(g,g.return);var te=g.stateNode;if(typeof te.componentWillUnmount=="function"){var Ce=g.return;try{te.props=g.memoizedProps,te.state=g.memoizedState,te.componentWillUnmount()}catch(He){On(g,Ce,He)}}break;case 5:gl(g,g.return);break;case 22:if(g.memoizedState!==null){am(f);continue}}W!==null?(W.return=g,Ae=W):am(f)}J=J.sibling}}}switch(G&4102){case 2:nm(o),o.flags&=-3;break;case 6:nm(o),o.flags&=-3,ih(o.alternate,o);break;case 4096:o.flags&=-4097;break;case 4100:o.flags&=-4097,ih(o.alternate,o);break;case 4:ih(o.alternate,o)}}catch(He){On(o,o.return,He)}if(f=o.sibling,f!==null){f.return=o.return,Ae=f;break}Ae=o.return}}}function dy(a,o,f){Ae=a,rm(a)}function rm(a,o,f){for(var g=(a.mode&1)!==0;Ae!==null;){var S=Ae,T=S.child;if(S.tag===22&&g){var N=S.memoizedState!==null||ml;if(!N){var G=S.alternate,ne=G!==null&&G.memoizedState!==null||Nr;G=ml;var _e=Nr;if(ml=N,(Nr=ne)&&!_e)for(Ae=S;Ae!==null;)N=Ae,ne=N.child,N.tag===22&&N.memoizedState!==null?om(S):ne!==null?(ne.return=N,Ae=ne):om(S);for(;T!==null;)Ae=T,rm(T),T=T.sibling;Ae=S,ml=G,Nr=_e}sm(a)}else(S.subtreeFlags&8772)!==0&&T!==null?(T.return=S,Ae=T):sm(a)}}function sm(a){for(;Ae!==null;){var o=Ae;if((o.flags&8772)!==0){var f=o.alternate;try{if((o.flags&8772)!==0)switch(o.tag){case 0:case 11:case 15:Nr||Ua(5,o);break;case 1:var g=o.stateNode;if(o.flags&4&&!Nr)if(f===null)g.componentDidMount();else{var S=o.elementType===o.type?f.memoizedProps:ui(o.type,f.memoizedProps);g.componentDidUpdate(S,f.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}var T=o.updateQueue;T!==null&&$d(o,T,g);break;case 3:var N=o.updateQueue;if(N!==null){if(f=null,o.child!==null)switch(o.child.tag){case 5:f=ae(o.child.stateNode);break;case 1:f=o.child.stateNode}$d(o,N,f)}break;case 5:var G=o.stateNode;f===null&&o.flags&4&&Re(G,o.type,o.memoizedProps,o);break;case 6:break;case 4:break;case 12:break;case 13:if(pe&&o.memoizedState===null){var ne=o.alternate;if(ne!==null){var _e=ne.memoizedState;if(_e!==null){var Ue=_e.dehydrated;Ue!==null&&re(Ue)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(l(163))}Nr||o.flags&512&&eh(o)}catch(at){On(o,o.return,at)}}if(o===a){Ae=null;break}if(f=o.sibling,f!==null){f.return=o.return,Ae=f;break}Ae=o.return}}function am(a){for(;Ae!==null;){var o=Ae;if(o===a){Ae=null;break}var f=o.sibling;if(f!==null){f.return=o.return,Ae=f;break}Ae=o.return}}function om(a){for(;Ae!==null;){var o=Ae;try{switch(o.tag){case 0:case 11:case 15:var f=o.return;try{Ua(4,o)}catch(ne){On(o,f,ne)}break;case 1:var g=o.stateNode;if(typeof g.componentDidMount=="function"){var S=o.return;try{g.componentDidMount()}catch(ne){On(o,S,ne)}}var T=o.return;try{eh(o)}catch(ne){On(o,T,ne)}break;case 5:var N=o.return;try{eh(o)}catch(ne){On(o,N,ne)}}}catch(ne){On(o,o.return,ne)}if(o===a){Ae=null;break}var G=o.sibling;if(G!==null){G.return=o.return,Ae=G;break}Ae=o.return}}var vl=0,yl=1,xl=2,Sl=3,Ml=4;if(typeof Symbol=="function"&&Symbol.for){var Da=Symbol.for;vl=Da("selector.component"),yl=Da("selector.has_pseudo_class"),xl=Da("selector.role"),Sl=Da("selector.test_id"),Ml=Da("selector.text")}function rh(a){var o=le(a);if(o!=null){if(typeof o.memoizedProps["data-testname"]!="string")throw Error(l(364));return o}if(a=gt(a),a===null)throw Error(l(362));return a.stateNode.current}function sh(a,o){switch(o.$$typeof){case vl:if(a.type===o.value)return!0;break;case yl:e:{o=o.value,a=[a,0];for(var f=0;f<a.length;){var g=a[f++],S=a[f++],T=o[S];if(g.tag!==5||!C(g)){for(;T!=null&&sh(g,T);)S++,T=o[S];if(S===o.length){o=!0;break e}else for(g=g.child;g!==null;)a.push(g,S),g=g.sibling}}o=!1}return o;case xl:if(a.tag===5&&j(a.stateNode,o.value))return!0;break;case Ml:if((a.tag===5||a.tag===6)&&(a=O(a),a!==null&&0<=a.indexOf(o.value)))return!0;break;case Sl:if(a.tag===5&&(a=a.memoizedProps["data-testname"],typeof a=="string"&&a.toLowerCase()===o.value.toLowerCase()))return!0;break;default:throw Error(l(365))}return!1}function ah(a){switch(a.$$typeof){case vl:return"<"+(I(a.value)||"Unknown")+">";case yl:return":has("+(ah(a)||"")+")";case xl:return'[role="'+a.value+'"]';case Ml:return'"'+a.value+'"';case Sl:return'[data-testname="'+a.value+'"]';default:throw Error(l(365))}}function lm(a,o){var f=[];a=[a,0];for(var g=0;g<a.length;){var S=a[g++],T=a[g++],N=o[T];if(S.tag!==5||!C(S)){for(;N!=null&&sh(S,N);)T++,N=o[T];if(T===o.length)f.push(S);else for(S=S.child;S!==null;)a.push(S,T),S=S.sibling}}return f}function oh(a,o){if(!Ke)throw Error(l(363));a=rh(a),a=lm(a,o),o=[],a=Array.from(a);for(var f=0;f<a.length;){var g=a[f++];if(g.tag===5)C(g)||o.push(g.stateNode);else for(g=g.child;g!==null;)a.push(g),g=g.sibling}return o}var py=Math.ceil,El=c.ReactCurrentDispatcher,lh=c.ReactCurrentOwner,qt=c.ReactCurrentBatchConfig,pt=0,Qt=null,$t=null,mn=0,Zn=0,As=it(0),nn=0,Na=null,bs=0,wl=0,ch=0,Oa=null,Dn=null,uh=0,hh=1/0;function Rs(){hh=ln()+500}var Tl=!1,fh=null,lr=null,Al=!1,cr=null,bl=0,Fa=0,dh=null,Rl=-1,Cl=0;function Rn(){return(pt&6)!==0?ln():Rl!==-1?Rl:Rl=ln()}function ur(a){return(a.mode&1)===0?1:(pt&2)!==0&&mn!==0?mn&-mn:Kv.transition!==null?(Cl===0&&(a=Vo,Vo<<=1,(Vo&4194240)===0&&(Vo=64),Cl=a),Cl):(a=xt,a!==0?a:ue())}function ri(a,o,f){if(50<Fa)throw Fa=0,dh=null,Error(l(185));var g=Pl(a,o);return g===null?null:(xa(g,o,f),((pt&2)===0||g!==Qt)&&(g===Qt&&((pt&2)===0&&(wl|=o),nn===4&&hr(g,mn)),Nn(g,f),o===1&&pt===0&&(a.mode&1)===0&&(Rs(),qo&&Ei())),g)}function Pl(a,o){a.lanes|=o;var f=a.alternate;for(f!==null&&(f.lanes|=o),f=a,a=a.return;a!==null;)a.childLanes|=o,f=a.alternate,f!==null&&(f.childLanes|=o),f=a,a=a.return;return f.tag===3?f.stateNode:null}function Nn(a,o){var f=a.callbackNode;Hv(a,o);var g=Wo(a,a===Qt?mn:0);if(g===0)f!==null&&Zd(f),a.callbackNode=null,a.callbackPriority=0;else if(o=g&-g,a.callbackPriority!==o){if(f!=null&&Zd(f),o===1)a.tag===0?Jv(um.bind(null,a)):Jd(um.bind(null,a)),Pe?Ne(function(){pt===0&&Ei()}):Su(Mu,Ei),f=null;else{switch(Yd(g)){case 1:f=Mu;break;case 4:f=Xv;break;case 16:f=Eu;break;case 536870912:f=qv;break;default:f=Eu}f=ym(f,cm.bind(null,a))}a.callbackPriority=o,a.callbackNode=f}}function cm(a,o){if(Rl=-1,Cl=0,(pt&6)!==0)throw Error(l(327));var f=a.callbackNode;if(zr()&&a.callbackNode!==f)return null;var g=Wo(a,a===Qt?mn:0);if(g===0)return null;if((g&30)!==0||(g&a.expiredLanes)!==0||o)o=Ll(a,g);else{o=g;var S=pt;pt|=2;var T=dm();(Qt!==a||mn!==o)&&(Rs(),Fr(a,o));do try{_y();break}catch(G){fm(a,G)}while(!0);Au(),El.current=T,pt=S,$t!==null?o=0:(Qt=null,mn=0,o=nn)}if(o!==0){if(o===2&&(S=vu(a),S!==0&&(g=S,o=ph(a,S))),o===1)throw f=Na,Fr(a,0),hr(a,g),Nn(a,ln()),f;if(o===6)hr(a,g);else{if(S=a.current.alternate,(g&30)===0&&!my(S)&&(o=Ll(a,g),o===2&&(T=vu(a),T!==0&&(g=T,o=ph(a,T))),o===1))throw f=Na,Fr(a,0),hr(a,g),Nn(a,ln()),f;switch(a.finishedWork=S,a.finishedLanes=g,o){case 0:case 1:throw Error(l(345));case 2:Br(a,Dn);break;case 3:if(hr(a,g),(g&130023424)===g&&(o=uh+500-ln(),10<o)){if(Wo(a,0)!==0)break;if(S=a.suspendedLanes,(S&g)!==g){Rn(),a.pingedLanes|=a.suspendedLanes&S;break}a.timeoutHandle=Be(Br.bind(null,a,Dn),o);break}Br(a,Dn);break;case 4:if(hr(a,g),(g&4194240)===g)break;for(o=a.eventTimes,S=-1;0<g;){var N=31-ci(g);T=1<<N,N=o[N],N>S&&(S=N),g&=~T}if(g=S,g=ln()-g,g=(120>g?120:480>g?480:1080>g?1080:1920>g?1920:3e3>g?3e3:4320>g?4320:1960*py(g/1960))-g,10<g){a.timeoutHandle=Be(Br.bind(null,a,Dn),g);break}Br(a,Dn);break;case 5:Br(a,Dn);break;default:throw Error(l(329))}}}return Nn(a,ln()),a.callbackNode===f?cm.bind(null,a):null}function ph(a,o){var f=Oa;return a.current.memoizedState.isDehydrated&&(Fr(a,o).flags|=256),a=Ll(a,o),a!==2&&(o=Dn,Dn=f,o!==null&&mh(o)),a}function mh(a){Dn===null?Dn=a:Dn.push.apply(Dn,a)}function my(a){for(var o=a;;){if(o.flags&16384){var f=o.updateQueue;if(f!==null&&(f=f.stores,f!==null))for(var g=0;g<f.length;g++){var S=f[g],T=S.getSnapshot;S=S.value;try{if(!Mi(T(),S))return!1}catch{return!1}}}if(f=o.child,o.subtreeFlags&16384&&f!==null)f.return=o,o=f;else{if(o===a)break;for(;o.sibling===null;){if(o.return===null||o.return===a)return!0;o=o.return}o.sibling.return=o.return,o=o.sibling}}return!0}function hr(a,o){for(o&=~ch,o&=~wl,a.suspendedLanes|=o,a.pingedLanes&=~o,a=a.expirationTimes;0<o;){var f=31-ci(o),g=1<<f;a[f]=-1,o&=~g}}function um(a){if((pt&6)!==0)throw Error(l(327));zr();var o=Wo(a,0);if((o&1)===0)return Nn(a,ln()),null;var f=Ll(a,o);if(a.tag!==0&&f===2){var g=vu(a);g!==0&&(o=g,f=ph(a,g))}if(f===1)throw f=Na,Fr(a,0),hr(a,o),Nn(a,ln()),f;if(f===6)throw Error(l(345));return a.finishedWork=a.current.alternate,a.finishedLanes=o,Br(a,Dn),Nn(a,ln()),null}function hm(a){cr!==null&&cr.tag===0&&(pt&6)===0&&zr();var o=pt;pt|=1;var f=qt.transition,g=xt;try{if(qt.transition=null,xt=1,a)return a()}finally{xt=g,qt.transition=f,pt=o,(pt&6)===0&&Ei()}}function gh(){Zn=As.current,At(As)}function Fr(a,o){a.finishedWork=null,a.finishedLanes=0;var f=a.timeoutHandle;if(f!==_t&&(a.timeoutHandle=_t,Xe(f)),$t!==null)for(f=$t.return;f!==null;){var g=f;switch(Uu(g),g.tag){case 1:g=g.type.childContextTypes,g!=null&&sr();break;case 3:ws(),At(jt),At(tn),ku();break;case 5:Bu(g);break;case 4:ws();break;case 13:At(zt);break;case 19:At(zt);break;case 10:bu(g.type._context);break;case 22:case 23:gh()}f=f.return}if(Qt=a,$t=a=fr(a.current,null),mn=Zn=o,nn=0,Na=null,ch=wl=bs=0,Dn=Oa=null,wi!==null){for(o=0;o<wi.length;o++)if(f=wi[o],g=f.interleaved,g!==null){f.interleaved=null;var S=g.next,T=f.pending;if(T!==null){var N=T.next;T.next=S,g.next=N}f.pending=g}wi=null}return a}function fm(a,o){do{var f=$t;try{if(Au(),il.current=cl,rl){for(var g=Gt.memoizedState;g!==null;){var S=g.queue;S!==null&&(S.pending=null),g=g.next}rl=!1}if(Ts=0,cn=yn=Gt=null,Aa=!1,ba=0,lh.current=null,f===null||f.return===null){nn=1,Na=o,$t=null;break}e:{var T=a,N=f.return,G=f,ne=o;if(o=mn,G.flags|=32768,ne!==null&&typeof ne=="object"&&typeof ne.then=="function"){var _e=ne,Ue=G,at=Ue.tag;if((Ue.mode&1)===0&&(at===0||at===11||at===15)){var Ye=Ue.alternate;Ye?(Ue.updateQueue=Ye.updateQueue,Ue.memoizedState=Ye.memoizedState,Ue.lanes=Ye.lanes):(Ue.updateQueue=null,Ue.memoizedState=null)}var Lt=Up(N);if(Lt!==null){Lt.flags&=-257,Dp(Lt,N,G,T,o),Lt.mode&1&&Ip(T,_e,o),o=Lt,ne=_e;var Ge=o.updateQueue;if(Ge===null){var Mn=new Set;Mn.add(ne),o.updateQueue=Mn}else Ge.add(ne);break e}else{if((o&1)===0){Ip(T,_e,o),_h();break e}ne=Error(l(426))}}else if(Bt&&G.mode&1){var ai=Up(N);if(ai!==null){(ai.flags&65536)===0&&(ai.flags|=256),Dp(ai,N,G,T,o),Ou(ne);break e}}T=ne,nn!==4&&(nn=2),Oa===null?Oa=[T]:Oa.push(T),ne=Yu(ne,G),G=N;do{switch(G.tag){case 3:G.flags|=65536,o&=-o,G.lanes|=o;var J=Pp(G,ne,o);Qd(G,J);break e;case 1:T=ne;var W=G.type,te=G.stateNode;if((G.flags&128)===0&&(typeof W.getDerivedStateFromError=="function"||te!==null&&typeof te.componentDidCatch=="function"&&(lr===null||!lr.has(te)))){G.flags|=65536,o&=-o,G.lanes|=o;var Ce=Lp(G,T,o);Qd(G,Ce);break e}}G=G.return}while(G!==null)}mm(f)}catch(He){o=He,$t===f&&f!==null&&($t=f=f.return);continue}break}while(!0)}function dm(){var a=El.current;return El.current=cl,a===null?cl:a}function _h(){(nn===0||nn===3||nn===2)&&(nn=4),Qt===null||(bs&268435455)===0&&(wl&268435455)===0||hr(Qt,mn)}function Ll(a,o){var f=pt;pt|=2;var g=dm();Qt===a&&mn===o||Fr(a,o);do try{gy();break}catch(S){fm(a,S)}while(!0);if(Au(),pt=f,El.current=g,$t!==null)throw Error(l(261));return Qt=null,mn=0,nn}function gy(){for(;$t!==null;)pm($t)}function _y(){for(;$t!==null&&!Gv();)pm($t)}function pm(a){var o=vm(a.alternate,a,Zn);a.memoizedProps=a.pendingProps,o===null?mm(a):$t=o,lh.current=null}function mm(a){var o=a;do{var f=o.alternate;if(a=o.return,(o.flags&32768)===0){if(f=ay(f,o,Zn),f!==null){$t=f;return}}else{if(f=cy(f,o),f!==null){f.flags&=32767,$t=f;return}if(a!==null)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{nn=6,$t=null;return}}if(o=o.sibling,o!==null){$t=o;return}$t=o=a}while(o!==null);nn===0&&(nn=5)}function Br(a,o){var f=xt,g=qt.transition;try{qt.transition=null,xt=1,vy(a,o,f)}finally{qt.transition=g,xt=f}return null}function vy(a,o,f){do zr();while(cr!==null);if((pt&6)!==0)throw Error(l(327));var g=a.finishedWork,S=a.finishedLanes;if(g===null)return null;if(a.finishedWork=null,a.finishedLanes=0,g===a.current)throw Error(l(177));a.callbackNode=null,a.callbackPriority=0;var T=g.lanes|g.childLanes;if(Vv(a,T),a===Qt&&($t=Qt=null,mn=0),(g.subtreeFlags&2064)===0&&(g.flags&2064)===0||Al||(Al=!0,ym(Eu,function(){return zr(),null})),T=(g.flags&15990)!==0,(g.subtreeFlags&15990)!==0||T){T=qt.transition,qt.transition=null;var N=xt;xt=1;var G=pt;pt|=4,lh.current=null,hy(a,g),fy(a,g),Y(a.containerInfo),a.current=g,dy(g),Wv(),pt=G,xt=N,qt.transition=T}else a.current=g;if(Al&&(Al=!1,cr=a,bl=S),T=a.pendingLanes,T===0&&(lr=null),Yv(g.stateNode),Nn(a,ln()),o!==null)for(f=a.onRecoverableError,g=0;g<o.length;g++)f(o[g]);if(Tl)throw Tl=!1,a=fh,fh=null,a;return(bl&1)!==0&&a.tag!==0&&zr(),T=a.pendingLanes,(T&1)!==0?a===dh?Fa++:(Fa=0,dh=a):Fa=0,Ei(),null}function zr(){if(cr!==null){var a=Yd(bl),o=qt.transition,f=xt;try{if(qt.transition=null,xt=16>a?16:a,cr===null)var g=!1;else{if(a=cr,cr=null,bl=0,(pt&6)!==0)throw Error(l(331));var S=pt;for(pt|=4,Ae=a.current;Ae!==null;){var T=Ae,N=T.child;if((Ae.flags&16)!==0){var G=T.deletions;if(G!==null){for(var ne=0;ne<G.length;ne++){var _e=G[ne];for(Ae=_e;Ae!==null;){var Ue=Ae;switch(Ue.tag){case 0:case 11:case 15:Or(8,Ue,T)}var at=Ue.child;if(at!==null)at.return=Ue,Ae=at;else for(;Ae!==null;){Ue=Ae;var Ye=Ue.sibling,Lt=Ue.return;if($p(Ue),Ue===_e){Ae=null;break}if(Ye!==null){Ye.return=Lt,Ae=Ye;break}Ae=Lt}}}var Ge=T.alternate;if(Ge!==null){var Mn=Ge.child;if(Mn!==null){Ge.child=null;do{var ai=Mn.sibling;Mn.sibling=null,Mn=ai}while(Mn!==null)}}Ae=T}}if((T.subtreeFlags&2064)!==0&&N!==null)N.return=T,Ae=N;else e:for(;Ae!==null;){if(T=Ae,(T.flags&2048)!==0)switch(T.tag){case 0:case 11:case 15:Or(9,T,T.return)}var J=T.sibling;if(J!==null){J.return=T.return,Ae=J;break e}Ae=T.return}}var W=a.current;for(Ae=W;Ae!==null;){N=Ae;var te=N.child;if((N.subtreeFlags&2064)!==0&&te!==null)te.return=N,Ae=te;else e:for(N=W;Ae!==null;){if(G=Ae,(G.flags&2048)!==0)try{switch(G.tag){case 0:case 11:case 15:Ua(9,G)}}catch(He){On(G,G.return,He)}if(G===N){Ae=null;break e}var Ce=G.sibling;if(Ce!==null){Ce.return=G.return,Ae=Ce;break e}Ae=G.return}}if(pt=S,Ei(),Si&&typeof Si.onPostCommitFiberRoot=="function")try{Si.onPostCommitFiberRoot(Xo,a)}catch{}g=!0}return g}finally{xt=f,qt.transition=o}}return!1}function gm(a,o,f){o=Yu(f,o),o=Pp(a,o,1),or(a,o),o=Rn(),a=Pl(a,1),a!==null&&(xa(a,1,o),Nn(a,o))}function On(a,o,f){if(a.tag===3)gm(a,a,f);else for(;o!==null;){if(o.tag===3){gm(o,a,f);break}else if(o.tag===1){var g=o.stateNode;if(typeof o.type.getDerivedStateFromError=="function"||typeof g.componentDidCatch=="function"&&(lr===null||!lr.has(g))){a=Yu(f,a),a=Lp(o,a,1),or(o,a),a=Rn(),o=Pl(o,1),o!==null&&(xa(o,1,a),Nn(o,a));break}}o=o.return}}function yy(a,o,f){var g=a.pingCache;g!==null&&g.delete(o),o=Rn(),a.pingedLanes|=a.suspendedLanes&f,Qt===a&&(mn&f)===f&&(nn===4||nn===3&&(mn&130023424)===mn&&500>ln()-uh?Fr(a,0):ch|=f),Nn(a,o)}function _m(a,o){o===0&&((a.mode&1)===0?o=1:(o=Go,Go<<=1,(Go&130023424)===0&&(Go=4194304)));var f=Rn();a=Pl(a,o),a!==null&&(xa(a,o,f),Nn(a,f))}function xy(a){var o=a.memoizedState,f=0;o!==null&&(f=o.retryLane),_m(a,f)}function Sy(a,o){var f=0;switch(a.tag){case 13:var g=a.stateNode,S=a.memoizedState;S!==null&&(f=S.retryLane);break;case 19:g=a.stateNode;break;default:throw Error(l(314))}g!==null&&g.delete(o),_m(a,f)}var vm;vm=function(a,o,f){if(a!==null)if(a.memoizedProps!==o.pendingProps||jt.current)Yn=!0;else{if((a.lanes&f)===0&&(o.flags&128)===0)return Yn=!1,ly(a,o,f);Yn=(a.flags&131072)!==0}else Yn=!1,Bt&&(o.flags&1048576)!==0&&rp(o,el,o.index);switch(o.lanes=0,o.tag){case 2:var g=o.type;a!==null&&(a.alternate=null,o.alternate=null,o.flags|=2),a=o.pendingProps;var S=Ht(o,tn.current);vs(o,f),S=Vu(null,o,g,a,S,f);var T=Gu();return o.flags|=1,typeof S=="object"&&S!==null&&typeof S.render=="function"&&S.$$typeof===void 0?(o.tag=1,o.memoizedState=null,o.updateQueue=null,Vt(g)?(T=!0,gs(o)):T=!1,o.memoizedState=S.state!==null&&S.state!==void 0?S.state:null,Cu(o),S.updater=Qo,o.stateNode=S,S._reactInternals=o,Lu(o,g,a,f),o=Ku(null,o,g,!0,T,f)):(o.tag=0,Bt&&T&&Iu(o),bn(null,o,S,f),o=o.child),o;case 16:g=o.elementType;e:{switch(a!==null&&(a.alternate=null,o.alternate=null,o.flags|=2),a=o.pendingProps,S=g._init,g=S(g._payload),o.type=g,S=o.tag=Ey(g),a=ui(g,a),S){case 0:o=Ju(null,o,g,a,f);break e;case 1:o=Vp(null,o,g,a,f);break e;case 11:o=Fp(null,o,g,a,f);break e;case 14:o=Bp(null,o,g,ui(g.type,a),f);break e}throw Error(l(306,g,""))}return o;case 0:return g=o.type,S=o.pendingProps,S=o.elementType===g?S:ui(g,S),Ju(a,o,g,S,f);case 1:return g=o.type,S=o.pendingProps,S=o.elementType===g?S:ui(g,S),Vp(a,o,g,S,f);case 3:e:{if(Gp(o),a===null)throw Error(l(387));g=o.pendingProps,T=o.memoizedState,S=T.element,jd(a,o),jo(o,g,null,f);var N=o.memoizedState;if(g=N.element,pe&&T.isDehydrated)if(T={element:g,isDehydrated:!1,cache:N.cache,transitions:N.transitions},o.updateQueue.baseState=T,o.memoizedState=T,o.flags&256){S=Error(l(423)),o=Wp(a,o,g,f,S);break e}else if(g!==S){S=Error(l(424)),o=Wp(a,o,g,f,S);break e}else for(pe&&(qn=mu(o.stateNode.containerInfo),Xn=o,Bt=!0,hi=null,Sa=!1),f=up(o,null,g,f),o.child=f;f;)f.flags=f.flags&-3|4096,f=f.sibling;else{if(Ss(),g===S){o=Gi(a,o,f);break e}bn(a,o,g,f)}o=o.child}return o;case 5:return hp(o),a===null&&Nu(o),g=o.type,S=o.pendingProps,T=a!==null?a.memoizedProps:null,N=S.children,Te(g,S)?N=null:T!==null&&Te(g,T)&&(o.flags|=32),Hp(a,o),bn(a,o,N,f),o.child;case 6:return a===null&&Nu(o),null;case 13:return Xp(a,o,f);case 4:return Fu(o,o.stateNode.containerInfo),g=o.pendingProps,a===null?o.child=Ms(o,null,g,f):bn(a,o,g,f),o.child;case 11:return g=o.type,S=o.pendingProps,S=o.elementType===g?S:ui(g,S),Fp(a,o,g,S,f);case 7:return bn(a,o,o.pendingProps,f),o.child;case 8:return bn(a,o,o.pendingProps.children,f),o.child;case 12:return bn(a,o,o.pendingProps.children,f),o.child;case 10:e:{if(g=o.type._context,S=o.pendingProps,T=o.memoizedProps,N=S.value,Kd(o,g,N),T!==null)if(Mi(T.value,N)){if(T.children===S.children&&!jt.current){o=Gi(a,o,f);break e}}else for(T=o.child,T!==null&&(T.return=o);T!==null;){var G=T.dependencies;if(G!==null){N=T.child;for(var ne=G.firstContext;ne!==null;){if(ne.context===g){if(T.tag===1){ne=zi(-1,f&-f),ne.tag=2;var _e=T.updateQueue;if(_e!==null){_e=_e.shared;var Ue=_e.pending;Ue===null?ne.next=ne:(ne.next=Ue.next,Ue.next=ne),_e.pending=ne}}T.lanes|=f,ne=T.alternate,ne!==null&&(ne.lanes|=f),Ru(T.return,f,o),G.lanes|=f;break}ne=ne.next}}else if(T.tag===10)N=T.type===o.type?null:T.child;else if(T.tag===18){if(N=T.return,N===null)throw Error(l(341));N.lanes|=f,G=N.alternate,G!==null&&(G.lanes|=f),Ru(N,f,o),N=T.sibling}else N=T.child;if(N!==null)N.return=T;else for(N=T;N!==null;){if(N===o){N=null;break}if(T=N.sibling,T!==null){T.return=N.return,N=T;break}N=N.return}T=N}bn(a,o,S.children,f),o=o.child}return o;case 9:return S=o.type,g=o.pendingProps.children,vs(o,f),S=$n(S),g=g(S),o.flags|=1,bn(a,o,g,f),o.child;case 14:return g=o.type,S=ui(g,o.pendingProps),S=ui(g.type,S),Bp(a,o,g,S,f);case 15:return zp(a,o,o.type,o.pendingProps,f);case 17:return g=o.type,S=o.pendingProps,S=o.elementType===g?S:ui(g,S),a!==null&&(a.alternate=null,o.alternate=null,o.flags|=2),o.tag=1,Vt(g)?(a=!0,gs(o)):a=!1,vs(o,f),np(o,g,S),Lu(o,g,S,f),Ku(null,o,g,!0,a,f);case 19:return Jp(a,o,f);case 22:return kp(a,o,f)}throw Error(l(156,o.tag))};function ym(a,o){return Su(a,o)}function My(a,o,f,g){this.tag=a,this.key=f,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=o,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=g,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function si(a,o,f,g){return new My(a,o,f,g)}function vh(a){return a=a.prototype,!(!a||!a.isReactComponent)}function Ey(a){if(typeof a=="function")return vh(a)?1:0;if(a!=null){if(a=a.$$typeof,a===E)return 11;if(a===w)return 14}return 2}function fr(a,o){var f=a.alternate;return f===null?(f=si(a.tag,o,a.key,a.mode),f.elementType=a.elementType,f.type=a.type,f.stateNode=a.stateNode,f.alternate=a,a.alternate=f):(f.pendingProps=o,f.type=a.type,f.flags=0,f.subtreeFlags=0,f.deletions=null),f.flags=a.flags&14680064,f.childLanes=a.childLanes,f.lanes=a.lanes,f.child=a.child,f.memoizedProps=a.memoizedProps,f.memoizedState=a.memoizedState,f.updateQueue=a.updateQueue,o=a.dependencies,f.dependencies=o===null?null:{lanes:o.lanes,firstContext:o.firstContext},f.sibling=a.sibling,f.index=a.index,f.ref=a.ref,f}function Il(a,o,f,g,S,T){var N=2;if(g=a,typeof a=="function")vh(a)&&(N=1);else if(typeof a=="string")N=5;else e:switch(a){case d:return kr(f.children,S,T,o);case p:N=8,S|=8;break;case m:return a=si(12,f,o,S|2),a.elementType=m,a.lanes=T,a;case x:return a=si(13,f,o,S),a.elementType=x,a.lanes=T,a;case v:return a=si(19,f,o,S),a.elementType=v,a.lanes=T,a;case A:return Ul(f,S,T,o);default:if(typeof a=="object"&&a!==null)switch(a.$$typeof){case _:N=10;break e;case y:N=9;break e;case E:N=11;break e;case w:N=14;break e;case M:N=16,g=null;break e}throw Error(l(130,a==null?a:typeof a,""))}return o=si(N,f,o,S),o.elementType=a,o.type=g,o.lanes=T,o}function kr(a,o,f,g){return a=si(7,a,g,o),a.lanes=f,a}function Ul(a,o,f,g){return a=si(22,a,g,o),a.elementType=A,a.lanes=f,a.stateNode={},a}function yh(a,o,f){return a=si(6,a,null,o),a.lanes=f,a}function xh(a,o,f){return o=si(4,a.children!==null?a.children:[],a.key,o),o.lanes=f,o.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation},o}function wy(a,o,f,g,S){this.tag=o,this.containerInfo=a,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=_t,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=yu(0),this.expirationTimes=yu(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=yu(0),this.identifierPrefix=g,this.onRecoverableError=S,pe&&(this.mutableSourceEagerHydrationData=null)}function xm(a,o,f,g,S,T,N,G,ne){return a=new wy(a,o,f,G,ne),o===1?(o=1,T===!0&&(o|=8)):o=0,T=si(3,null,null,o),a.current=T,T.stateNode=a,T.memoizedState={element:g,isDehydrated:f,cache:null,transitions:null},Cu(T),a}function Sm(a){if(!a)return _n;a=a._reactInternals;e:{if(b(a)!==a||a.tag!==1)throw Error(l(170));var o=a;do{switch(o.tag){case 3:o=o.stateNode.context;break e;case 1:if(Vt(o.type)){o=o.stateNode.__reactInternalMemoizedMergedChildContext;break e}}o=o.return}while(o!==null);throw Error(l(171))}if(a.tag===1){var f=a.type;if(Vt(f))return ms(a,f,o)}return o}function Mm(a){var o=a._reactInternals;if(o===void 0)throw typeof a.render=="function"?Error(l(188)):(a=Object.keys(a).join(","),Error(l(268,a)));return a=ee(o),a===null?null:a.stateNode}function Em(a,o){if(a=a.memoizedState,a!==null&&a.dehydrated!==null){var f=a.retryLane;a.retryLane=f!==0&&f<o?f:o}}function Sh(a,o){Em(a,o),(a=a.alternate)&&Em(a,o)}function Ty(a){return a=ee(a),a===null?null:a.stateNode}function Ay(){return null}return t.attemptContinuousHydration=function(a){if(a.tag===13){var o=Rn();ri(a,134217728,o),Sh(a,134217728)}},t.attemptHydrationAtCurrentPriority=function(a){if(a.tag===13){var o=Rn(),f=ur(a);ri(a,f,o),Sh(a,f)}},t.attemptSynchronousHydration=function(a){switch(a.tag){case 3:var o=a.stateNode;if(o.current.memoizedState.isDehydrated){var f=ya(o.pendingLanes);f!==0&&(xu(o,f|1),Nn(o,ln()),(pt&6)===0&&(Rs(),Ei()))}break;case 13:var g=Rn();hm(function(){return ri(a,1,g)}),Sh(a,1)}},t.batchedUpdates=function(a,o){var f=pt;pt|=1;try{return a(o)}finally{pt=f,pt===0&&(Rs(),qo&&Ei())}},t.createComponentSelector=function(a){return{$$typeof:vl,value:a}},t.createContainer=function(a,o,f,g,S,T,N){return xm(a,o,!1,null,f,g,S,T,N)},t.createHasPseudoClassSelector=function(a){return{$$typeof:yl,value:a}},t.createHydrationContainer=function(a,o,f,g,S,T,N,G,ne){return a=xm(f,g,!0,a,S,T,N,G,ne),a.context=Sm(null),f=a.current,g=Rn(),S=ur(f),T=zi(g,S),T.callback=o??null,or(f,T),a.current.lanes=S,xa(a,S,g),Nn(a,g),a},t.createPortal=function(a,o,f){var g=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:h,key:g==null?null:""+g,children:a,containerInfo:o,implementation:f}},t.createRoleSelector=function(a){return{$$typeof:xl,value:a}},t.createTestNameSelector=function(a){return{$$typeof:Sl,value:a}},t.createTextSelector=function(a){return{$$typeof:Ml,value:a}},t.deferredUpdates=function(a){var o=xt,f=qt.transition;try{return qt.transition=null,xt=16,a()}finally{xt=o,qt.transition=f}},t.discreteUpdates=function(a,o,f,g,S){var T=xt,N=qt.transition;try{return qt.transition=null,xt=1,a(o,f,g,S)}finally{xt=T,qt.transition=N,pt===0&&Rs()}},t.findAllNodes=oh,t.findBoundingRects=function(a,o){if(!Ke)throw Error(l(363));o=oh(a,o),a=[];for(var f=0;f<o.length;f++)a.push(Ft(o[f]));for(o=a.length-1;0<o;o--){f=a[o];for(var g=f.x,S=g+f.width,T=f.y,N=T+f.height,G=o-1;0<=G;G--)if(o!==G){var ne=a[G],_e=ne.x,Ue=_e+ne.width,at=ne.y,Ye=at+ne.height;if(g>=_e&&T>=at&&S<=Ue&&N<=Ye){a.splice(o,1);break}else if(g!==_e||f.width!==ne.width||Ye<T||at>N){if(!(T!==at||f.height!==ne.height||Ue<g||_e>S)){_e>g&&(ne.width+=_e-g,ne.x=g),Ue<S&&(ne.width=S-_e),a.splice(o,1);break}}else{at>T&&(ne.height+=at-T,ne.y=T),Ye<N&&(ne.height=N-at),a.splice(o,1);break}}}return a},t.findHostInstance=Mm,t.findHostInstanceWithNoPortals=function(a){return a=H(a),a=a!==null?V(a):null,a===null?null:a.stateNode},t.findHostInstanceWithWarning=function(a){return Mm(a)},t.flushControlled=function(a){var o=pt;pt|=1;var f=qt.transition,g=xt;try{qt.transition=null,xt=1,a()}finally{xt=g,qt.transition=f,pt=o,pt===0&&(Rs(),Ei())}},t.flushPassiveEffects=zr,t.flushSync=hm,t.focusWithin=function(a,o){if(!Ke)throw Error(l(363));for(a=rh(a),o=lm(a,o),o=Array.from(o),a=0;a<o.length;){var f=o[a++];if(!C(f)){if(f.tag===5&&me(f.stateNode))return!0;for(f=f.child;f!==null;)o.push(f),f=f.sibling}}return!1},t.getCurrentUpdatePriority=function(){return xt},t.getFindAllNodesFailureDescription=function(a,o){if(!Ke)throw Error(l(363));var f=0,g=[];a=[rh(a),0];for(var S=0;S<a.length;){var T=a[S++],N=a[S++],G=o[N];if((T.tag!==5||!C(T))&&(sh(T,G)&&(g.push(ah(G)),N++,N>f&&(f=N)),N<o.length))for(T=T.child;T!==null;)a.push(T,N),T=T.sibling}if(f<o.length){for(a=[];f<o.length;f++)a.push(ah(o[f]));return`findAllNodes was able to match part of the selector:
  `+(g.join(" > ")+`

No matching component was found for:
  `)+a.join(" > ")}return null},t.getPublicRootInstance=function(a){if(a=a.current,!a.child)return null;switch(a.child.tag){case 5:return ae(a.child.stateNode);default:return a.child.stateNode}},t.injectIntoDevTools=function(a){if(a={bundleType:a.bundleType,version:a.version,rendererPackageName:a.rendererPackageName,rendererConfig:a.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:c.ReactCurrentDispatcher,findHostInstanceByFiber:Ty,findFiberByHostInstance:a.findFiberByHostInstance||Ay,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")a=!1;else{var o=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(o.isDisabled||!o.supportsFiber)a=!0;else{try{Xo=o.inject(a),Si=o}catch{}a=!!o.checkDCE}}return a},t.isAlreadyRendering=function(){return!1},t.observeVisibleRects=function(a,o,f,g){if(!Ke)throw Error(l(363));a=oh(a,o);var S=de(a,f,g).disconnect;return{disconnect:function(){S()}}},t.registerMutableSourceForHydration=function(a,o){var f=o._getVersion;f=f(o._source),a.mutableSourceEagerHydrationData==null?a.mutableSourceEagerHydrationData=[o,f]:a.mutableSourceEagerHydrationData.push(o,f)},t.runWithPriority=function(a,o){var f=xt;try{return xt=a,o()}finally{xt=f}},t.shouldError=function(){return null},t.shouldSuspend=function(){return!1},t.updateContainer=function(a,o,f,g){var S=o.current,T=Rn(),N=ur(S);return f=Sm(f),o.context===null?o.context=f:o.pendingContext=f,o=zi(T,N),o.payload={element:a},g=g===void 0?null:g,g!==null&&(o.callback=g),or(S,o),a=ri(S,N,T),a!==null&&Ko(a,S,N),N},t}),af}var i0;function TA(){return i0||(i0=1,nf.exports=wA()),nf.exports}var AA=TA();const bA=Cy(AA);var r0=Tv();const qd={},JA=r=>void Object.assign(qd,r);function RA(r,e){function t(d,{args:p=[],attach:m,..._},y){let E=`${d[0].toUpperCase()}${d.slice(1)}`,x;if(d==="primitive"){if(_.object===void 0)throw new Error("R3F: Primitives without 'object' are invalid!");const v=_.object;x=$s(v,{type:d,root:y,attach:m,primitive:!0})}else{const v=qd[E];if(!v)throw new Error(`R3F: ${E} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(!Array.isArray(p))throw new Error("R3F: The args prop must be an array!");x=$s(new v(...p),{type:d,root:y,attach:m,memoizedProps:{args:p}})}return x.__r3f.attach===void 0&&(x.isBufferGeometry?x.__r3f.attach="geometry":x.isMaterial&&(x.__r3f.attach="material")),E!=="inject"&&cf(x,_),x}function n(d,p){let m=!1;if(p){var _,y;(_=p.__r3f)!=null&&_.attach?lf(d,p,p.__r3f.attach):p.isObject3D&&d.isObject3D&&(d.add(p),m=!0),m||(y=d.__r3f)==null||y.objects.push(p),p.__r3f||$s(p,{}),p.__r3f.parent=d,id(p),ea(p)}}function i(d,p,m){let _=!1;if(p){var y,E;if((y=p.__r3f)!=null&&y.attach)lf(d,p,p.__r3f.attach);else if(p.isObject3D&&d.isObject3D){p.parent=d,p.dispatchEvent({type:"added"}),d.dispatchEvent({type:"childadded",child:p});const x=d.children.filter(w=>w!==p),v=x.indexOf(m);d.children=[...x.slice(0,v),p,...x.slice(v)],_=!0}_||(E=d.__r3f)==null||E.objects.push(p),p.__r3f||$s(p,{}),p.__r3f.parent=d,id(p),ea(p)}}function s(d,p,m=!1){d&&[...d].forEach(_=>l(p,_,m))}function l(d,p,m){if(p){var _,y,E;if(p.__r3f&&(p.__r3f.parent=null),(_=d.__r3f)!=null&&_.objects&&(d.__r3f.objects=d.__r3f.objects.filter(A=>A!==p)),(y=p.__r3f)!=null&&y.attach)c0(d,p,p.__r3f.attach);else if(p.isObject3D&&d.isObject3D){var x;d.remove(p),(x=p.__r3f)!=null&&x.root&&OA(Ic(p),p)}const w=(E=p.__r3f)==null?void 0:E.primitive,M=!w&&(m===void 0?p.dispose!==null:m);if(!w){var v;s((v=p.__r3f)==null?void 0:v.objects,p,M),s(p.children,p,M)}if(delete p.__r3f,M&&p.dispose&&p.type!=="Scene"){const A=()=>{try{p.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT>"u"?r0.unstable_scheduleCallback(r0.unstable_IdlePriority,A):A()}ea(d)}}function c(d,p,m,_){var y;const E=(y=d.__r3f)==null?void 0:y.parent;if(!E)return;const x=t(p,m,d.__r3f.root);if(d.children){for(const v of d.children)v.__r3f&&n(x,v);d.children=d.children.filter(v=>!v.__r3f)}d.__r3f.objects.forEach(v=>n(x,v)),d.__r3f.objects=[],d.__r3f.autoRemovedBeforeAppend||l(E,d),x.parent&&(x.__r3f.autoRemovedBeforeAppend=!0),n(E,x),x.raycast&&x.__r3f.eventCount&&Ic(x).getState().internal.interaction.push(x),[_,_.alternate].forEach(v=>{v!==null&&(v.stateNode=x,v.ref&&(typeof v.ref=="function"?v.ref(x):v.ref.current=x))})}const u=()=>{};return{reconciler:bA({createInstance:t,removeChild:l,appendChild:n,appendInitialChild:n,insertBefore:i,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:(d,p)=>{if(!p)return;const m=d.getState().scene;m.__r3f&&(m.__r3f.root=d,n(m,p))},removeChildFromContainer:(d,p)=>{p&&l(d.getState().scene,p)},insertInContainerBefore:(d,p,m)=>{if(!p||!m)return;const _=d.getState().scene;_.__r3f&&i(_,p,m)},getRootHostContext:()=>null,getChildHostContext:d=>d,finalizeInitialChildren(d){var p;return!!((p=d==null?void 0:d.__r3f)!=null?p:{}).handlers},prepareUpdate(d,p,m,_){var y;if(((y=d==null?void 0:d.__r3f)!=null?y:{}).primitive&&_.object&&_.object!==d)return[!0];{const{args:x=[],children:v,...w}=_,{args:M=[],children:A,...R}=m;if(!Array.isArray(x))throw new Error("R3F: the args prop must be an array!");if(x.some((I,F)=>I!==M[F]))return[!0];const P=Pv(d,w,R,!0);return P.changes.length?[!1,P]:null}},commitUpdate(d,[p,m],_,y,E,x){p?c(d,_,E,x):cf(d,m)},commitMount(d,p,m,_){var y;const E=(y=d.__r3f)!=null?y:{};d.raycast&&E.handlers&&E.eventCount&&Ic(d).getState().internal.interaction.push(d)},getPublicInstance:d=>d,prepareForCommit:()=>null,preparePortalMount:d=>$s(d.getState().scene),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance(d){var p;const{attach:m,parent:_}=(p=d.__r3f)!=null?p:{};m&&_&&c0(_,d,m),d.isObject3D&&(d.visible=!1),ea(d)},unhideInstance(d,p){var m;const{attach:_,parent:y}=(m=d.__r3f)!=null?m:{};_&&y&&lf(y,d,_),(d.isObject3D&&p.visible==null||p.visible)&&(d.visible=!0),ea(d)},createTextInstance:u,hideTextInstance:u,unhideTextInstance:u,getCurrentEventPriority:()=>e?e():sa.DefaultEventPriority,beforeActiveInstanceBlur:()=>{},afterActiveInstanceBlur:()=>{},detachDeletedInstance:()=>{},now:typeof performance<"u"&&Nt.fun(performance.now)?performance.now:Nt.fun(Date.now)?Date.now:()=>0,scheduleTimeout:Nt.fun(setTimeout)?setTimeout:void 0,cancelTimeout:Nt.fun(clearTimeout)?clearTimeout:void 0}),applyProps:cf}}var s0,a0;const of=r=>"colorSpace"in r||"outputColorSpace"in r,Av=()=>{var r;return(r=qd.ColorManagement)!=null?r:null},bv=r=>r&&r.isOrthographicCamera,KA=r=>r&&r.hasOwnProperty("current"),pu=typeof window<"u"&&((s0=window.document)!=null&&s0.createElement||((a0=window.navigator)==null?void 0:a0.product)==="ReactNative")?fn.useLayoutEffect:fn.useEffect;function CA(r){const e=fn.useRef(r);return pu(()=>void(e.current=r),[r]),e}function jA({set:r}){return pu(()=>(r(new Promise(()=>null)),()=>r(!1)),[r]),null}class PA extends fn.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}}PA.getDerivedStateFromError=()=>({error:!0});const Rv="__default",o0=new Map,LA=r=>r&&!!r.memoized&&!!r.changes;function Cv(r){var e;const t=typeof window<"u"?(e=window.devicePixelRatio)!=null?e:2:1;return Array.isArray(r)?Math.min(Math.max(r[0],t),r[1]):r}const Za=r=>{var e;return(e=r.__r3f)==null?void 0:e.root.getState()};function Ic(r){let e=r.__r3f.root;for(;e.getState().previousRoot;)e=e.getState().previousRoot;return e}const Nt={obj:r=>r===Object(r)&&!Nt.arr(r)&&typeof r!="function",fun:r=>typeof r=="function",str:r=>typeof r=="string",num:r=>typeof r=="number",boo:r=>typeof r=="boolean",und:r=>r===void 0,arr:r=>Array.isArray(r),equ(r,e,{arrays:t="shallow",objects:n="reference",strict:i=!0}={}){if(typeof r!=typeof e||!!r!=!!e)return!1;if(Nt.str(r)||Nt.num(r)||Nt.boo(r))return r===e;const s=Nt.obj(r);if(s&&n==="reference")return r===e;const l=Nt.arr(r);if(l&&t==="reference")return r===e;if((l||s)&&r===e)return!0;let c;for(c in r)if(!(c in e))return!1;if(s&&t==="shallow"&&n==="shallow"){for(c in i?e:r)if(!Nt.equ(r[c],e[c],{strict:i,objects:"reference"}))return!1}else for(c in i?e:r)if(r[c]!==e[c])return!1;if(Nt.und(c)){if(l&&r.length===0&&e.length===0||s&&Object.keys(r).length===0&&Object.keys(e).length===0)return!0;if(r!==e)return!1}return!0}};function IA(r){const e={nodes:{},materials:{}};return r&&r.traverse(t=>{t.name&&(e.nodes[t.name]=t),t.material&&!e.materials[t.material.name]&&(e.materials[t.material.name]=t.material)}),e}function UA(r){r.dispose&&r.type!=="Scene"&&r.dispose();for(const e in r)e.dispose==null||e.dispose(),delete r[e]}function $s(r,e){const t=r;return t.__r3f={type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null,...e},r}function nd(r,e){let t=r;if(e.includes("-")){const n=e.split("-"),i=n.pop();return t=n.reduce((s,l)=>s[l],r),{target:t,key:i}}else return{target:t,key:e}}const l0=/-\d+$/;function lf(r,e,t){if(Nt.str(t)){if(l0.test(t)){const s=t.replace(l0,""),{target:l,key:c}=nd(r,s);Array.isArray(l[c])||(l[c]=[])}const{target:n,key:i}=nd(r,t);e.__r3f.previousAttach=n[i],n[i]=e}else e.__r3f.previousAttach=t(r,e)}function c0(r,e,t){var n,i;if(Nt.str(t)){const{target:s,key:l}=nd(r,t),c=e.__r3f.previousAttach;c===void 0?delete s[l]:s[l]=c}else(n=e.__r3f)==null||n.previousAttach==null||n.previousAttach(r,e);(i=e.__r3f)==null||delete i.previousAttach}function Pv(r,{children:e,key:t,ref:n,...i},{children:s,key:l,ref:c,...u}={},h=!1){const d=r.__r3f,p=Object.entries(i),m=[];if(h){const y=Object.keys(u);for(let E=0;E<y.length;E++)i.hasOwnProperty(y[E])||p.unshift([y[E],Rv+"remove"])}p.forEach(([y,E])=>{var x;if((x=r.__r3f)!=null&&x.primitive&&y==="object"||Nt.equ(E,u[y]))return;if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(y))return m.push([y,E,!0,[]]);let v=[];y.includes("-")&&(v=y.split("-")),m.push([y,E,!1,v]);for(const w in i){const M=i[w];w.startsWith(`${y}-`)&&m.push([w,M,!1,w.split("-")])}});const _={...i};return d!=null&&d.memoizedProps&&d!=null&&d.memoizedProps.args&&(_.args=d.memoizedProps.args),d!=null&&d.memoizedProps&&d!=null&&d.memoizedProps.attach&&(_.attach=d.memoizedProps.attach),{memoized:_,changes:m}}function cf(r,e){var t;const n=r.__r3f,i=n==null?void 0:n.root,s=i==null||i.getState==null?void 0:i.getState(),{memoized:l,changes:c}=LA(e)?e:Pv(r,e),u=n==null?void 0:n.eventCount;r.__r3f&&(r.__r3f.memoizedProps=l);for(let m=0;m<c.length;m++){let[_,y,E,x]=c[m];if(of(r)){const A="srgb",R="srgb-linear";_==="encoding"?(_="colorSpace",y=y===3001?A:R):_==="outputEncoding"&&(_="outputColorSpace",y=y===3001?A:R)}let v=r,w=v[_];if(x.length&&(w=x.reduce((M,A)=>M[A],r),!(w&&w.set))){const[M,...A]=x.reverse();v=A.reverse().reduce((R,P)=>R[P],r),_=M}if(y===Rv+"remove")if(v.constructor){let M=o0.get(v.constructor);M||(M=new v.constructor,o0.set(v.constructor,M)),y=M[_]}else y=0;if(E&&n)y?n.handlers[_]=y:delete n.handlers[_],n.eventCount=Object.keys(n.handlers).length;else if(w&&w.set&&(w.copy||w instanceof as)){if(Array.isArray(y))w.fromArray?w.fromArray(y):w.set(...y);else if(w.copy&&y&&y.constructor&&w.constructor===y.constructor)w.copy(y);else if(y!==void 0){var h;const M=(h=w)==null?void 0:h.isColor;!M&&w.setScalar?w.setScalar(y):w instanceof as&&y instanceof as?w.mask=y.mask:w.set(y),!Av()&&s&&!s.linear&&M&&w.convertSRGBToLinear()}}else{var d;if(v[_]=y,(d=v[_])!=null&&d.isTexture&&v[_].format===zn&&v[_].type===Ii&&s){const M=v[_];of(M)&&of(s.gl)?M.colorSpace=s.gl.outputColorSpace:M.encoding=s.gl.outputEncoding}}ea(r)}if(n&&n.parent&&r.raycast&&u!==n.eventCount){const m=Ic(r).getState().internal,_=m.interaction.indexOf(r);_>-1&&m.interaction.splice(_,1),n.eventCount&&m.interaction.push(r)}return!(c.length===1&&c[0][0]==="onUpdate")&&c.length&&(t=r.__r3f)!=null&&t.parent&&id(r),r}function ea(r){var e,t;const n=(e=r.__r3f)==null||(t=e.root)==null||t.getState==null?void 0:t.getState();n&&n.internal.frames===0&&n.invalidate()}function id(r){r.onUpdate==null||r.onUpdate(r)}function DA(r,e){r.manual||(bv(r)?(r.left=e.width/-2,r.right=e.width/2,r.top=e.height/2,r.bottom=e.height/-2):r.aspect=e.width/e.height,r.updateProjectionMatrix(),r.updateMatrixWorld())}function Mc(r){return(r.eventObject||r.object).uuid+"/"+r.index+r.instanceId}function NA(){var r;const e=typeof self<"u"&&self||typeof window<"u"&&window;if(!e)return sa.DefaultEventPriority;switch((r=e.event)==null?void 0:r.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return sa.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return sa.ContinuousEventPriority;default:return sa.DefaultEventPriority}}function Lv(r,e,t,n){const i=t.get(e);i&&(t.delete(e),t.size===0&&(r.delete(n),i.target.releasePointerCapture(n)))}function OA(r,e){const{internal:t}=r.getState();t.interaction=t.interaction.filter(n=>n!==e),t.initialHits=t.initialHits.filter(n=>n!==e),t.hovered.forEach((n,i)=>{(n.eventObject===e||n.object===e)&&t.hovered.delete(i)}),t.capturedMap.forEach((n,i)=>{Lv(t.capturedMap,e,n,i)})}function FA(r){function e(u){const{internal:h}=r.getState(),d=u.offsetX-h.initialClick[0],p=u.offsetY-h.initialClick[1];return Math.round(Math.sqrt(d*d+p*p))}function t(u){return u.filter(h=>["Move","Over","Enter","Out","Leave"].some(d=>{var p;return(p=h.__r3f)==null?void 0:p.handlers["onPointer"+d]}))}function n(u,h){const d=r.getState(),p=new Set,m=[],_=h?h(d.internal.interaction):d.internal.interaction;for(let v=0;v<_.length;v++){const w=Za(_[v]);w&&(w.raycaster.camera=void 0)}d.previousRoot||d.events.compute==null||d.events.compute(u,d);function y(v){const w=Za(v);if(!w||!w.events.enabled||w.raycaster.camera===null)return[];if(w.raycaster.camera===void 0){var M;w.events.compute==null||w.events.compute(u,w,(M=w.previousRoot)==null?void 0:M.getState()),w.raycaster.camera===void 0&&(w.raycaster.camera=null)}return w.raycaster.camera?w.raycaster.intersectObject(v,!0):[]}let E=_.flatMap(y).sort((v,w)=>{const M=Za(v.object),A=Za(w.object);return!M||!A?v.distance-w.distance:A.events.priority-M.events.priority||v.distance-w.distance}).filter(v=>{const w=Mc(v);return p.has(w)?!1:(p.add(w),!0)});d.events.filter&&(E=d.events.filter(E,d));for(const v of E){let w=v.object;for(;w;){var x;(x=w.__r3f)!=null&&x.eventCount&&m.push({...v,eventObject:w}),w=w.parent}}if("pointerId"in u&&d.internal.capturedMap.has(u.pointerId))for(let v of d.internal.capturedMap.get(u.pointerId).values())p.has(Mc(v.intersection))||m.push(v.intersection);return m}function i(u,h,d,p){const m=r.getState();if(u.length){const _={stopped:!1};for(const y of u){const E=Za(y.object)||m,{raycaster:x,pointer:v,camera:w,internal:M}=E,A=new D(v.x,v.y,0).unproject(w),R=L=>{var H,ee;return(H=(ee=M.capturedMap.get(L))==null?void 0:ee.has(y.eventObject))!=null?H:!1},P=L=>{const H={intersection:y,target:h.target};M.capturedMap.has(L)?M.capturedMap.get(L).set(y.eventObject,H):M.capturedMap.set(L,new Map([[y.eventObject,H]])),h.target.setPointerCapture(L)},I=L=>{const H=M.capturedMap.get(L);H&&Lv(M.capturedMap,y.eventObject,H,L)};let F={};for(let L in h){let H=h[L];typeof H!="function"&&(F[L]=H)}let b={...y,...F,pointer:v,intersections:u,stopped:_.stopped,delta:d,unprojectedPoint:A,ray:x.ray,camera:w,stopPropagation(){const L="pointerId"in h&&M.capturedMap.get(h.pointerId);if((!L||L.has(y.eventObject))&&(b.stopped=_.stopped=!0,M.hovered.size&&Array.from(M.hovered.values()).find(H=>H.eventObject===y.eventObject))){const H=u.slice(0,u.indexOf(y));s([...H,y])}},target:{hasPointerCapture:R,setPointerCapture:P,releasePointerCapture:I},currentTarget:{hasPointerCapture:R,setPointerCapture:P,releasePointerCapture:I},nativeEvent:h};if(p(b),_.stopped===!0)break}}return u}function s(u){const{internal:h}=r.getState();for(const d of h.hovered.values())if(!u.length||!u.find(p=>p.object===d.object&&p.index===d.index&&p.instanceId===d.instanceId)){const m=d.eventObject.__r3f,_=m==null?void 0:m.handlers;if(h.hovered.delete(Mc(d)),m!=null&&m.eventCount){const y={...d,intersections:u};_.onPointerOut==null||_.onPointerOut(y),_.onPointerLeave==null||_.onPointerLeave(y)}}}function l(u,h){for(let d=0;d<h.length;d++){const p=h[d].__r3f;p==null||p.handlers.onPointerMissed==null||p.handlers.onPointerMissed(u)}}function c(u){switch(u){case"onPointerLeave":case"onPointerCancel":return()=>s([]);case"onLostPointerCapture":return h=>{const{internal:d}=r.getState();"pointerId"in h&&d.capturedMap.has(h.pointerId)&&requestAnimationFrame(()=>{d.capturedMap.has(h.pointerId)&&(d.capturedMap.delete(h.pointerId),s([]))})}}return function(d){const{onPointerMissed:p,internal:m}=r.getState();m.lastEvent.current=d;const _=u==="onPointerMove",y=u==="onClick"||u==="onContextMenu"||u==="onDoubleClick",x=n(d,_?t:void 0),v=y?e(d):0;u==="onPointerDown"&&(m.initialClick=[d.offsetX,d.offsetY],m.initialHits=x.map(M=>M.eventObject)),y&&!x.length&&v<=2&&(l(d,m.interaction),p&&p(d)),_&&s(x);function w(M){const A=M.eventObject,R=A.__r3f,P=R==null?void 0:R.handlers;if(R!=null&&R.eventCount)if(_){if(P.onPointerOver||P.onPointerEnter||P.onPointerOut||P.onPointerLeave){const I=Mc(M),F=m.hovered.get(I);F?F.stopped&&M.stopPropagation():(m.hovered.set(I,M),P.onPointerOver==null||P.onPointerOver(M),P.onPointerEnter==null||P.onPointerEnter(M))}P.onPointerMove==null||P.onPointerMove(M)}else{const I=P[u];I?(!y||m.initialHits.includes(A))&&(l(d,m.interaction.filter(F=>!m.initialHits.includes(F))),I(M)):y&&m.initialHits.includes(A)&&l(d,m.interaction.filter(F=>!m.initialHits.includes(F)))}}i(x,d,v,w)}}return{handlePointer:c}}const Iv=r=>!!(r!=null&&r.render),Uv=fn.createContext(null),BA=(r,e)=>{const t=vA((c,u)=>{const h=new D,d=new D,p=new D;function m(v=u().camera,w=d,M=u().size){const{width:A,height:R,top:P,left:I}=M,F=A/R;w.isVector3?p.copy(w):p.set(...w);const b=v.getWorldPosition(h).distanceTo(p);if(bv(v))return{width:A/v.zoom,height:R/v.zoom,top:P,left:I,factor:1,distance:b,aspect:F};{const L=v.fov*Math.PI/180,H=2*Math.tan(L/2)*b,ee=H*(A/R);return{width:ee,height:H,top:P,left:I,factor:A/ee,distance:b,aspect:F}}}let _;const y=v=>c(w=>({performance:{...w.performance,current:v}})),E=new ce;return{set:c,get:u,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,scene:null,invalidate:(v=1)=>r(u(),v),advance:(v,w)=>e(v,w,u()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new Vd,pointer:E,mouse:E,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const v=u();_&&clearTimeout(_),v.performance.current!==v.performance.min&&y(v.performance.min),_=setTimeout(()=>y(u().performance.max),v.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:m},setEvents:v=>c(w=>({...w,events:{...w.events,...v}})),setSize:(v,w,M,A,R)=>{const P=u().camera,I={width:v,height:w,top:A||0,left:R||0,updateStyle:M};c(F=>({size:I,viewport:{...F.viewport,...m(P,d,I)}}))},setDpr:v=>c(w=>{const M=Cv(v);return{viewport:{...w.viewport,dpr:M,initialDpr:w.viewport.initialDpr||M}}}),setFrameloop:(v="always")=>{const w=u().clock;w.stop(),w.elapsedTime=0,v!=="never"&&(w.start(),w.elapsedTime=0),c(()=>({frameloop:v}))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:fn.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(v,w,M)=>{const A=u().internal;return A.priority=A.priority+(w>0?1:0),A.subscribers.push({ref:v,priority:w,store:M}),A.subscribers=A.subscribers.sort((R,P)=>R.priority-P.priority),()=>{const R=u().internal;R!=null&&R.subscribers&&(R.priority=R.priority-(w>0?1:0),R.subscribers=R.subscribers.filter(P=>P.ref!==v))}}}}}),n=t.getState();let i=n.size,s=n.viewport.dpr,l=n.camera;return t.subscribe(()=>{const{camera:c,size:u,viewport:h,gl:d,set:p}=t.getState();if(u.width!==i.width||u.height!==i.height||h.dpr!==s){var m;i=u,s=h.dpr,DA(c,u),d.setPixelRatio(h.dpr);const _=(m=u.updateStyle)!=null?m:typeof HTMLCanvasElement<"u"&&d.domElement instanceof HTMLCanvasElement;d.setSize(u.width,u.height,_)}c!==l&&(l=c,p(_=>({viewport:{..._.viewport,..._.viewport.getCurrentViewport(c)}})))}),t.subscribe(c=>r(c)),t};let Ec,zA=new Set,kA=new Set,HA=new Set;function uf(r,e){if(r.size)for(const{callback:t}of r.values())t(e)}function Ja(r,e){switch(r){case"before":return uf(zA,e);case"after":return uf(kA,e);case"tail":return uf(HA,e)}}let hf,ff;function df(r,e,t){let n=e.clock.getDelta();for(e.frameloop==="never"&&typeof r=="number"&&(n=r-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=r),hf=e.internal.subscribers,Ec=0;Ec<hf.length;Ec++)ff=hf[Ec],ff.ref.current(ff.store.getState(),n,t);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),e.frameloop==="always"?1:e.internal.frames}function VA(r){let e=!1,t=!1,n,i,s;function l(h){i=requestAnimationFrame(l),e=!0,n=0,Ja("before",h),t=!0;for(const p of r.values()){var d;s=p.store.getState(),s.internal.active&&(s.frameloop==="always"||s.internal.frames>0)&&!((d=s.gl.xr)!=null&&d.isPresenting)&&(n+=df(h,s))}if(t=!1,Ja("after",h),n===0)return Ja("tail",h),e=!1,cancelAnimationFrame(i)}function c(h,d=1){var p;if(!h)return r.forEach(m=>c(m.store.getState(),d));(p=h.gl.xr)!=null&&p.isPresenting||!h.internal.active||h.frameloop==="never"||(d>1?h.internal.frames=Math.min(60,h.internal.frames+d):t?h.internal.frames=2:h.internal.frames=1,e||(e=!0,requestAnimationFrame(l)))}function u(h,d=!0,p,m){if(d&&Ja("before",h),p)df(h,p,m);else for(const _ of r.values())df(h,_.store.getState());d&&Ja("after",h)}return{loop:l,invalidate:c,advance:u}}function Dv(){const r=fn.useContext(Uv);if(!r)throw new Error("R3F: Hooks can only be used within the Canvas component!");return r}function QA(r=t=>t,e){return Dv()(r,e)}function $A(r,e=0){const t=Dv(),n=t.getState().internal.subscribe,i=CA(r);return pu(()=>n(i,e,t),[e,n,t]),null}const u0=new WeakMap;function Nv(r,e){return function(t,...n){let i=u0.get(t);return i||(i=new t,u0.set(t,i)),r&&r(i),Promise.all(n.map(s=>new Promise((l,c)=>i.load(s,u=>{u.scene&&Object.assign(u,IA(u.scene)),l(u)},e,u=>c(new Error(`Could not load ${s}: ${u==null?void 0:u.message}`))))))}}function Ov(r,e,t,n){const i=Array.isArray(e)?e:[e],s=xA(Nv(t,n),[r,...i],{equal:Nt.equ});return Array.isArray(e)?s:s[0]}Ov.preload=function(r,e,t){const n=Array.isArray(e)?e:[e];return SA(Nv(t),[r,...n])};Ov.clear=function(r,e){const t=Array.isArray(e)?e:[e];return MA([r,...t])};const fa=new Map,{invalidate:h0,advance:f0}=VA(fa),{reconciler:Bc,applyProps:js}=RA(fa,NA),Qs={objects:"shallow",strict:!1},GA=(r,e)=>{const t=typeof r=="function"?r(e):r;return Iv(t)?t:new wd({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...r})};function WA(r,e){const t=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement;if(e){const{width:n,height:i,top:s,left:l,updateStyle:c=t}=e;return{width:n,height:i,top:s,left:l,updateStyle:c}}else if(typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement&&r.parentElement){const{width:n,height:i,top:s,left:l}=r.parentElement.getBoundingClientRect();return{width:n,height:i,top:s,left:l,updateStyle:t}}else if(typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas)return{width:r.width,height:r.height,top:0,left:0,updateStyle:t};return{width:0,height:0,top:0,left:0}}function eb(r){const e=fa.get(r),t=e==null?void 0:e.fiber,n=e==null?void 0:e.store;e&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,s=n||BA(h0,f0),l=t||Bc.createContainer(s,sa.ConcurrentRoot,null,!1,null,"",i,null);e||fa.set(r,{fiber:l,store:s});let c,u=!1,h;return{configure(d={}){let{gl:p,size:m,scene:_,events:y,onCreated:E,shadows:x=!1,linear:v=!1,flat:w=!1,legacy:M=!1,orthographic:A=!1,frameloop:R="always",dpr:P=[1,2],performance:I,raycaster:F,camera:b,onPointerMissed:L}=d,H=s.getState(),ee=H.gl;H.gl||H.set({gl:ee=GA(p,r)});let oe=H.raycaster;oe||H.set({raycaster:oe=new Sv});const{params:V,...$}=F||{};if(Nt.equ($,oe,Qs)||js(oe,{...$}),Nt.equ(V,oe.params,Qs)||js(oe,{params:{...oe.params,...V}}),!H.camera||H.camera===h&&!Nt.equ(h,b,Qs)){h=b;const Y=b instanceof Co,k=Y?b:A?new Io(0,0,0,0,.1,1e3):new dn(75,0,.1,1e3);Y||(k.position.z=5,b&&(js(k,b),("aspect"in b||"left"in b||"right"in b||"bottom"in b||"top"in b)&&(k.manual=!0,k.updateProjectionMatrix())),!H.camera&&!(b!=null&&b.rotation)&&k.lookAt(0,0,0)),H.set({camera:k}),oe.camera=k}if(!H.scene){let Y;_!=null&&_.isScene?Y=_:(Y=new Td,_&&js(Y,_)),H.set({scene:$s(Y)})}if(!H.xr){var ae;const Y=(fe,Me)=>{const Te=s.getState();Te.frameloop!=="never"&&f0(fe,!0,Te,Me)},k=()=>{const fe=s.getState();fe.gl.xr.enabled=fe.gl.xr.isPresenting,fe.gl.xr.setAnimationLoop(fe.gl.xr.isPresenting?Y:null),fe.gl.xr.isPresenting||h0(fe)},Q={connect(){const fe=s.getState().gl;fe.xr.addEventListener("sessionstart",k),fe.xr.addEventListener("sessionend",k)},disconnect(){const fe=s.getState().gl;fe.xr.removeEventListener("sessionstart",k),fe.xr.removeEventListener("sessionend",k)}};typeof((ae=ee.xr)==null?void 0:ae.addEventListener)=="function"&&Q.connect(),H.set({xr:Q})}if(ee.shadowMap){const Y=ee.shadowMap.enabled,k=ee.shadowMap.type;if(ee.shadowMap.enabled=!!x,Nt.boo(x))ee.shadowMap.type=Qa;else if(Nt.str(x)){var se;const Q={basic:g0,percentage:kc,soft:Qa,variance:pi};ee.shadowMap.type=(se=Q[x])!=null?se:Qa}else Nt.obj(x)&&Object.assign(ee.shadowMap,x);(Y!==ee.shadowMap.enabled||k!==ee.shadowMap.type)&&(ee.shadowMap.needsUpdate=!0)}const q=Av();q&&("enabled"in q?q.enabled=!M:"legacyMode"in q&&(q.legacyMode=M)),u||js(ee,{outputEncoding:v?3e3:3001,toneMapping:w?Li:ad}),H.legacy!==M&&H.set(()=>({legacy:M})),H.linear!==v&&H.set(()=>({linear:v})),H.flat!==w&&H.set(()=>({flat:w})),p&&!Nt.fun(p)&&!Iv(p)&&!Nt.equ(p,ee,Qs)&&js(ee,p),y&&!H.events.handlers&&H.set({events:y(s)});const X=WA(r,m);return Nt.equ(X,H.size,Qs)||H.setSize(X.width,X.height,X.updateStyle,X.top,X.left),P&&H.viewport.dpr!==Cv(P)&&H.setDpr(P),H.frameloop!==R&&H.setFrameloop(R),H.onPointerMissed||H.set({onPointerMissed:L}),I&&!Nt.equ(I,H.performance,Qs)&&H.set(Y=>({performance:{...Y.performance,...I}})),c=E,u=!0,this},render(d){return u||this.configure(),Bc.updateContainer(d0.jsx(XA,{store:s,children:d,onCreated:c,rootElement:r}),l,null,()=>{}),s},unmount(){qA(r)}}}function XA({store:r,children:e,onCreated:t,rootElement:n}){return pu(()=>{const i=r.getState();i.set(s=>({internal:{...s.internal,active:!0}})),t&&t(i),r.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),d0.jsx(Uv.Provider,{value:r,children:e})}function qA(r,e){const t=fa.get(r),n=t==null?void 0:t.fiber;if(n){const i=t==null?void 0:t.store.getState();i&&(i.internal.active=!1),Bc.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var s,l,c,u;i.events.disconnect==null||i.events.disconnect(),(s=i.gl)==null||(l=s.renderLists)==null||l.dispose==null||l.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(u=i.gl)!=null&&u.xr&&i.xr.disconnect(),UA(i),fa.delete(r)}catch{}},500)})}}Bc.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:fn.version});const pf={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function tb(r){const{handlePointer:e}=FA(r);return{priority:1,enabled:!0,compute(t,n,i){n.pointer.set(t.offsetX/n.size.width*2-1,-(t.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(pf).reduce((t,n)=>({...t,[n]:e(n)}),{}),update:()=>{var t;const{events:n,internal:i}=r.getState();(t=i.lastEvent)!=null&&t.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:t=>{var n;const{set:i,events:s}=r.getState();s.disconnect==null||s.disconnect(),i(l=>({events:{...l.events,connected:t}})),Object.entries((n=s.handlers)!=null?n:[]).forEach(([l,c])=>{const[u,h]=pf[l];t.addEventListener(u,c,{passive:h})})},disconnect:()=>{const{set:t,events:n}=r.getState();if(n.connected){var i;Object.entries((i=n.handlers)!=null?i:[]).forEach(([s,l])=>{if(n&&n.connected instanceof HTMLElement){const[c]=pf[s];n.connected.removeEventListener(c,l)}}),t(s=>({events:{...s.events,connected:void 0}}))}}}}export{br as $,Rd as A,jA as B,De as C,hv as D,PA as E,nr as F,An as G,In as H,D_ as I,Nd as J,Ri as K,Vn as L,J_ as M,$a as N,Et as O,uv as P,Hn as Q,zc as R,cv as S,ZA as T,Cr as U,ce as V,yt as W,mt as X,U_ as Y,gn as Z,Fi as _,pu as a,N_ as a0,O_ as a1,ia as a2,dn as a3,Ex as a4,Io as a5,jc as a6,wo as a7,bd as a8,lo as a9,co as aa,cs as ab,Kt as ac,Eo as ad,Mo as ae,_a as af,er as ag,Oo as ah,Oi as ai,_i as aj,gv as ak,Fe as al,YT as am,q_ as an,Ni as ao,v_ as ap,we as aq,Rt as ar,QT as as,QA as at,V_ as au,Ov as av,$A as aw,tb as b,eb as c,qA as d,JA as e,By as f,ky as g,zy as h,KA as i,ed as j,lt as k,D as l,ha as m,yT as n,TT as o,It as p,Kc as q,Ar as r,od as s,Dc as t,CA as u,Jt as v,Zt as w,ao as x,oo as y,Tn as z};
